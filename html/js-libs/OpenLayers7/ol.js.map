{"version":3,"file":"ol.js","sources":["../ol/AssertionError.js","../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/has.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageBase.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/dom.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/layer/Layer.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/css.js","../ol/render/canvas.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/KeyCode.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/size.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/VectorTile.js","../ol/colorlike.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/reproj/common.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/structs/RBush.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/source/DataTile.js","../ol/source/GeoTIFF.js","../ol/source/Zoomify.js","../ol/format/IIIFInfo.js","../ol/source/IIIF.js","../ol/reproj/Image.js","../ol/source/Image.js","../ol/uri.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/Stamen.js","../ol/source/UTFGrid.js","../ol/source/VectorTile.js","../ol/tilegrid/WMTS.js","../ol/webgl.js","../ol/xml.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/vec/mat4.js","../ol/webgl/Helper.js","../ol/webgl/PaletteTexture.js","../ol/webgl/RenderTarget.js","../ol/webgl/TileTexture.js","../ol/renderer/webgl/Layer.js","../ol/renderer/webgl/TileLayer.js","../ol/style/expressions.js","../ol/webgl/ShaderBuilder.js","../ol/style/Image.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/IconImage.js","../ol/style/Icon.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Text.js","../ol/style/flat.js","../ol/source/ogcTileUtil.js","../ol/source/common.js","../ol/layer/BaseVector.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/worker/webgl.js","../ol/renderer/webgl/PointsLayer.js","../ol/render/webgl/BatchRenderer.js","../ol/render/webgl/LineStringBatchRenderer.js","../ol/render/webgl/MixedGeometryBatch.js","../ol/render/webgl/PointBatchRenderer.js","../ol/render/webgl/PolygonBatchRenderer.js","../ol/renderer/webgl/shaders.js","../ol/renderer/webgl/VectorLayer.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/geom/flat/length.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/renderer/canvas/VectorTileLayer.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/layer/Heatmap.js","../ol/format/Feature.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/layer/VectorTile.js","../ol/layer/MapboxVector.js","../ol/layer/WebGLTile.js","../ol/interaction/DragAndDrop.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/JSONFeature.js","../ol/format/EsriJSON.js","../ol/format/XMLFeature.js","../ol/format/GMLBase.js","../ol/format/xsd.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML.js","../ol/format/GML32.js","../ol/format/GPX.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/filter/Spatial.js","../ol/format/filter/Contains.js","../ol/format/filter/DWithin.js","../ol/format/filter/Disjoint.js","../ol/format/filter/Comparison.js","../ol/format/filter/During.js","../ol/format/filter/ComparisonBinary.js","../ol/format/filter/EqualTo.js","../ol/format/filter/GreaterThan.js","../ol/format/filter/GreaterThanOrEqualTo.js","../ol/format/filter/Intersects.js","../ol/format/filter/IsBetween.js","../ol/format/filter/IsLike.js","../ol/format/filter/IsNull.js","../ol/format/filter/LessThan.js","../ol/format/filter/LessThanOrEqualTo.js","../ol/format/filter/Not.js","../ol/format/filter/NotEqualTo.js","../ol/format/filter/Or.js","../ol/format/filter/ResourceId.js","../ol/format/filter/Within.js","../ol/format/filter.js","../ol/format/WFS.js","../ol/format/WKB.js","../ol/format/WKT.js","../ol/format/WMSCapabilities.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../index.js","../ol/control/ZoomToExtent.js","../ol/format/WMSGetFeatureInfo.js","../ol/geom/flat/topology.js","../ol/interaction/DragRotateAndZoom.js","../ol/layer/VectorImage.js","../ol/layer/WebGLPoints.js","../ol/proj/proj4.js","../ol/source/CartoDB.js","../ol/source/Cluster.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/ImageMapGuide.js","../ol/source/ImageStatic.js","../ol/source/OGCMapTile.js","../ol/source/OGCVectorTile.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/WMTS.js","../ol/source.js","../ol/structs/LinkedList.js"],"sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * Data that can be used with a DataTile.  For increased browser compatibility, use\n * Uint8Array instead of Uint8ClampedArray where possible.\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} Data\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size}\n     * @private\n     */\n    this.size_ = options.size || [256, 256];\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nclass GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes|\n *     'error', Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const canvasPixelRatio = event.inversePixelTransform[0];\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    requestJSONP(\n      url,\n      this.handleImageryMetadataResponse.bind(this),\n      undefined,\n      'jsonp'\n    );\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(\n                tileCoord[0],\n                tileCoord[1],\n                tileCoord[2],\n                quadKeyTileCoord\n              );\n              let url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions(\n        function (frameState) {\n          const attributions = [];\n          const viewState = frameState.viewState;\n          const tileGrid = this.getTileGrid();\n          const z = tileGrid.getZForResolution(\n            viewState.resolution,\n            this.zDirection\n          );\n          const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n            viewState.center,\n            z\n          );\n          const zoom = tileCoord[0];\n          resource.imageryProviders.map(function (imageryProvider) {\n            let intersecting = false;\n            const coverageAreas = imageryProvider.coverageAreas;\n            for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n              const coverageArea = coverageAreas[i];\n              if (\n                zoom >= coverageArea.zoomMin &&\n                zoom <= coverageArea.zoomMax\n              ) {\n                const bbox = coverageArea.bbox;\n                const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                const extent = applyTransform(epsg4326Extent, transform);\n                if (intersects(extent, frameState.extent)) {\n                  intersecting = true;\n                  break;\n                }\n              }\n            }\n            if (intersecting) {\n              attributions.push(imageryProvider.attribution);\n            }\n          });\n\n          attributions.push(TOS_ATTRIBUTION);\n          return attributions;\n        }.bind(this)\n      );\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return this.gutter_;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {\n  Pool,\n  globals as geotiffGlobals,\n  fromBlob as tiffFromBlob,\n  fromUrl as tiffFromUrl,\n  fromUrls as tiffFromUrls,\n} from 'geotiff';\nimport {\n  Projection,\n  get as getCachedProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {clamp} from '../math.js';\nimport {getCenter, getIntersection} from '../extent.js';\nimport {fromCode as unitsFromCode} from '../proj/Units.js';\n\n/**\n * Determine if an image type is a mask.\n * See https://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} The image is a mask.\n */\nfunction isMask(image) {\n  const fileDirectory = image.fileDirectory;\n  const type = fileDirectory.NewSubfileType || 0;\n  return (type & 4) === 4;\n}\n\n/**\n * @param {true|false|'auto'} preference The convertToRGB option.\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} Use the `image.readRGB()` method.\n */\nfunction readRGB(preference, image) {\n  if (!preference) {\n    return false;\n  }\n  if (preference === true) {\n    return true;\n  }\n  if (image.getSamplesPerPixel() !== 3) {\n    return false;\n  }\n  const interpretation = image.fileDirectory.PhotometricInterpretation;\n  const interpretations = geotiffGlobals.photometricInterpretations;\n  return (\n    interpretation === interpretations.CMYK ||\n    interpretation === interpretations.YCbCr ||\n    interpretation === interpretations.CIELab ||\n    interpretation === interpretations.ICCLab\n  );\n}\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\n\nconst STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nconst STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\n\nlet workerPool;\nfunction getWorkerPool() {\n  if (!workerPool) {\n    workerPool = new Pool();\n  }\n  return workerPool;\n}\n\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n  try {\n    return image.getBoundingBox();\n  } catch (_) {\n    const fileDirectory = image.fileDirectory;\n    return [0, 0, fileDirectory.ImageWidth, fileDirectory.ImageLength];\n  }\n}\n\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n  try {\n    return image.getOrigin().slice(0, 2);\n  } catch (_) {\n    return [0, image.fileDirectory.ImageLength];\n  }\n}\n\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n  try {\n    return image.getResolution(referenceImage);\n  } catch (_) {\n    return [\n      referenceImage.fileDirectory.ImageWidth / image.fileDirectory.ImageWidth,\n      referenceImage.fileDirectory.ImageHeight /\n        image.fileDirectory.ImageHeight,\n    ];\n  }\n}\n\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n  const geoKeys = image.geoKeys;\n  if (!geoKeys) {\n    return null;\n  }\n\n  if (geoKeys.ProjectedCSTypeGeoKey) {\n    const code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  if (geoKeys.GeographicTypeGeoKey) {\n    const code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  return null;\n}\n\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n  return tiff.getImageCount().then(function (count) {\n    const requests = new Array(count);\n    for (let i = 0; i < count; ++i) {\n      requests[i] = tiff.getImage(i);\n    }\n    return Promise.all(requests);\n  });\n}\n\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n  let request;\n  if (source.blob) {\n    request = tiffFromBlob(source.blob);\n  } else if (source.overviews) {\n    request = tiffFromUrls(source.url, source.overviews, options);\n  } else {\n    request = tiffFromUrl(source.url, options);\n  }\n  return request.then(getImagesForTIFF);\n}\n\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n  if (Array.isArray(expected)) {\n    const length = expected.length;\n    if (!Array.isArray(got) || length != got.length) {\n      const error = new Error(message);\n      rejector(error);\n      throw error;\n    }\n    for (let i = 0; i < length; ++i) {\n      assertEqual(expected[i], got[i], tolerance, message, rejector);\n    }\n    return;\n  }\n\n  got = /** @type {number} */ (got);\n  if (Math.abs(expected - got) > tolerance * expected) {\n    throw new Error(message);\n  }\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n  if (array instanceof Int8Array) {\n    return -128;\n  }\n  if (array instanceof Int16Array) {\n    return -32768;\n  }\n  if (array instanceof Int32Array) {\n    return -2147483648;\n  }\n  if (array instanceof Float32Array) {\n    return 1.2e-38;\n  }\n  return 0;\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n  if (array instanceof Int8Array) {\n    return 127;\n  }\n  if (array instanceof Uint8Array) {\n    return 255;\n  }\n  if (array instanceof Uint8ClampedArray) {\n    return 255;\n  }\n  if (array instanceof Int16Array) {\n    return 32767;\n  }\n  if (array instanceof Uint16Array) {\n    return 65535;\n  }\n  if (array instanceof Int32Array) {\n    return 2147483647;\n  }\n  if (array instanceof Uint32Array) {\n    return 4294967295;\n  }\n  if (array instanceof Float32Array) {\n    return 3.4e38;\n  }\n  return 255;\n}\n\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {true|false|'auto'} [convertToRGB=false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.  Setting the option to `'auto'` will make it so CMYK, YCbCr,\n * CIELab, and ICCLab images will automatically be converted to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * **Note for users of the full build**: The `GeoTIFF` source requires the\n * [geotiff.js](https://github.com/geotiffjs/geotiff.js) library to be loaded as well.\n *\n * @api\n */\nclass GeoTIFFSource extends DataTile {\n  /**\n   * @param {Options} options Data tile options.\n   */\n  constructor(options) {\n    super({\n      state: 'loading',\n      tileGrid: null,\n      projection: null,\n      opaque: options.opaque,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {Array<SourceInfo>}\n     * @private\n     */\n    this.sourceInfo_ = options.sources;\n\n    const numSources = this.sourceInfo_.length;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.sourceOptions_ = options.sourceOptions;\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceImagery_ = new Array(numSources);\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceMasks_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.resolutionFactors_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.samplesPerPixel_;\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.nodataValues_;\n\n    /**\n     * @type {Array<Array<GDALMetadata>>}\n     * @private\n     */\n    this.metadata_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.normalize_ = options.normalize !== false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.addAlpha_ = false;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {true|false|'auto'}\n     */\n    this.convertToRGB_ = options.convertToRGB || false;\n\n    this.setKey(this.sourceInfo_.map((source) => source.url).join(','));\n\n    const self = this;\n    const requests = new Array(numSources);\n    for (let i = 0; i < numSources; ++i) {\n      requests[i] = getImagesForSource(\n        this.sourceInfo_[i],\n        this.sourceOptions_\n      );\n    }\n    Promise.all(requests)\n      .then(function (sources) {\n        self.configure_(sources);\n      })\n      .catch(function (error) {\n        console.error(error); // eslint-disable-line no-console\n        self.error_ = error;\n        self.setState('error');\n      });\n  }\n\n  /**\n   * @return {Error} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * geotiffSource.on('change', () => {\n   *   if (geotiffSource.getState() === 'error') {\n   *     console.error(geotiffSource.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n   * must have the same internal tiled structure.\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   * @private\n   */\n  configure_(sources) {\n    let extent;\n    let origin;\n    let commonRenderTileSizes;\n    let commonSourceTileSizes;\n    let resolutions;\n    const samplesPerPixel = new Array(sources.length);\n    const nodataValues = new Array(sources.length);\n    const metadata = new Array(sources.length);\n    let minZoom = 0;\n\n    const sourceCount = sources.length;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const images = [];\n      const masks = [];\n      sources[sourceIndex].forEach((item) => {\n        if (isMask(item)) {\n          masks.push(item);\n        } else {\n          images.push(item);\n        }\n      });\n\n      const imageCount = images.length;\n      if (masks.length > 0 && masks.length !== imageCount) {\n        throw new Error(\n          `Expected one mask per image found ${masks.length} masks and ${imageCount} images`\n        );\n      }\n\n      let sourceExtent;\n      let sourceOrigin;\n      const sourceTileSizes = new Array(imageCount);\n      const renderTileSizes = new Array(imageCount);\n      const sourceResolutions = new Array(imageCount);\n\n      nodataValues[sourceIndex] = new Array(imageCount);\n      metadata[sourceIndex] = new Array(imageCount);\n\n      for (let imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n        const image = images[imageIndex];\n        const nodataValue = image.getGDALNoData();\n        metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n        nodataValues[sourceIndex][imageIndex] = nodataValue;\n\n        const wantedSamples = this.sourceInfo_[sourceIndex].bands;\n        samplesPerPixel[sourceIndex] = wantedSamples\n          ? wantedSamples.length\n          : image.getSamplesPerPixel();\n        const level = imageCount - (imageIndex + 1);\n\n        if (!sourceExtent) {\n          sourceExtent = getBoundingBox(image);\n        }\n\n        if (!sourceOrigin) {\n          sourceOrigin = getOrigin(image);\n        }\n\n        const imageResolutions = getResolutions(image, images[0]);\n        sourceResolutions[level] = imageResolutions[0];\n\n        const sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n        sourceTileSizes[level] = sourceTileSize;\n\n        const aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n        renderTileSizes[level] = [\n          sourceTileSize[0],\n          sourceTileSize[1] / aspectRatio,\n        ];\n      }\n\n      if (!extent) {\n        extent = sourceExtent;\n      } else {\n        getIntersection(extent, sourceExtent, extent);\n      }\n\n      if (!origin) {\n        origin = sourceOrigin;\n      } else {\n        const message = `Origin mismatch for source ${sourceIndex}, got [${sourceOrigin}] but expected [${origin}]`;\n        assertEqual(origin, sourceOrigin, 0, message, this.viewRejector);\n      }\n\n      if (!resolutions) {\n        resolutions = sourceResolutions;\n        this.resolutionFactors_[sourceIndex] = 1;\n      } else {\n        if (resolutions.length - minZoom > sourceResolutions.length) {\n          minZoom = resolutions.length - sourceResolutions.length;\n        }\n        const resolutionFactor =\n          resolutions[resolutions.length - 1] /\n          sourceResolutions[sourceResolutions.length - 1];\n        this.resolutionFactors_[sourceIndex] = resolutionFactor;\n        const scaledSourceResolutions = sourceResolutions.map(\n          (resolution) => (resolution *= resolutionFactor)\n        );\n        const message = `Resolution mismatch for source ${sourceIndex}, got [${scaledSourceResolutions}] but expected [${resolutions}]`;\n        assertEqual(\n          resolutions.slice(minZoom, resolutions.length),\n          scaledSourceResolutions,\n          0.02,\n          message,\n          this.viewRejector\n        );\n      }\n\n      if (!commonRenderTileSizes) {\n        commonRenderTileSizes = renderTileSizes;\n      } else {\n        assertEqual(\n          commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length),\n          renderTileSizes,\n          0.01,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      if (!commonSourceTileSizes) {\n        commonSourceTileSizes = sourceTileSizes;\n      } else {\n        assertEqual(\n          commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length),\n          sourceTileSizes,\n          0,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      this.sourceImagery_[sourceIndex] = images.reverse();\n      this.sourceMasks_[sourceIndex] = masks.reverse();\n    }\n\n    for (let i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n      const sourceImagery = this.sourceImagery_[i];\n      while (sourceImagery.length < resolutions.length) {\n        sourceImagery.unshift(undefined);\n      }\n    }\n\n    if (!this.getProjection()) {\n      const firstSource = sources[0];\n      for (let i = firstSource.length - 1; i >= 0; --i) {\n        const image = firstSource[i];\n        const projection = getProjection(image);\n        if (projection) {\n          this.projection = projection;\n          break;\n        }\n      }\n    }\n\n    this.samplesPerPixel_ = samplesPerPixel;\n    this.nodataValues_ = nodataValues;\n    this.metadata_ = metadata;\n\n    // decide if we need to add an alpha band to handle nodata\n    outer: for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      // option 1: source is configured with a nodata value\n      if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n        this.addAlpha_ = true;\n        break;\n      }\n      if (this.sourceMasks_[sourceIndex].length) {\n        this.addAlpha_ = true;\n        break;\n      }\n\n      const values = nodataValues[sourceIndex];\n\n      // option 2: check image metadata for limited bands\n      const bands = this.sourceInfo_[sourceIndex].bands;\n      if (bands) {\n        for (let i = 0; i < bands.length; ++i) {\n          if (values[bands[i] - 1] !== null) {\n            this.addAlpha_ = true;\n            break outer;\n          }\n        }\n        continue;\n      }\n\n      // option 3: check image metadata for all bands\n      for (let imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n        if (values[imageIndex] !== null) {\n          this.addAlpha_ = true;\n          break outer;\n        }\n      }\n    }\n\n    let bandCount = this.addAlpha_ ? 1 : 0;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      bandCount += samplesPerPixel[sourceIndex];\n    }\n    this.bandCount = bandCount;\n\n    const tileGrid = new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: resolutions,\n      tileSizes: commonRenderTileSizes,\n    });\n\n    this.tileGrid = tileGrid;\n    this.setTileSizes(commonSourceTileSizes);\n\n    this.setLoader(this.loadTile_.bind(this));\n    this.setState('ready');\n\n    let zoom = 0;\n    if (resolutions.length === 1) {\n      resolutions = [resolutions[0] * 2, resolutions[0]];\n      zoom = 1;\n    }\n    this.viewResolver({\n      showFullExtent: true,\n      projection: this.projection,\n      resolutions: resolutions,\n      center: toUserCoordinate(getCenter(extent), this.projection),\n      extent: toUserExtent(extent, this.projection),\n      zoom: zoom,\n    });\n  }\n\n  /**\n   * @param {number} z The z tile index.\n   * @param {number} x The x tile index.\n   * @param {number} y The y tile index.\n   * @return {Promise} The composed tile data.\n   * @private\n   */\n  loadTile_(z, x, y) {\n    const sourceTileSize = this.getTileSize(z);\n    const sourceCount = this.sourceImagery_.length;\n    const requests = new Array(sourceCount * 2);\n    const nodataValues = this.nodataValues_;\n    const sourceInfo = this.sourceInfo_;\n    const pool = getWorkerPool();\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const source = sourceInfo[sourceIndex];\n      const resolutionFactor = this.resolutionFactors_[sourceIndex];\n      const pixelBounds = [\n        Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n        Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n        Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n        Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n      ];\n      const image = this.sourceImagery_[sourceIndex][z];\n      let samples;\n      if (source.bands) {\n        samples = source.bands.map(function (bandNumber) {\n          return bandNumber - 1;\n        });\n      }\n\n      /** @type {number|Array<number>} */\n      let fillValue;\n      if ('nodata' in source && source.nodata !== null) {\n        fillValue = source.nodata;\n      } else {\n        if (!samples) {\n          fillValue = nodataValues[sourceIndex];\n        } else {\n          fillValue = samples.map(function (sampleIndex) {\n            return nodataValues[sourceIndex][sampleIndex];\n          });\n        }\n      }\n\n      const readOptions = {\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: samples,\n        fillValue: fillValue,\n        pool: pool,\n        interleave: false,\n      };\n      if (readRGB(this.convertToRGB_, image)) {\n        requests[sourceIndex] = image.readRGB(readOptions);\n      } else {\n        requests[sourceIndex] = image.readRasters(readOptions);\n      }\n\n      // requests after `sourceCount` are for mask data (if any)\n      const maskIndex = sourceCount + sourceIndex;\n      const mask = this.sourceMasks_[sourceIndex][z];\n      if (!mask) {\n        requests[maskIndex] = Promise.resolve(null);\n        continue;\n      }\n\n      requests[maskIndex] = mask.readRasters({\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: [0],\n        pool: pool,\n        interleave: false,\n      });\n    }\n\n    return Promise.all(requests)\n      .then(this.composeTile_.bind(this, sourceTileSize))\n      .catch(function (error) {\n        console.error(error); // eslint-disable-line no-console\n        throw error;\n      });\n  }\n\n  /**\n   * @param {import(\"../size.js\").Size} sourceTileSize The source tile size.\n   * @param {Array} sourceSamples The source samples.\n   * @return {import(\"../DataTile.js\").Data} The composed tile data.\n   * @private\n   */\n  composeTile_(sourceTileSize, sourceSamples) {\n    const metadata = this.metadata_;\n    const sourceInfo = this.sourceInfo_;\n    const sourceCount = this.sourceImagery_.length;\n    const bandCount = this.bandCount;\n    const samplesPerPixel = this.samplesPerPixel_;\n    const nodataValues = this.nodataValues_;\n    const normalize = this.normalize_;\n    const addAlpha = this.addAlpha_;\n\n    const pixelCount = sourceTileSize[0] * sourceTileSize[1];\n    const dataLength = pixelCount * bandCount;\n\n    /** @type {Uint8Array|Float32Array} */\n    let data;\n    if (normalize) {\n      data = new Uint8Array(dataLength);\n    } else {\n      data = new Float32Array(dataLength);\n    }\n\n    let dataIndex = 0;\n    for (let pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n      let transparent = addAlpha;\n      for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n        const source = sourceInfo[sourceIndex];\n\n        let min = source.min;\n        let max = source.max;\n        let gain, bias;\n        if (normalize) {\n          const stats = metadata[sourceIndex][0];\n          if (min === undefined) {\n            if (stats && STATISTICS_MINIMUM in stats) {\n              min = parseFloat(stats[STATISTICS_MINIMUM]);\n            } else {\n              min = getMinForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n          if (max === undefined) {\n            if (stats && STATISTICS_MAXIMUM in stats) {\n              max = parseFloat(stats[STATISTICS_MAXIMUM]);\n            } else {\n              max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n\n          gain = 255 / (max - min);\n          bias = -min * gain;\n        }\n\n        for (\n          let sampleIndex = 0;\n          sampleIndex < samplesPerPixel[sourceIndex];\n          ++sampleIndex\n        ) {\n          const sourceValue =\n            sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n\n          let value;\n          if (normalize) {\n            value = clamp(gain * sourceValue + bias, 0, 255);\n          } else {\n            value = sourceValue;\n          }\n\n          if (!addAlpha) {\n            data[dataIndex] = value;\n          } else {\n            let nodata = source.nodata;\n            if (nodata === undefined) {\n              let bandIndex;\n              if (source.bands) {\n                bandIndex = source.bands[sampleIndex] - 1;\n              } else {\n                bandIndex = sampleIndex;\n              }\n              nodata = nodataValues[sourceIndex][bandIndex];\n            }\n\n            const nodataIsNaN = isNaN(nodata);\n            if (\n              (!nodataIsNaN && sourceValue !== nodata) ||\n              (nodataIsNaN && !isNaN(sourceValue))\n            ) {\n              transparent = false;\n              data[dataIndex] = value;\n            }\n          }\n          dataIndex++;\n        }\n        if (!transparent) {\n          const maskIndex = sourceCount + sourceIndex;\n          const mask = sourceSamples[maskIndex];\n          if (mask && !mask[0][pixelIndex]) {\n            transparent = true;\n          }\n        }\n      }\n      if (addAlpha) {\n        if (!transparent) {\n          data[dataIndex] = 255;\n        }\n        dataIndex++;\n      }\n    }\n\n    return data;\n  }\n}\n\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\n\nexport default GeoTIFFSource;\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport TileState from '../TileState.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {getCenter} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'default' | 'truncated'} TierSizeCalculation\n */\n\nexport class CustomTile extends ImageTile {\n  /**\n   * @param {import(\"../size.js\").Size} tileSize Full tile size.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    tileSize,\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    options\n  ) {\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = tileSize;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    const image = super.getImage();\n    if (this.state == TileState.LOADED) {\n      const tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} url URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {TierSizeCalculation} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} size Size.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nclass Zoomify extends TileImage {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const size = options.size;\n    const tierSizeCalculation =\n      options.tierSizeCalculation !== undefined\n        ? options.tierSizeCalculation\n        : 'default';\n\n    const tilePixelRatio = options.tilePixelRatio || 1;\n    const imageWidth = size[0];\n    const imageHeight = size[1];\n    const tierSizeInTiles = [];\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    let tileSizeForTierSizeCalculation = tileSize * tilePixelRatio;\n\n    switch (tierSizeCalculation) {\n      case 'default':\n        while (\n          imageWidth > tileSizeForTierSizeCalculation ||\n          imageHeight > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation),\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case 'truncated':\n        let width = imageWidth;\n        let height = imageHeight;\n        while (\n          width > tileSizeForTierSizeCalculation ||\n          height > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation),\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default: // Unknown `tierSizeCalculation` configured\n        assert(false, 53);\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    const resolutions = [tilePixelRatio];\n    const tileCountUpToTier = [0];\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(tilePixelRatio << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    const tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: options.extent || [0, -imageHeight, imageWidth, 0],\n      resolutions: resolutions,\n    });\n\n    let url = options.url;\n    if (url && !url.includes('{TileGroup}') && !url.includes('{tileIndex}')) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    const urls = expandUrl(url);\n\n    let tileWidth = tileSize * tilePixelRatio;\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            const tileCoordZ = tileCoord[0];\n            const tileCoordX = tileCoord[1];\n            const tileCoordY = tileCoord[2];\n            const tileIndex =\n              tileCoordX + tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            const tileGroup =\n              ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            const localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup,\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    const tileUrlFunction = createFromTileUrlFunctions(\n      urls.map(createFromTemplate)\n    );\n\n    const ZoomifyTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize * tilePixelRatio)\n    );\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      tilePixelRatio: tilePixelRatio,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition,\n    });\n\n    /**\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection;\n\n    // Server retina tile detection (non-standard):\n    // Try loading the center tile for the highest resolution. If it is not\n    // available, we are dealing with retina tiles, and need to adjust the\n    // tile url calculation.\n    const tileUrl = tileGrid.getTileCoordForCoordAndResolution(\n      getCenter(tileGrid.getExtent()),\n      resolutions[resolutions.length - 1]\n    );\n    const testTileUrl = tileUrlFunction(tileUrl, 1, null);\n    const image = new Image();\n    image.addEventListener(\n      'error',\n      function () {\n        tileWidth = tileSize;\n        this.changed();\n      }.bind(this)\n    );\n    image.src = testTileUrl;\n  }\n}\n\nexport default Zoomify;\n","/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3',\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByDistortedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionSquare',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default'],\n  },\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: [],\n  },\n};\n\nconst COMPLIANCE_VERSION1 =\n  /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 =\n  /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 =\n  /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url:\n      iiifInfo.imageInfo['@id'] === undefined\n        ? undefined\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [\n      ...levelProfile.formats,\n      iiifInfo.imageInfo.formats === undefined\n        ? []\n        : iiifInfo.imageInfo.formats,\n    ],\n    qualities: [\n      ...levelProfile.qualities,\n      iiifInfo.imageInfo.qualities === undefined\n        ? []\n        : iiifInfo.imageInfo.qualities,\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize:\n      iiifInfo.imageInfo.tile_width !== undefined\n        ? iiifInfo.imageInfo.tile_height !== undefined\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\n        : iiifInfo.imageInfo.tile_height != undefined\n        ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\n        : undefined,\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    additionalProfile =\n      Array.isArray(iiifInfo.imageInfo.profile) &&\n      iiifInfo.imageInfo.profile.length > 1,\n    profileSupports =\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\n        ? iiifInfo.imageInfo.profile[1].supports\n        : [],\n    profileFormats =\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\n        ? iiifInfo.imageInfo.profile[1].formats\n        : [],\n    profileQualities =\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\n        ? iiifInfo.imageInfo.profile[1].qualities\n        : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height === undefined ? tile.width : tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities],\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    formats =\n      iiifInfo.imageInfo.extraFormats === undefined\n        ? levelProfile.formats\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n    preferredFormat =\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n      iiifInfo.imageInfo.preferredFormats.length > 0\n        ? iiifInfo.imageInfo.preferredFormats\n            .filter(function (format) {\n              return ['jpg', 'png', 'gif'].includes(format);\n            })\n            .reduce(function (acc, format) {\n              return acc === undefined && formats.includes(format)\n                ? format\n                : acc;\n            }, undefined)\n        : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports:\n      iiifInfo.imageInfo.extraFeatures === undefined\n        ? levelProfile.supports\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities:\n      iiifInfo.imageInfo.extraQualities === undefined\n        ? levelProfile.qualities\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat,\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @return {Versions} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\n            this.imageInfo.identifier\n          ) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(false, 61);\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (\n          typeof this.imageInfo.profile === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\n        ) {\n          return this.imageInfo.profile;\n        }\n        if (\n          Array.isArray(this.imageInfo.profile) &&\n          this.imageInfo.profile.length > 0 &&\n          typeof this.imageInfo.profile[0] === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\n        ) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @return {SupportedFeatures} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(preferredOptions) {\n    const options = preferredOptions || {},\n      version = this.getImageApiVersion();\n    if (version === undefined) {\n      return;\n    }\n    const imageOptions =\n      version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format:\n        options.format !== undefined &&\n        imageOptions.formats.includes(options.format)\n          ? options.format\n          : imageOptions.preferredFormat !== undefined\n          ? imageOptions.preferredFormat\n          : 'jpg',\n      supports: imageOptions.supports,\n      quality:\n        options.quality && imageOptions.qualities.includes(options.quality)\n          ? options.quality\n          : imageOptions.qualities.includes('native')\n          ? 'native'\n          : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions)\n        ? imageOptions.resolutions.sort(function (a, b) {\n            return b - a;\n          })\n        : undefined,\n      tileSize: imageOptions.tileSize,\n    };\n  }\n}\n\nexport default IIIFInfo;\n","/**\n * @module ol/source/IIIF\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport {CustomTile} from './Zoomify.js';\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {Versions} from '../format/IIIFInfo.js';\nimport {assert} from '../asserts.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Size of the cache.\n * @property {null|string} [crossOrigin] The value for the crossOrigin option of the request.\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]] The extent.\n * @property {string} [format='jpg'] Requested image format.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Array<number>} [resolutions] Supported resolutions as given in IIIF 'scaleFactors'\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {Array<import(\"../size.js\").Size>} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio] Tile pixel ratio.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition] Transition.\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image ID.\n * @property {import(\"../format/IIIFInfo.js\").Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\nfunction formatPercentage(percentage) {\n  return percentage.toLocaleString('en', {maximumFractionDigits: 10});\n}\n\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nclass IIIF extends TileImage {\n  /**\n   * @param {Options} [options] Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n   * to parse Image API service information responses into constructor options.\n   * @api\n   */\n  constructor(options) {\n    /**\n     * @type {Partial<Options>}\n     */\n    const partialOptions = options || {};\n\n    let baseUrl = partialOptions.url || '';\n    baseUrl =\n      baseUrl +\n      (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === ''\n        ? ''\n        : '/');\n    const version = partialOptions.version || Versions.VERSION2;\n    const sizes = partialOptions.sizes || [];\n    const size = partialOptions.size;\n    assert(\n      size != undefined &&\n        Array.isArray(size) &&\n        size.length == 2 &&\n        !isNaN(size[0]) &&\n        size[0] > 0 &&\n        !isNaN(size[1]) &&\n        size[1] > 0,\n      60\n    );\n    const width = size[0];\n    const height = size[1];\n    const tileSize = partialOptions.tileSize;\n    const tilePixelRatio = partialOptions.tilePixelRatio || 1;\n    const format = partialOptions.format || 'jpg';\n    const quality =\n      partialOptions.quality ||\n      (partialOptions.version == Versions.VERSION1 ? 'native' : 'default');\n    let resolutions = partialOptions.resolutions || [];\n    const supports = partialOptions.supports || [];\n    const extent = partialOptions.extent || [0, -height, width, 0];\n\n    const supportsListedSizes =\n      sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n    const supportsListedTiles =\n      tileSize !== undefined &&\n      ((typeof tileSize === 'number' &&\n        Number.isInteger(tileSize) &&\n        tileSize > 0) ||\n        (Array.isArray(tileSize) && tileSize.length > 0));\n    const supportsArbitraryTiling =\n      supports != undefined &&\n      Array.isArray(supports) &&\n      (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n      (supports.includes('sizeByWh') ||\n        supports.includes('sizeByH') ||\n        supports.includes('sizeByW') ||\n        supports.includes('sizeByPct'));\n\n    let tileWidth, tileHeight, maxZoom;\n\n    resolutions.sort(function (a, b) {\n      return b - a;\n    });\n\n    if (supportsListedTiles || supportsArbitraryTiling) {\n      if (tileSize != undefined) {\n        if (\n          typeof tileSize === 'number' &&\n          Number.isInteger(tileSize) &&\n          tileSize > 0\n        ) {\n          tileWidth = tileSize;\n          tileHeight = tileSize;\n        } else if (Array.isArray(tileSize) && tileSize.length > 0) {\n          if (\n            tileSize.length == 1 ||\n            (tileSize[1] == undefined && Number.isInteger(tileSize[0]))\n          ) {\n            tileWidth = tileSize[0];\n            tileHeight = tileSize[0];\n          }\n          if (tileSize.length == 2) {\n            if (\n              Number.isInteger(tileSize[0]) &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[0];\n              tileHeight = tileSize[1];\n            } else if (\n              tileSize[0] == undefined &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[1];\n              tileHeight = tileSize[1];\n            }\n          }\n        }\n      }\n      if (tileWidth === undefined || tileHeight === undefined) {\n        tileWidth = DEFAULT_TILE_SIZE;\n        tileHeight = DEFAULT_TILE_SIZE;\n      }\n      if (resolutions.length == 0) {\n        maxZoom = Math.max(\n          Math.ceil(Math.log(width / tileWidth) / Math.LN2),\n          Math.ceil(Math.log(height / tileHeight) / Math.LN2)\n        );\n        for (let i = maxZoom; i >= 0; i--) {\n          resolutions.push(Math.pow(2, i));\n        }\n      } else {\n        const maxScaleFactor = Math.max(...resolutions);\n        // TODO maxScaleFactor might not be a power to 2\n        maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n      }\n    } else {\n      // No tile support.\n      tileWidth = width;\n      tileHeight = height;\n      resolutions = [];\n      if (supportsListedSizes) {\n        /*\n         * 'sizes' provided. Use full region in different resolutions. Every\n         * resolution has only one tile.\n         */\n        sizes.sort(function (a, b) {\n          return a[0] - b[0];\n        });\n        maxZoom = -1;\n        const ignoredSizesIndex = [];\n        for (let i = 0; i < sizes.length; i++) {\n          const resolution = width / sizes[i][0];\n          if (\n            resolutions.length > 0 &&\n            resolutions[resolutions.length - 1] == resolution\n          ) {\n            ignoredSizesIndex.push(i);\n            continue;\n          }\n          resolutions.push(resolution);\n          maxZoom++;\n        }\n        if (ignoredSizesIndex.length > 0) {\n          for (let i = 0; i < ignoredSizesIndex.length; i++) {\n            sizes.splice(ignoredSizesIndex[i] - i, 1);\n          }\n        }\n      } else {\n        // No useful image information at all. Try pseudo tile with full image.\n        resolutions.push(1);\n        sizes.push([width, height]);\n        maxZoom = 0;\n      }\n    }\n\n    const tileGrid = new TileGrid({\n      tileSize: [tileWidth, tileHeight],\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions,\n    });\n\n    const tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      let regionParam, sizeParam;\n      const zoom = tileCoord[0];\n      if (zoom > maxZoom) {\n        return;\n      }\n      const tileX = tileCoord[1],\n        tileY = tileCoord[2],\n        scale = resolutions[zoom];\n      if (\n        tileX === undefined ||\n        tileY === undefined ||\n        scale === undefined ||\n        tileX < 0 ||\n        Math.ceil(width / scale / tileWidth) <= tileX ||\n        tileY < 0 ||\n        Math.ceil(height / scale / tileHeight) <= tileY\n      ) {\n        return;\n      }\n      if (supportsArbitraryTiling || supportsListedTiles) {\n        const regionX = tileX * tileWidth * scale,\n          regionY = tileY * tileHeight * scale;\n        let regionW = tileWidth * scale,\n          regionH = tileHeight * scale,\n          sizeW = tileWidth,\n          sizeH = tileHeight;\n        if (regionX + regionW > width) {\n          regionW = width - regionX;\n        }\n        if (regionY + regionH > height) {\n          regionH = height - regionY;\n        }\n        if (regionX + tileWidth * scale > width) {\n          sizeW = Math.floor((width - regionX + scale - 1) / scale);\n        }\n        if (regionY + tileHeight * scale > height) {\n          sizeH = Math.floor((height - regionY + scale - 1) / scale);\n        }\n        if (\n          regionX == 0 &&\n          regionW == width &&\n          regionY == 0 &&\n          regionH == height\n        ) {\n          // canonical full image region parameter is 'full', not 'x,y,w,h'\n          regionParam = 'full';\n        } else if (\n          !supportsArbitraryTiling ||\n          supports.includes('regionByPx')\n        ) {\n          regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n        } else if (supports.includes('regionByPct')) {\n          const pctX = formatPercentage((regionX / width) * 100),\n            pctY = formatPercentage((regionY / height) * 100),\n            pctW = formatPercentage((regionW / width) * 100),\n            pctH = formatPercentage((regionH / height) * 100);\n          regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n        }\n        if (\n          version == Versions.VERSION3 &&\n          (!supportsArbitraryTiling || supports.includes('sizeByWh'))\n        ) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n          sizeParam = sizeW + ',';\n        } else if (supports.includes('sizeByH')) {\n          sizeParam = ',' + sizeH;\n        } else if (supports.includes('sizeByWh')) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (supports.includes('sizeByPct')) {\n          sizeParam = 'pct:' + formatPercentage(100 / scale);\n        }\n      } else {\n        regionParam = 'full';\n        if (supportsListedSizes) {\n          const regionWidth = sizes[zoom][0],\n            regionHeight = sizes[zoom][1];\n          if (version == Versions.VERSION3) {\n            if (regionWidth == width && regionHeight == height) {\n              sizeParam = 'max';\n            } else {\n              sizeParam = regionWidth + ',' + regionHeight;\n            }\n          } else {\n            if (regionWidth == width) {\n              sizeParam = 'full';\n            } else {\n              sizeParam = regionWidth + ',';\n            }\n          }\n        } else {\n          sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n        }\n      }\n      return (\n        baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format\n      );\n    };\n\n    const IiifTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize || 256).map(function (size) {\n        return size * tilePixelRatio;\n      })\n    );\n\n    super({\n      attributions: partialOptions.attributions,\n      attributionsCollapsible: partialOptions.attributionsCollapsible,\n      cacheSize: partialOptions.cacheSize,\n      crossOrigin: partialOptions.crossOrigin,\n      interpolate: partialOptions.interpolate,\n      projection: partialOptions.projection,\n      reprojectionErrorThreshold: partialOptions.reprojectionErrorThreshold,\n      state: partialOptions.state,\n      tileClass: IiifTileClass,\n      tileGrid: tileGrid,\n      tilePixelRatio: partialOptions.tilePixelRatio,\n      tileUrlFunction: tileUrlFunction,\n      transition: partialOptions.transition,\n    });\n\n    /**\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = partialOptions.zDirection;\n  }\n}\n\nexport default IIIF;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (\n          this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)\n        ) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection,\n        projection,\n        extent,\n        resolution,\n        pixelRatio,\n        function (extent, resolution, pixelRatio) {\n          return this.getImageInternal(\n            extent,\n            resolution,\n            pixelRatio,\n            sourceProjection\n          );\n        }.bind(this),\n        this.getInterpolate()\n      );\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(\n          function () {\n            callback(this.getData(coordinate));\n          }.bind(this),\n          0\n        );\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection()\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    } else {\n      const tileCoord = [z, x, y];\n      const urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord,\n        projection\n      );\n      const tileUrl = this.tileUrlFunction_(\n        urlTileCoord,\n        pixelRatio,\n        projection\n      );\n      const tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_\n      );\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(\n        extent,\n        sourceZ,\n        function (sourceTileCoord) {\n          empty =\n            empty &&\n            !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n        }.bind(this)\n      );\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  SIZE_PX: 'u_sizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {users: 0, canvas};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const canvas = cacheItem.canvas;\n  const gl = getContext(canvas);\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = getCanvas(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    const gl = this.getGL();\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n    this.uniformLocations_ = {};\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDraw(frameState, disableAlphaBlend) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.SIZE_PX, [size[0], size[1]]);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.uniformLocations_ = {};\n    this.attribLocations_ = {};\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.getGL().uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.getGL();\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/webgl/TileTexture\n */\n\nimport DataTile from '../DataTile.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").Data} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @typedef {Object} Options\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\nclass TileTexture extends EventTarget {\n  /**\n   * @param {Options} options The tile texture options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0])\n    );\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.gutter_ = options.gutter || 0;\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @private\n     */\n    this.helper_ = options.helper;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper_.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.textures.length = 0;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile_();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  uploadTile_() {\n    const helper = this.helper_;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, tile.getImage(), tile.interpolate);\n      return;\n    }\n\n    const sourceTileSize = tile.getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter_,\n      sourceTileSize[1] + 2 * this.gutter_,\n    ];\n    const data = tile.getData();\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate\n      );\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate\n      );\n    }\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile_();\n      this.dispatchEvent(EventType.CHANGE);\n    }\n  }\n\n  disposeInternal() {\n    const gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n    for (let i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").Data|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n    const gutter = this.gutter_;\n\n    if (this.tile instanceof DataTile) {\n      const sourceSize = this.tile.getSize();\n\n      const sourceWidthWithoutGutter = sourceSize[0];\n      const sourceHeightWithoutGutter = sourceSize[1];\n      const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n      const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n      const sourceCol =\n        gutter +\n        Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n      const sourceRow =\n        gutter +\n        Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n      const data = this.tile.getData();\n      if (data instanceof DataView) {\n        const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n        const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n        const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n        return new DataView(buffer);\n      }\n\n      const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n      return data.slice(offset, offset + this.bandCount);\n    }\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const image = this.tile.getImage();\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default TileTexture;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n  isEmpty,\n} from '../../extent.js';\nimport {\n  create as createMat4,\n  fromTransform as mat4FromTransform,\n} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 2 * (1 - 1 / (z + 1)) - 1;\n}\n\n/**\n * Add a tile texture to the lookup.\n * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n * tile textures by zoom level.\n * @param {import(\"../../webgl/TileTexture.js\").default} tileTexture A tile texture.\n * @param {number} z The zoom level.\n */\nfunction addTileTextureToLookup(tileTexturesByZ, tileTexture, z) {\n  if (!(z in tileTexturesByZ)) {\n    tileTexturesByZ[z] = [];\n  }\n  tileTexturesByZ[z].push(tileTexture);\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nfunction getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLLayerRenderer<LayerType>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts texture coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tempMat4_ = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../webgl/TileTexture.js\").default>}\n     * @private\n     */\n    this.tileTextureCache_ = new LRUCache(cacheSize);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    /**\n     * @private\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  /**\n   * @param {import(\"../../webgl/TileTexture\").TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {Object<number, Array<TileTexture>>} tileTexturesByZ The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tileTexturesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileTextureCache = this.tileTextureCache_;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileTexture} */\n          let tileTexture;\n\n          /** @type {import(\"../../webgl/TileTexture\").TileType} */\n          let tile;\n\n          if (tileTextureCache.containsKey(cacheKey)) {\n            tileTexture = tileTextureCache.get(cacheKey);\n            tile = tileTexture.tile;\n          }\n          if (!tileTexture || tileTexture.tile.key !== tileSource.getKey()) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n            if (!tileTexture) {\n              tileTexture = new TileTexture({\n                tile: tile,\n                grid: tileGrid,\n                helper: this.helper,\n                gutter: gutter,\n              });\n              tileTextureCache.set(cacheKey, tileTexture);\n            } else {\n              if (this.isDrawableTile_(tile)) {\n                tileTexture.setTile(tile);\n              } else {\n                const interimTile =\n                  /** @type {import(\"../../webgl/TileTexture\").TileType} */ (\n                    tile.getInterimTile()\n                  );\n                tileTexture.setTile(interimTile);\n              }\n            }\n          }\n\n          addTileTextureToLookup(tileTexturesByZ, tileTexture, z);\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState_ = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>}\n     */\n    const tileTexturesByZ = {};\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileTexturesByZ,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileTexturesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileTexturesByZ,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    const tileTextures = tileTexturesByZ[z];\n    for (let i = 0, ii = tileTextures.length; i < ii; ++i) {\n      const tileTexture = tileTextures[i];\n      const tile = tileTexture.tile;\n      if (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileTexture.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileTexturesByZ\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileTexturesByZ\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState, !blend);\n\n    const zs = Object.keys(tileTexturesByZ)\n      .map(Number)\n      .sort(numberSafeCompareFunction);\n\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      const tileResolution = tileGrid.getResolution(tileZ);\n      const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n      const tileOrigin = tileGrid.getOrigin(tileZ);\n\n      const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n      const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n      const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n      const centerI =\n        (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n      const centerJ =\n        (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n      const tileScale = viewState.resolution / tileResolution;\n\n      const depth = depthForZ(tileZ);\n      const tileTextures = tileTexturesByZ[tileZ];\n      for (let i = 0, ii = tileTextures.length; i < ii; ++i) {\n        const tileTexture = tileTextures[i];\n        if (!tileTexture.loaded) {\n          continue;\n        }\n        const tile = tileTexture.tile;\n        const tileCoord = tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n\n        const tileCenterI = tileCoord[1];\n        const tileCenterJ = tileCoord[2];\n\n        resetTransform(this.tileTransform_);\n        scaleTransform(\n          this.tileTransform_,\n          2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n          -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n        );\n        rotateTransform(this.tileTransform_, viewState.rotation);\n        scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n        translateTransform(\n          this.tileTransform_,\n          (tileSize[0] * (tileCenterI - centerI) - gutter) /\n            tileWidthWithGutter,\n          (tileSize[1] * (tileCenterJ - centerJ) - gutter) /\n            tileHeightWithGutter\n        );\n\n        this.helper.setUniformMatrixValue(\n          Uniforms.TILE_TRANSFORM,\n          mat4FromTransform(this.tempMat4_, this.tileTransform_)\n        );\n\n        this.helper.bindBuffer(tileTexture.coords);\n        this.helper.bindBuffer(this.indices_);\n        this.helper.enableAttributes(attributeDescriptions);\n\n        let textureSlot = 0;\n        while (textureSlot < tileTexture.textures.length) {\n          const textureProperty = 'TEXTURE' + textureSlot;\n          const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n          gl.activeTexture(gl[textureProperty]);\n          gl.bindTexture(gl.TEXTURE_2D, tileTexture.textures[textureSlot]);\n          gl.uniform1i(\n            this.helper.getUniformLocation(uniformName),\n            textureSlot\n          );\n          ++textureSlot;\n        }\n\n        for (\n          let paletteIndex = 0;\n          paletteIndex < this.paletteTextures_.length;\n          ++paletteIndex\n        ) {\n          const paletteTexture = this.paletteTextures_[paletteIndex];\n          gl.activeTexture(gl['TEXTURE' + textureSlot]);\n          const texture = paletteTexture.getTexture(gl);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.uniform1i(\n            this.helper.getUniformLocation(paletteTexture.name),\n            textureSlot\n          );\n          ++textureSlot;\n        }\n\n        const alpha =\n          tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n        if (alpha < 1) {\n          frameState.animate = true;\n        }\n\n        this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n        this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_PIXEL_WIDTH,\n          tileWidthWithGutter\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_PIXEL_HEIGHT,\n          tileHeightWithGutter\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_RESOLUTION,\n          tileResolution\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_ORIGIN_X,\n          tileOrigin[0] +\n            tileCenterI * tileSize[0] * tileResolution -\n            gutter * tileResolution\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_ORIGIN_Y,\n          tileOrigin[1] -\n            tileCenterJ * tileSize[1] * tileResolution +\n            gutter * tileResolution\n        );\n        let gutterExtent = extent;\n        if (gutter > 0) {\n          gutterExtent = tileGrid.getTileCoordExtent(tileCoord);\n          getIntersection(gutterExtent, extent, gutterExtent);\n        }\n        this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n        this.helper.setUniformFloatValue(\n          Uniforms.RESOLUTION,\n          viewState.resolution\n        );\n        this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n        this.helper.drawElements(0, this.indices_.getSize());\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileTextureCache = this.tileTextureCache_;\n    while (tileTextureCache.canExpireCache()) {\n      const tileTexture = tileTextureCache.pop();\n      tileTexture.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileTextureCache_;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n   * tile textures by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileTexturesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileTextureCache = this.tileTextureCache_;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileTextureCache.containsKey(cacheKey)) {\n          const tileTexture = tileTextureCache.get(cacheKey);\n          if (tileTexture.loaded) {\n            addTileTextureToLookup(tileTexturesByZ, tileTexture, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileTextureCache = this.tileTextureCache_;\n    tileTextureCache.forEach((tileTexture) => tileTexture.dispose());\n    tileTextureCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n\n      helper.deleteBuffer(this.indices_);\n    }\n\n    super.disposeInternal();\n\n    delete this.indices_;\n    delete this.tileTextureCache_;\n    delete this.frameState_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n */\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color).slice();\n  if (array.length < 4) {\n    array.push(1);\n  }\n  return arrayToGlsl(\n    array.map(function (c, i) {\n      return i < 3 ? c / 255 : c;\n    })\n  );\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), typeHint);\n  }\n\n  const valueType = getValueType(value);\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if (\n    (valueType & ValueTypes.STRING) > 0 &&\n    (typeHint === undefined || typeHint == ValueTypes.STRING)\n  ) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if (\n    (valueType & ValueTypes.COLOR) > 0 &&\n    (typeHint === undefined || typeHint == ValueTypes.COLOR)\n  ) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(`Unexpected expression ${value} (expected type ${typeHint})`);\n}\n\nfunction assertNumber(value) {\n  if (!(getValueType(value) & ValueTypes.NUMBER)) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if (!(getValueType(value) & ValueTypes.STRING)) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${args} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${args} instead`\n    );\n  }\n}\nfunction assertUniqueInferredType(args, types) {\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Could not infer only one type from the following expression: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const value = args[0].toString();\n    if (!context.attributes.includes(value)) {\n      context.attributes.push(value);\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + value;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function (args) {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const value = args[0].toString();\n    if (!context.variables.includes(value)) {\n      context.variables.push(value);\n    }\n    return uniformNameForVariable(value);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function (args) {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} * ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} + ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function (args) {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function (args) {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = '';\n      result = args\n        .map((arg) => expressionToGlsl(context, arg))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val, ValueTypes.NUMBER);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function (args) {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const array = /** @type {Array<number>} */ (args);\n    if (args.length === 3) {\n      array.push(1);\n    }\n    const parsedArgs = args.map(function (val, i) {\n      return (\n        expressionToGlsl(context, val, ValueTypes.NUMBER) +\n        (i < 3 ? ' / 255.0' : '')\n      );\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n\n    const input = expressionToGlsl(context, args[1]);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i]);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2]);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      result = `mix(${output1}, ${output2}, pow(clamp((${input} - ${stop1}) / (${stop2} - ${stop1}), 0.0, 1.0), ${exponent}))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['match'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n\n    const input = expressionToGlsl(context, args[0]);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i]);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['case'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i]);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n","/**\n * Classes and utilities for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\n\nimport {\n  ValueTypes,\n  expressionToGlsl,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../style/expressions.js';\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSizeExpression('...')\n *   .outputSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings = [];\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.sizeExpression = 'vec2(1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.rotationExpression = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.offsetExpression = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.colorExpression = 'vec4(1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.rotateWithView = false;\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSizeExpression(expression) {\n    this.sizeExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setRotationExpression(expression) {\n    this.rotationExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * Note: will only be used for point geometry shaders.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.offsetExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setColorExpression(expression) {\n    this.colorExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.rotateWithView = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @return {string} Previously set size expression\n   */\n  getSizeExpression() {\n    return this.sizeExpression;\n  }\n\n  /**\n   * @return {string} Previously set symbol offset expression\n   */\n  getOffsetExpression() {\n    return this.offsetExpression;\n  }\n\n  /**\n   * @return {string} Previously set color expression\n   */\n  getColorExpression() {\n    return this.colorExpression;\n  }\n\n  /**\n   * @return {string} Previously set texture coordinate expression\n   */\n  getTextureCoordinateExpression() {\n    return this.texCoordExpression;\n  }\n\n  /**\n   * @return {string} Previously set fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression;\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters,\n   * intended to be used on point geometries.\n   *\n   * Three uniforms are hardcoded in all shaders: `u_projectionMatrix`, `u_offsetScaleMatrix`,\n   * `u_offsetRotateMatrix`, `u_time`.\n   *\n   * The following attributes are hardcoded and expected to be present in the vertex buffers:\n   * `vec2 a_position`, `float a_index` (being the index of the vertex in the quad, 0 to 3).\n   *\n   * The following varyings are hardcoded and gives the coordinate of the pixel both in the quad and on the texture:\n   * `vec2 v_quadCoord`, `vec2 v_texCoord`\n   *\n   * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n   * (namely, hit color with encoded feature id).\n   * @return {string} The full shader as a string.\n   */\n  getSymbolVertexShader(forHitDetection) {\n    const offsetMatrix = this.rotateWithView\n      ? 'u_offsetScaleMatrix * u_offsetRotateMatrix'\n      : 'u_offsetScaleMatrix';\n\n    let attributes = this.attributes;\n    let varyings = this.varyings;\n\n    if (forHitDetection) {\n      attributes = attributes.concat('vec4 a_hitColor');\n      varyings = varyings.concat({\n        name: 'v_hitColor',\n        type: 'vec4',\n        expression: 'a_hitColor',\n      });\n    }\n\n    return `precision mediump float;\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_offsetScaleMatrix;\nuniform mat4 u_offsetRotateMatrix;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\n${this.uniforms\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\n${attributes\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\n${varyings\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\nvoid main(void) {\n  mat4 offsetMatrix = ${offsetMatrix};\n  vec2 halfSize = ${this.sizeExpression} * 0.5;\n  vec2 offset = ${this.offsetExpression};\n  float angle = ${this.rotationExpression};\n  float offsetX;\n  float offsetY;\n  if (a_index == 0.0) {\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\n  } else if (a_index == 1.0) {\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\n  } else if (a_index == 2.0) {\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\n  } else {\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\n  }\n  vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n  vec4 texCoord = ${this.texCoordExpression};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n  v = a_index == 2.0 || a_index == 3.0 ? 0.0 : 1.0;\n  v_quadCoord = vec2(u, v);\n${varyings\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters,\n   * intended to be used on point geometries.\n   *\n   * Expects the following varyings to be transmitted by the vertex shader:\n   * `vec2 v_quadCoord`, `vec2 v_texCoord`\n   *\n   * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n   * (namely, hit color with encoded feature id).\n   * @return {string} The full shader as a string.\n   */\n  getSymbolFragmentShader(forHitDetection) {\n    const hitDetectionBypass = forHitDetection\n      ? '  if (gl_FragColor.a < 0.1) { discard; } gl_FragColor = v_hitColor;'\n      : '';\n\n    let varyings = this.varyings;\n\n    if (forHitDetection) {\n      varyings = varyings.concat({\n        name: 'v_hitColor',\n        type: 'vec4',\n        expression: 'a_hitColor',\n      });\n    }\n\n    return `precision mediump float;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\n${this.uniforms\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\n${varyings\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\nvoid main(void) {\n  if (${this.discardExpression}) { discard; }\n  gl_FragColor = ${this.colorExpression};\n  gl_FragColor.rgb *= gl_FragColor.a;\n${hitDetectionBypass}\n}`;\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {Object<string,import(\"./Helper\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../renderer/webgl/PointsLayer\").CustomAttribute>} attributes Attribute descriptions.\n */\n\n/**\n * Parses a {@link import(\"../style/literal\").LiteralStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/literal\").LiteralStyle} style Literal style.\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n  const symbStyle = style.symbol;\n  const size = symbStyle.size !== undefined ? symbStyle.size : 1;\n  const color = symbStyle.color || 'white';\n  const texCoord = symbStyle.textureCoord || [0, 0, 1, 1];\n  const offset = symbStyle.offset || [0, 0];\n  const opacity = symbStyle.opacity !== undefined ? symbStyle.opacity : 1;\n  const rotation = symbStyle.rotation !== undefined ? symbStyle.rotation : 0;\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const vertContext = {\n    inFragmentShader: false,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n  };\n  const parsedSize = expressionToGlsl(\n    vertContext,\n    size,\n    ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER\n  );\n  const parsedOffset = expressionToGlsl(\n    vertContext,\n    offset,\n    ValueTypes.NUMBER_ARRAY\n  );\n  const parsedTexCoord = expressionToGlsl(\n    vertContext,\n    texCoord,\n    ValueTypes.NUMBER_ARRAY\n  );\n  const parsedRotation = expressionToGlsl(\n    vertContext,\n    rotation,\n    ValueTypes.NUMBER\n  );\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const fragContext = {\n    inFragmentShader: true,\n    variables: vertContext.variables,\n    attributes: [],\n    stringLiteralsMap: vertContext.stringLiteralsMap,\n    functions: {},\n  };\n  const parsedColor = expressionToGlsl(fragContext, color, ValueTypes.COLOR);\n  const parsedOpacity = expressionToGlsl(\n    fragContext,\n    opacity,\n    ValueTypes.NUMBER\n  );\n\n  let opacityFilter = '1.0';\n  const visibleSize = `vec2(${expressionToGlsl(\n    fragContext,\n    size,\n    ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER\n  )}).x`;\n  switch (symbStyle.symbolType) {\n    case 'square':\n      break;\n    case 'image':\n      break;\n    // taken from https://thebookofshaders.com/07/\n    case 'circle':\n      opacityFilter = `(1.0-smoothstep(1.-4./${visibleSize},1.,dot(v_quadCoord-.5,v_quadCoord-.5)*4.))`;\n      break;\n    case 'triangle':\n      const st = '(v_quadCoord*2.-1.)';\n      const a = `(atan(${st}.x,${st}.y))`;\n      opacityFilter = `(1.0-smoothstep(.5-3./${visibleSize},.5,cos(floor(.5+${a}/2.094395102)*2.094395102-${a})*length(${st})))`;\n      break;\n\n    default:\n      throw new Error('Unexpected symbol type: ' + symbStyle.symbolType);\n  }\n\n  const builder = new ShaderBuilder()\n    .setSizeExpression(`vec2(${parsedSize})`)\n    .setRotationExpression(parsedRotation)\n    .setSymbolOffsetExpression(parsedOffset)\n    .setTextureCoordinateExpression(parsedTexCoord)\n    .setSymbolRotateWithView(!!symbStyle.rotateWithView)\n    .setColorExpression(\n      `vec4(${parsedColor}.rgb, ${parsedColor}.a * ${parsedOpacity} * ${opacityFilter})`\n    );\n\n  if (style.filter) {\n    const parsedFilter = expressionToGlsl(\n      fragContext,\n      style.filter,\n      ValueTypes.BOOLEAN\n    );\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  // define one uniform per variable\n  fragContext.variables.forEach(function (varName) {\n    const uniformName = uniformNameForVariable(varName);\n    builder.addUniform(`float ${uniformName}`);\n    uniforms[uniformName] = function () {\n      if (!style.variables || style.variables[varName] === undefined) {\n        throw new Error(\n          `The following variable is missing from the style: ${varName}`\n        );\n      }\n      let value = style.variables[varName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(vertContext, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  });\n\n  if (symbStyle.symbolType === 'image' && symbStyle.src) {\n    const texture = new Image();\n    texture.crossOrigin =\n      symbStyle.crossOrigin === undefined ? 'anonymous' : symbStyle.crossOrigin;\n    texture.src = symbStyle.src;\n    builder\n      .addUniform('sampler2D u_texture')\n      .setColorExpression(\n        builder.getColorExpression() + ' * texture2D(u_texture, v_texCoord)'\n      );\n    uniforms['u_texture'] = texture;\n  }\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  fragContext.attributes.forEach(function (attrName) {\n    if (!vertContext.attributes.includes(attrName)) {\n      vertContext.attributes.push(attrName);\n    }\n    builder.addVarying(`v_${attrName}`, 'float', `a_${attrName}`);\n  });\n\n  // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n  vertContext.attributes.forEach(function (attrName) {\n    builder.addAttribute(`float a_${attrName}`);\n  });\n\n  return {\n    builder: builder,\n    attributes: vertContext.attributes.map(function (attributeName) {\n      return {\n        name: attributeName,\n        callback: function (feature, props) {\n          let value = props[attributeName];\n          if (typeof value === 'string') {\n            value = getStringNumberEquivalent(vertContext, value);\n          }\n          return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n        },\n      };\n    }),\n    uniforms: uniforms,\n  };\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const backwards = projection.getAxisOrientation().substr(0, 2) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet'\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesCount] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    var filteredBridge = filterPoints(bridge, bridge.next);\n    filterPoints(bridgeReverse, bridgeReverse.next);\n\n    // Check if input node was removed by the filtering\n    return outerNode === bridge ? filteredBridge : outerNode;\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesCount\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesCount;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesCount\n  );\n  instructionsIndex += customAttributesCount;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r=\\\"undefined\\\"!=typeof navigator&&void 0!==navigator.userAgent?navigator.userAgent.toLowerCase():\\\"\\\";r.includes(\\\"firefox\\\");r.includes(\\\"safari\\\")&&!r.includes(\\\"chrom\\\")&&(r.includes(\\\"version/15.4\\\")||/cpu (os|iphone os) 15_4 like mac os x/.test(r)),r.includes(\\\"webkit\\\")&&r.includes(\\\"edge\\\"),r.includes(\\\"macintosh\\\"),\\\"undefined\\\"!=typeof WorkerGlobalScope&&\\\"undefined\\\"!=typeof OffscreenCanvas&&(self,WorkerGlobalScope),function(){let e=!1;try{const t=Object.defineProperty({},\\\"passive\\\",{get:function(){e=!0}});window.addEventListener(\\\"_\\\",null,t),window.removeEventListener(\\\"_\\\",null,t)}catch(e){}}();const o={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\"};class i extends Error{constructor(e){const t=o[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}function s(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function a(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],s=t[1],a=t[2],u=t[3],x=t[4],f=t[5];return e[0]=u/n,e[1]=-s/n,e[2]=-a/n,e[3]=o/n,e[4]=(a*f-u*x)/n,e[5]=-(o*f-s*x)/n,e}new Array(6);var u={exports:{}};function x(e,t,n){n=n||2;var r,o,i,s,a,u,x,y=t&&t.length,d=y?t[0]*n:e.length,h=f(e,0,d,n,!0),v=[];if(!h||h.next===h.prev)return v;if(y&&(h=function(e,t,n,r){var o,i,s,a=[];for(o=0,i=t.length;o<i;o++)(s=f(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===s.next&&(s.steiner=!0),a.push(w(s));for(a.sort(p),o=0;o<a.length;o++)n=l(n=g(a[o],n),n.next);return n}(e,t,h,n)),e.length>80*n){r=i=e[0],o=s=e[1];for(var b=n;b<d;b+=n)(a=e[b])<r&&(r=a),(u=e[b+1])<o&&(o=u),a>i&&(i=a),u>s&&(s=u);x=0!==(x=Math.max(i-r,s-o))?1/x:0}return c(h,v,n,r,o,x),v}function f(e,t,n,r,o){var i,s;if(o===B(e,t,n,r)>0)for(i=t;i<n;i+=r)s=U(i,e[i],e[i+1],s);else for(i=n-r;i>=t;i-=r)s=U(i,e[i],e[i+1],s);return s&&M(s,s.next)&&(z(s),s=s.next),s}function l(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!M(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(z(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function c(e,t,n,r,o,i,s){if(e){!s&&i&&function(e,t,n,r){var o=e;do{null===o.z&&(o.z=m(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,s,a,u,x=1;do{for(n=e,e=null,i=null,s=0;n;){for(s++,r=n,a=0,t=0;t<x&&(a++,r=r.nextZ);t++);for(u=x;a>0||u>0&&r;)0!==a&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,a--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,x*=2}while(s>1)}(o)}(e,r,o,i);for(var a,u,x=e;e.prev!==e.next;)if(a=e.prev,u=e.next,i?d(e,r,o,i):y(e))t.push(a.i/n),t.push(e.i/n),t.push(u.i/n),z(e),e=u.next,x=u.next;else if((e=u)===x){s?1===s?c(e=h(l(e),t,n),t,n,r,o,i,2):2===s&&v(e,t,n,r,o,i):c(l(e),t,n,r,o,i,1);break}}}function y(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=e.next.next;o!==e.prev;){if(A(t.x,t.y,n.x,n.y,r.x,r.y,o.x,o.y)&&Z(o.prev,o,o.next)>=0)return!1;o=o.next}return!0}function d(e,t,n,r){var o=e.prev,i=e,s=e.next;if(Z(o,i,s)>=0)return!1;for(var a=o.x<i.x?o.x<s.x?o.x:s.x:i.x<s.x?i.x:s.x,u=o.y<i.y?o.y<s.y?o.y:s.y:i.y<s.y?i.y:s.y,x=o.x>i.x?o.x>s.x?o.x:s.x:i.x>s.x?i.x:s.x,f=o.y>i.y?o.y>s.y?o.y:s.y:i.y>s.y?i.y:s.y,l=m(a,u,t,n,r),c=m(x,f,t,n,r),y=e.prevZ,d=e.nextZ;y&&y.z>=l&&d&&d.z<=c;){if(y!==e.prev&&y!==e.next&&A(o.x,o.y,i.x,i.y,s.x,s.y,y.x,y.y)&&Z(y.prev,y,y.next)>=0)return!1;if(y=y.prevZ,d!==e.prev&&d!==e.next&&A(o.x,o.y,i.x,i.y,s.x,s.y,d.x,d.y)&&Z(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(;y&&y.z>=l;){if(y!==e.prev&&y!==e.next&&A(o.x,o.y,i.x,i.y,s.x,s.y,y.x,y.y)&&Z(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;d&&d.z<=c;){if(d!==e.prev&&d!==e.next&&A(o.x,o.y,i.x,i.y,s.x,s.y,d.x,d.y)&&Z(d.prev,d,d.next)>=0)return!1;d=d.nextZ}return!0}function h(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!M(o,i)&&F(o,r,r.next,i)&&k(o,i)&&k(i,o)&&(t.push(o.i/n),t.push(r.i/n),t.push(i.i/n),z(r),z(r.next),r=e=i),r=r.next}while(r!==e);return l(r)}function v(e,t,n,r,o,i){var s=e;do{for(var a=s.next.next;a!==s.prev;){if(s.i!==a.i&&E(s,a)){var u=S(s,a);return s=l(s,s.next),u=l(u,u.next),c(s,t,n,r,o,i),void c(u,t,n,r,o,i)}a=a.next}s=s.next}while(s!==e)}function p(e,t){return e.x-t.x}function g(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,s=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var a=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(a<=o&&a>s){if(s=a,a===o){if(i===r.y)return r;if(i===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!n)return null;if(o===s)return n;var u,x=n,f=n.x,l=n.y,c=1/0;r=n;do{o>=r.x&&r.x>=f&&o!==r.x&&A(i<l?o:s,i,f,l,i<l?s:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),k(r,e)&&(u<c||u===c&&(r.x>n.x||r.x===n.x&&b(n,r)))&&(n=r,c=u)),r=r.next}while(r!==x);return n}(e,t);if(!n)return t;var r=S(n,e),o=l(n,n.next);return l(r,r.next),t===n?o:t}function b(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function m(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*o)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*o)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function w(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function A(e,t,n,r,o,i,s,a){return(o-s)*(t-a)-(e-s)*(i-a)>=0&&(e-s)*(r-a)-(n-s)*(t-a)>=0&&(n-s)*(i-a)-(o-s)*(r-a)>=0}function E(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&F(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(k(e,t)&&k(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||M(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function M(e,t){return e.x===t.x&&e.y===t.y}function F(e,t,n,r){var o=I(Z(e,t,n)),i=I(Z(e,t,r)),s=I(Z(n,r,e)),a=I(Z(n,r,t));return o!==i&&s!==a||(!(0!==o||!T(e,n,t))||(!(0!==i||!T(e,r,t))||(!(0!==s||!T(n,e,r))||!(0!==a||!T(n,t,r)))))}function T(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function k(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function S(e,t){var n=new R(e.i,e.x,e.y),r=new R(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function U(e,t,n,r){var o=new R(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function z(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function R(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function B(e,t,n,r){for(var o=0,i=t,s=n-r;i<n;i+=r)o+=(e[s]-e[i])*(e[i+1]+e[s+1]),s=i;return o}u.exports=x,u.exports.default=x,x.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,s=Math.abs(B(e,0,i,n));if(o)for(var a=0,u=t.length;a<u;a++){var x=t[a]*n,f=a<u-1?t[a+1]*n:e.length;s-=Math.abs(B(e,x,f,n))}var l=0;for(a=0;a<r.length;a+=3){var c=r[a]*n,y=r[a+1]*n,d=r[a+2]*n;l+=Math.abs((e[c]-e[d])*(e[y+1]-e[c+1])-(e[c]-e[y])*(e[d+1]-e[c+1]))}return 0===s&&0===l?0:Math.abs((l-s)/s)},x.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var s=0;s<t;s++)n.vertices.push(e[o][i][s]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};const P=[],C={vertexPosition:0,indexPosition:0};function N(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function _(e,t,n,r,o,i){const s=3+o,a=e[t+0],u=e[t+1],x=P;x.length=o;for(let n=0;n<x.length;n++)x[n]=e[t+2+n];let f=i?i.vertexPosition:0,l=i?i.indexPosition:0;const c=f/s;return N(n,f,a,u,0),x.length&&n.set(x,f+3),f+=s,N(n,f,a,u,1),x.length&&n.set(x,f+3),f+=s,N(n,f,a,u,2),x.length&&n.set(x,f+3),f+=s,N(n,f,a,u,3),x.length&&n.set(x,f+3),f+=s,r[l++]=c,r[l++]=c+1,r[l++]=c+3,r[l++]=c+1,r[l++]=c+2,r[l++]=c+3,C.vertexPosition=f,C.indexPosition=l,C}function L(e,t,n,r,o,i,a,u,x,f){const l=5+u.length,c=i.length/l,y=[e[t+0],e[t+1]],d=[e[n],e[n+1]],h=s(f,[...y]),v=s(f,[...d]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function g(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],s=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),a=[(n[0]-e[0])/s,(n[1]-e[1])/s],u=0===r||0===s?0:Math.acos((x=a[0]*o[0]+a[1]*o[1],f=-1,l=1,Math.min(Math.max(x,f),l)));var x,f,l;return a[0]*i[0]+a[1]*i[1]>0?u:2*Math.PI-u}const b=null!==o;let m=0,w=0;if(null!==r){m=g(h,v,s(f,[...[e[r],e[r+1]]]))}if(b){w=g(v,h,s(f,[...[e[o],e[o+1]]]))}i.push(y[0],y[1],d[0],d[1],p(0,m,w)),i.push(...u),i.push(y[0],y[1],d[0],d[1],p(1,m,w)),i.push(...u),i.push(y[0],y[1],d[0],d[1],p(2,m,w)),i.push(...u),i.push(y[0],y[1],d[0],d[1],p(3,m,w)),i.push(...u),a.push(c,c+1,c+2,c+1,c+3,c+2)}function G(e,t,n,r,o){const i=2+o;let s=t;const a=e.slice(s,s+o);s+=o;const x=e[s++];let f=0;const l=new Array(x-1);for(let t=0;t<x;t++)f+=e[s++],t<x-1&&(l[t]=f);const c=e.slice(s,s+2*f),y=u.exports(c,l,2);for(let e=0;e<y.length;e++)r.push(y[e]+n.length/i);for(let e=0;e<c.length;e+=2)n.push(c[e],c[e+1],...a);return s+2*f}const O=self;O.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesCount,r=t+n,i=new Float32Array(o.renderInstructions),s=i.length/r,a=4*s*(n+e),u=new Uint32Array(6*s),x=new Float32Array(a);let f;for(let e=0;e<i.length;e+=r)f=_(i,e,x,u,n,f);const l=Object.assign({vertexBuffer:x.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);O.postMessage(l,[x.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesCount,r=2,i=new Float32Array(o.renderInstructions);let s=0;const u=o.renderInstructionsTransform,x=[1,0,0,1,0,0];let f,l;for(a(x,u);s<i.length;){l=Array.from(i.slice(s,s+n)),s+=n,f=i[s++];for(let n=0;n<f-1;n++)L(i,s+n*r,s+(n+1)*r,n>0?s+(n-1)*r:null,n<f-2?s+(n+2)*r:null,e,t,l,0,x);s+=f*r}const c=Uint32Array.from(t),y=Float32Array.from(e),d=Object.assign({vertexBuffer:y.buffer,indexBuffer:c.buffer,renderInstructions:i.buffer},o);O.postMessage(d,[y.buffer,c.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesCount,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=G(r,i,e,t,n);const s=Uint32Array.from(t),a=Float32Array.from(e),u=Object.assign({vertexBuffer:a.buffer,indexBuffer:s.buffer,renderInstructions:r.buffer},o);O.postMessage(u,[a.buffer,s.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.ready = false;\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    /**\n     * @private\n     */\n    this.hitVertexShader_ = options.hitVertexShader;\n\n    /**\n     * @private\n     */\n    this.hitFragmentShader_ = options.hitFragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.hitProgram_;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.generateBuffersRun_ = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n            if (received.generateBuffersRun === this.generateBuffersRun_) {\n              this.ready = true;\n            }\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitProgram_ = this.helper.getProgram(\n        this.hitFragmentShader_,\n        this.hitVertexShader_\n      );\n\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    let world = startWorld;\n    const renderCount = this.indicesBuffer_.getSize();\n\n    do {\n      // apply the current projection transform with the invert of the one used to fill buffers\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: 0,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    message['generateBuffersRun'] = ++this.generateBuffersRun_;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        id: 0,\n        type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderHitDetection(frameState, startWorld, endWorld, worldWidth) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    let world = startWorld;\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_, frameState);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/render/webgl/BatchRenderer\n */\nimport {WebGLWorkerMessageType} from './constants.js';\nimport {abstract} from '../../util.js';\nimport {\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default):number} callback This callback computes the numerical value of the\n * attribute for a given feature.\n */\n\nlet workerMessageCounter = 0;\n\n/**\n * @classdesc Abstract class for batch renderers.\n * Batch renderers are meant to render the geometries contained in a {@link module:ol/render/webgl/GeometryBatch}\n * instance. They are responsible for generating render instructions and transforming them into WebGL buffers.\n */\nclass AbstractBatchRenderer {\n  /**\n   * @param {import(\"../../webgl/Helper.js\").default} helper WebGL helper instance\n   * @param {Worker} worker WebGL worker instance\n   * @param {string} vertexShader Vertex shader\n   * @param {string} fragmentShader Fragment shader\n   * @param {Array<CustomAttribute>} customAttributes List of custom attributes\n   */\n  constructor(helper, worker, vertexShader, fragmentShader, customAttributes) {\n    /**\n     * @type {import(\"../../webgl/Helper.js\").default}\n     * @private\n     */\n    this.helper_ = helper;\n\n    /**\n     * @type {Worker}\n     * @private\n     */\n    this.worker_ = worker;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_ = this.helper_.getProgram(fragmentShader, vertexShader);\n\n    /**\n     * A list of attributes used by the renderer.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     * @protected\n     */\n    this.attributes = [];\n\n    /**\n     * @type {Array<CustomAttribute>}\n     * @protected\n     */\n    this.customAttributes = customAttributes;\n  }\n\n  /**\n   * Rebuild rendering instructions and webgl buffers based on the provided frame state\n   * Note: this is a costly operation.\n   * @param {import(\"./MixedGeometryBatch.js\").GeometryBatch} batch Geometry batch\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @param {import(\"../../geom/Geometry.js\").Type} geometryType Geometry type\n   * @param {function(): void} callback Function called once the render buffers are updated\n   */\n  rebuild(batch, frameState, geometryType, callback) {\n    // store transform for rendering instructions\n    batch.renderInstructionsTransform = this.helper_.makeProjectionTransform(\n      frameState,\n      createTransform()\n    );\n    this.generateRenderInstructions(batch);\n    this.generateBuffers_(batch, geometryType, callback);\n  }\n\n  /**\n   * Render the geometries in the batch. This will also update the current transform used for rendering according to\n   * the invert transform of the webgl buffers\n   * @param {import(\"./MixedGeometryBatch.js\").GeometryBatch} batch Geometry batch\n   * @param {import(\"../../transform.js\").Transform} currentTransform Transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX X offset\n   */\n  render(batch, currentTransform, frameState, offsetX) {\n    // multiply the current projection transform with the invert of the one used to fill buffers\n    this.helper_.makeProjectionTransform(frameState, currentTransform);\n    translateTransform(currentTransform, offsetX, 0);\n    multiplyTransform(currentTransform, batch.invertVerticesBufferTransform);\n\n    // enable program, buffers and attributes\n    this.helper_.useProgram(this.program_, frameState);\n    this.helper_.bindBuffer(batch.verticesBuffer);\n    this.helper_.bindBuffer(batch.indicesBuffer);\n    this.helper_.enableAttributes(this.attributes);\n\n    const renderCount = batch.indicesBuffer.getSize();\n    this.helper_.drawElements(0, renderCount);\n  }\n\n  /**\n   * Rebuild rendering instructions based on the provided frame state\n   * This is specific to the geometry type and has to be implemented by subclasses.\n   * @param {import(\"./MixedGeometryBatch.js\").GeometryBatch} batch Geometry batch\n   * @protected\n   */\n  generateRenderInstructions(batch) {\n    abstract();\n  }\n\n  /**\n   * Rebuild internal webgl buffers for rendering based on the current rendering instructions;\n   * This is asynchronous: webgl buffers wil _not_ be updated right away\n   * @param {import(\"./MixedGeometryBatch.js\").GeometryBatch} batch Geometry batch\n   * @param {import(\"../../geom/Geometry.js\").Type} geometryType Geometry type\n   * @param {function(): void} callback Function called once the render buffers are updated\n   * @private\n   */\n  generateBuffers_(batch, geometryType, callback) {\n    const messageId = workerMessageCounter++;\n\n    let messageType;\n    switch (geometryType) {\n      case 'Polygon':\n        messageType = WebGLWorkerMessageType.GENERATE_POLYGON_BUFFERS;\n        break;\n      case 'Point':\n        messageType = WebGLWorkerMessageType.GENERATE_POINT_BUFFERS;\n        break;\n      case 'LineString':\n        messageType = WebGLWorkerMessageType.GENERATE_LINE_STRING_BUFFERS;\n        break;\n      default:\n      // pass\n    }\n\n    /** @type {import('./constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: messageId,\n      type: messageType,\n      renderInstructions: batch.renderInstructions.buffer,\n      renderInstructionsTransform: batch.renderInstructionsTransform,\n      customAttributesCount: this.customAttributes.length,\n    };\n    this.worker_.postMessage(message, [batch.renderInstructions.buffer]);\n\n    // leave ownership of render instructions\n    batch.renderInstructions = null;\n\n    const handleMessage =\n      /**\n       * @param {*} event Event.\n       * @this {AbstractBatchRenderer}\n       */\n      function (event) {\n        const received = event.data;\n\n        // this is not the response to our request: skip\n        if (received.id !== messageId) {\n          return;\n        }\n\n        // we've received our response: stop listening\n        this.worker_.removeEventListener('message', handleMessage);\n\n        // store transform & invert transform for webgl buffers\n        batch.verticesBufferTransform = received.renderInstructionsTransform;\n        makeInverseTransform(\n          batch.invertVerticesBufferTransform,\n          batch.verticesBufferTransform\n        );\n\n        // copy & flush received buffers to GPU\n        batch.verticesBuffer.fromArrayBuffer(received.vertexBuffer);\n        this.helper_.flushBufferData(batch.verticesBuffer);\n        batch.indicesBuffer.fromArrayBuffer(received.indexBuffer);\n        this.helper_.flushBufferData(batch.indicesBuffer);\n\n        // take back ownership of the render instructions for further use\n        batch.renderInstructions = new Float32Array(\n          received.renderInstructions\n        );\n\n        callback();\n      }.bind(this);\n\n    this.worker_.addEventListener('message', handleMessage);\n  }\n}\n\nexport default AbstractBatchRenderer;\n","/**\n * @module ol/render/webgl/LineStringBatchRenderer\n */\nimport AbstractBatchRenderer from './BatchRenderer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * Names of attributes made available to the vertex shader.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const Attributes = {\n  SEGMENT_START: 'a_segmentStart',\n  SEGMENT_END: 'a_segmentEnd',\n  PARAMETERS: 'a_parameters',\n};\n\nclass LineStringBatchRenderer extends AbstractBatchRenderer {\n  /**\n   * @param {import(\"../../webgl/Helper.js\").default} helper WebGL helper instance\n   * @param {Worker} worker WebGL worker instance\n   * @param {string} vertexShader Vertex shader\n   * @param {string} fragmentShader Fragment shader\n   * @param {Array<import('./BatchRenderer.js').CustomAttribute>} customAttributes List of custom attributes\n   */\n  constructor(helper, worker, vertexShader, fragmentShader, customAttributes) {\n    super(helper, worker, vertexShader, fragmentShader, customAttributes);\n\n    // vertices for lines must hold both a position (x,y) and an offset (dx,dy)\n    this.attributes = [\n      {\n        name: Attributes.SEGMENT_START,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.SEGMENT_END,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.PARAMETERS,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(\n      customAttributes.map(function (attribute) {\n        return {\n          name: 'a_' + attribute.name,\n          size: 1,\n          type: AttributeType.FLOAT,\n        };\n      })\n    );\n  }\n\n  /**\n   * Render instructions for lines are structured like so:\n   * [ customAttr0, ... , customAttrN, numberOfVertices0, x0, y0, ... , xN, yN, numberOfVertices1, ... ]\n   * @param {import(\"./MixedGeometryBatch.js\").LineStringGeometryBatch} batch Linestring geometry batch\n   * @override\n   */\n  generateRenderInstructions(batch) {\n    // here we anticipate the amount of render instructions for lines:\n    // 2 instructions per vertex for position (x and y)\n    // + 1 instruction per line per custom attributes\n    // + 1 instruction per line (for vertices count)\n    const totalInstructionsCount =\n      2 * batch.verticesCount +\n      (1 + this.customAttributes.length) * batch.geometriesCount;\n    if (\n      !batch.renderInstructions ||\n      batch.renderInstructions.length !== totalInstructionsCount\n    ) {\n      batch.renderInstructions = new Float32Array(totalInstructionsCount);\n    }\n\n    // loop on features to fill the render instructions\n    let batchEntry;\n    const flatCoords = [];\n    let renderIndex = 0;\n    let value;\n    for (const featureUid in batch.entries) {\n      batchEntry = batch.entries[featureUid];\n      for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n        flatCoords.length = batchEntry.flatCoordss[i].length;\n        transform2D(\n          batchEntry.flatCoordss[i],\n          0,\n          flatCoords.length,\n          2,\n          batch.renderInstructionsTransform,\n          flatCoords\n        );\n\n        // custom attributes\n        for (let k = 0, kk = this.customAttributes.length; k < kk; k++) {\n          value = this.customAttributes[k].callback(batchEntry.feature);\n          batch.renderInstructions[renderIndex++] = value;\n        }\n\n        // vertices count\n        batch.renderInstructions[renderIndex++] = flatCoords.length / 2;\n\n        // looping on points for positions\n        for (let j = 0, jj = flatCoords.length; j < jj; j += 2) {\n          batch.renderInstructions[renderIndex++] = flatCoords[j];\n          batch.renderInstructions[renderIndex++] = flatCoords[j + 1];\n        }\n      }\n    }\n  }\n}\n\nexport default LineStringBatchRenderer;\n","/**\n * @module ol/render/webgl/MixedGeometryBatch\n */\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {create as createTransform} from '../../transform.js';\nimport {getUid} from '../../util.js';\n\n/**\n * @typedef {Object} GeometryBatchItem Object that holds a reference to a feature as well as the raw coordinates of its various geometries\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Array<Array<number>>} flatCoordss Array of flat coordinates arrays, one for each geometry related to the feature\n * @property {number} [verticesCount] Only defined for linestring and polygon batches\n * @property {number} [ringsCount] Only defined for polygon batches\n * @property {Array<Array<number>>} [ringsVerticesCounts] Array of vertices counts in each ring for each geometry; only defined for polygons batches\n */\n\n/**\n * @typedef {PointGeometryBatch|LineStringGeometryBatch|PolygonGeometryBatch} GeometryBatch\n */\n\n/**\n * @typedef {Object} PolygonGeometryBatch A geometry batch specific to polygons\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n * @property {Float32Array} renderInstructions Render instructions for polygons are structured like so:\n * [ numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, customAttr0, ..., xN, yN, customAttrN, numberOfRings,... ]\n * @property {WebGLArrayBuffer} verticesBuffer Vertices WebGL buffer\n * @property {WebGLArrayBuffer} indicesBuffer Indices WebGL buffer\n * @property {import(\"../../transform.js\").Transform} renderInstructionsTransform Converts world space coordinates to screen space; applies to the rendering instructions\n * @property {import(\"../../transform.js\").Transform} verticesBufferTransform Converts world space coordinates to screen space; applies to the webgl vertices buffer\n * @property {import(\"../../transform.js\").Transform} invertVerticesBufferTransform Screen space to world space; applies to the webgl vertices buffer\n * @property {number} verticesCount Amount of vertices from geometries in the batch.\n * @property {number} ringsCount How many outer and inner rings in this batch.\n */\n\n/**\n * @typedef {Object} LineStringGeometryBatch A geometry batch specific to lines\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n * @property {Float32Array} renderInstructions Render instructions for polygons are structured like so:\n * [ numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, customAttr0, ..., xN, yN, customAttrN, numberOfRings,... ]\n * @property {WebGLArrayBuffer} verticesBuffer Vertices WebGL buffer\n * @property {WebGLArrayBuffer} indicesBuffer Indices WebGL buffer\n * @property {import(\"../../transform.js\").Transform} renderInstructionsTransform Converts world space coordinates to screen space; applies to the rendering instructions\n * @property {import(\"../../transform.js\").Transform} verticesBufferTransform Converts world space coordinates to screen space; applies to the webgl vertices buffer\n * @property {import(\"../../transform.js\").Transform} invertVerticesBufferTransform Screen space to world space; applies to the webgl vertices buffer\n * @property {number} verticesCount Amount of vertices from geometries in the batch.\n */\n\n/**\n * @typedef {Object} PointGeometryBatch A geometry batch specific to points\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n * @property {Float32Array} renderInstructions Render instructions for polygons are structured like so:\n * [ numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, customAttr0, ..., xN, yN, customAttrN, numberOfRings,... ]\n * @property {WebGLArrayBuffer} verticesBuffer Vertices WebGL buffer\n * @property {WebGLArrayBuffer} indicesBuffer Indices WebGL buffer\n * @property {import(\"../../transform.js\").Transform} renderInstructionsTransform Converts world space coordinates to screen space; applies to the rendering instructions\n * @property {import(\"../../transform.js\").Transform} verticesBufferTransform Converts world space coordinates to screen space; applies to the webgl vertices buffer\n * @property {import(\"../../transform.js\").Transform} invertVerticesBufferTransform Screen space to world space; applies to the webgl vertices buffer\n */\n\n/**\n * @classdesc This class is used to group several geometries of various types together for faster rendering.\n * Three inner batches are maintained for polygons, lines and points. Each time a feature is added, changed or removed\n * from the batch, these inner batches are modified accordingly in order to keep them up-to-date.\n *\n * A feature can be present in several inner batches, for example a polygon geometry will be present in the polygon batch\n * and its linar rings will be present in the line batch. Multi geometries are also broken down into individual geometries\n * and added to the corresponding batches in a recursive manner.\n *\n * Corresponding {@link module:ol/render/webgl/BatchRenderer} instances are then used to generate the render instructions\n * and WebGL buffers (vertices and indices) for each inner batches; render instructions are stored on the inner batches,\n * alongside the transform used to convert world coords to screen coords at the time these instructions were generated.\n * The resulting WebGL buffers are stored on the batches as well.\n *\n * An important aspect of geometry batches is that there is no guarantee that render instructions and WebGL buffers\n * are synchronized, i.e. render instructions can describe a new state while WebGL buffers might not have been written yet.\n * This is why two world-to-screen transforms are stored on each batch: one for the render instructions and one for\n * the WebGL buffers.\n */\nclass MixedGeometryBatch {\n  constructor() {\n    /**\n     * @type {PolygonGeometryBatch}\n     */\n    this.polygonBatch = {\n      entries: {},\n      geometriesCount: 0,\n      verticesCount: 0,\n      ringsCount: 0,\n      renderInstructions: new Float32Array(0),\n      verticesBuffer: new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW),\n      indicesBuffer: new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW),\n      renderInstructionsTransform: createTransform(),\n      verticesBufferTransform: createTransform(),\n      invertVerticesBufferTransform: createTransform(),\n    };\n\n    /**\n     * @type {PointGeometryBatch}\n     */\n    this.pointBatch = {\n      entries: {},\n      geometriesCount: 0,\n      renderInstructions: new Float32Array(0),\n      verticesBuffer: new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW),\n      indicesBuffer: new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW),\n      renderInstructionsTransform: createTransform(),\n      verticesBufferTransform: createTransform(),\n      invertVerticesBufferTransform: createTransform(),\n    };\n\n    /**\n     * @type {LineStringGeometryBatch}\n     */\n    this.lineStringBatch = {\n      entries: {},\n      geometriesCount: 0,\n      verticesCount: 0,\n      renderInstructions: new Float32Array(0),\n      verticesBuffer: new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW),\n      indicesBuffer: new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW),\n      renderInstructionsTransform: createTransform(),\n      verticesBufferTransform: createTransform(),\n      invertVerticesBufferTransform: createTransform(),\n    };\n  }\n\n  /**\n   * @param {Array<import(\"../../Feature\").default>} features Array of features to add to the batch\n   */\n  addFeatures(features) {\n    for (let i = 0; i < features.length; i++) {\n      this.addFeature(features[i]);\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature to add to the batch\n   */\n  addFeature(feature) {\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      return;\n    }\n    this.addGeometry_(geometry, feature);\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @return {GeometryBatchItem} Batch item added (or existing one)\n   * @private\n   */\n  addFeatureEntryInPointBatch_(feature) {\n    const uid = getUid(feature);\n    if (!(uid in this.pointBatch.entries)) {\n      this.pointBatch.entries[uid] = {\n        feature: feature,\n        flatCoordss: [],\n      };\n    }\n    return this.pointBatch.entries[uid];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @return {GeometryBatchItem} Batch item added (or existing one)\n   * @private\n   */\n  addFeatureEntryInLineStringBatch_(feature) {\n    const uid = getUid(feature);\n    if (!(uid in this.lineStringBatch.entries)) {\n      this.lineStringBatch.entries[uid] = {\n        feature: feature,\n        flatCoordss: [],\n        verticesCount: 0,\n      };\n    }\n    return this.lineStringBatch.entries[uid];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @return {GeometryBatchItem} Batch item added (or existing one)\n   * @private\n   */\n  addFeatureEntryInPolygonBatch_(feature) {\n    const uid = getUid(feature);\n    if (!(uid in this.polygonBatch.entries)) {\n      this.polygonBatch.entries[uid] = {\n        feature: feature,\n        flatCoordss: [],\n        verticesCount: 0,\n        ringsCount: 0,\n        ringsVerticesCounts: [],\n      };\n    }\n    return this.polygonBatch.entries[uid];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @private\n   */\n  clearFeatureEntryInPointBatch_(feature) {\n    const entry = this.pointBatch.entries[getUid(feature)];\n    if (!entry) {\n      return;\n    }\n    this.pointBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.pointBatch.entries[getUid(feature)];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @private\n   */\n  clearFeatureEntryInLineStringBatch_(feature) {\n    const entry = this.lineStringBatch.entries[getUid(feature)];\n    if (!entry) {\n      return;\n    }\n    this.lineStringBatch.verticesCount -= entry.verticesCount;\n    this.lineStringBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.lineStringBatch.entries[getUid(feature)];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @private\n   */\n  clearFeatureEntryInPolygonBatch_(feature) {\n    const entry = this.polygonBatch.entries[getUid(feature)];\n    if (!entry) {\n      return;\n    }\n    this.polygonBatch.verticesCount -= entry.verticesCount;\n    this.polygonBatch.ringsCount -= entry.ringsCount;\n    this.polygonBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.polygonBatch.entries[getUid(feature)];\n  }\n\n  /**\n   * @param {import(\"../../geom\").Geometry} geometry Geometry\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @private\n   */\n  addGeometry_(geometry, feature) {\n    const type = geometry.getType();\n    let flatCoords;\n    let verticesCount;\n    let batchEntry;\n    switch (type) {\n      case 'GeometryCollection':\n        /** @type {import(\"../../geom\").GeometryCollection} */ (geometry)\n          .getGeometries()\n          .map((geom) => this.addGeometry_(geom, feature));\n        break;\n      case 'MultiPolygon':\n        /** @type {import(\"../../geom\").MultiPolygon} */ (geometry)\n          .getPolygons()\n          .map((polygon) => this.addGeometry_(polygon, feature));\n        break;\n      case 'MultiLineString':\n        /** @type {import(\"../../geom\").MultiLineString} */ (geometry)\n          .getLineStrings()\n          .map((line) => this.addGeometry_(line, feature));\n        break;\n      case 'MultiPoint':\n        /** @type {import(\"../../geom\").MultiPoint} */ (geometry)\n          .getPoints()\n          .map((point) => this.addGeometry_(point, feature));\n        break;\n      case 'Polygon':\n        const polygonGeom = /** @type {import(\"../../geom\").Polygon} */ (\n          geometry\n        );\n        batchEntry = this.addFeatureEntryInPolygonBatch_(feature);\n        flatCoords = polygonGeom.getFlatCoordinates();\n        verticesCount = flatCoords.length / 2;\n        const ringsCount = polygonGeom.getLinearRingCount();\n        const ringsVerticesCount = polygonGeom\n          .getEnds()\n          .map((end, ind, arr) =>\n            ind > 0 ? (end - arr[ind - 1]) / 2 : end / 2\n          );\n        this.polygonBatch.verticesCount += verticesCount;\n        this.polygonBatch.ringsCount += ringsCount;\n        this.polygonBatch.geometriesCount++;\n        batchEntry.flatCoordss.push(flatCoords);\n        batchEntry.ringsVerticesCounts.push(ringsVerticesCount);\n        batchEntry.verticesCount += verticesCount;\n        batchEntry.ringsCount += ringsCount;\n        polygonGeom\n          .getLinearRings()\n          .map((ring) => this.addGeometry_(ring, feature));\n        break;\n      case 'Point':\n        const pointGeom = /** @type {import(\"../../geom\").Point} */ (geometry);\n        batchEntry = this.addFeatureEntryInPointBatch_(feature);\n        flatCoords = pointGeom.getFlatCoordinates();\n        this.pointBatch.geometriesCount++;\n        batchEntry.flatCoordss.push(flatCoords);\n        break;\n      case 'LineString':\n      case 'LinearRing':\n        const lineGeom = /** @type {import(\"../../geom\").LineString} */ (\n          geometry\n        );\n        batchEntry = this.addFeatureEntryInLineStringBatch_(feature);\n        flatCoords = lineGeom.getFlatCoordinates();\n        verticesCount = flatCoords.length / 2;\n        this.lineStringBatch.verticesCount += verticesCount;\n        this.lineStringBatch.geometriesCount++;\n        batchEntry.flatCoordss.push(flatCoords);\n        batchEntry.verticesCount += verticesCount;\n        break;\n      default:\n      // pass\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   */\n  changeFeature(feature) {\n    this.clearFeatureEntryInPointBatch_(feature);\n    this.clearFeatureEntryInPolygonBatch_(feature);\n    this.clearFeatureEntryInLineStringBatch_(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      return;\n    }\n    this.addGeometry_(geometry, feature);\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   */\n  removeFeature(feature) {\n    this.clearFeatureEntryInPointBatch_(feature);\n    this.clearFeatureEntryInPolygonBatch_(feature);\n    this.clearFeatureEntryInLineStringBatch_(feature);\n  }\n\n  clear() {\n    this.polygonBatch.entries = {};\n    this.polygonBatch.geometriesCount = 0;\n    this.polygonBatch.verticesCount = 0;\n    this.polygonBatch.ringsCount = 0;\n    this.lineStringBatch.entries = {};\n    this.lineStringBatch.geometriesCount = 0;\n    this.lineStringBatch.verticesCount = 0;\n    this.pointBatch.entries = {};\n    this.pointBatch.geometriesCount = 0;\n  }\n}\n\nexport default MixedGeometryBatch;\n","/**\n * @module ol/render/webgl/PointBatchRenderer\n */\n\nimport AbstractBatchRenderer from './BatchRenderer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n/**\n * Names of attributes made available to the vertex shader.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const Attributes = {\n  POSITION: 'a_position',\n  INDEX: 'a_index',\n};\n\nclass PointBatchRenderer extends AbstractBatchRenderer {\n  /**\n   * @param {import(\"../../webgl/Helper.js\").default} helper WebGL helper instance\n   * @param {Worker} worker WebGL worker instance\n   * @param {string} vertexShader Vertex shader\n   * @param {string} fragmentShader Fragment shader\n   * @param {Array<import('./BatchRenderer.js').CustomAttribute>} customAttributes List of custom attributes\n   */\n  constructor(helper, worker, vertexShader, fragmentShader, customAttributes) {\n    super(helper, worker, vertexShader, fragmentShader, customAttributes);\n\n    // vertices for point must hold both a position (x,y) and an index (their position in the quad)\n    this.attributes = [\n      {\n        name: Attributes.POSITION,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.INDEX,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(\n      customAttributes.map(function (attribute) {\n        return {\n          name: 'a_' + attribute.name,\n          size: 1,\n          type: AttributeType.FLOAT,\n        };\n      })\n    );\n  }\n\n  /**\n   * Render instructions for lines are structured like so:\n   * [ x0, y0, customAttr0, ... , xN, yN, customAttrN ]\n   * @param {import(\"./MixedGeometryBatch.js\").PointGeometryBatch} batch Point geometry batch\n   * @override\n   */\n  generateRenderInstructions(batch) {\n    // here we anticipate the amount of render instructions for points:\n    // 2 instructions per vertex for position (x and y)\n    // + 1 instruction per vertex per custom attributes\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * batch.geometriesCount;\n    if (\n      !batch.renderInstructions ||\n      batch.renderInstructions.length !== totalInstructionsCount\n    ) {\n      batch.renderInstructions = new Float32Array(totalInstructionsCount);\n    }\n\n    // loop on features to fill the render instructions\n    let batchEntry;\n    const tmpCoords = [];\n    let renderIndex = 0;\n    let value;\n    for (const featureUid in batch.entries) {\n      batchEntry = batch.entries[featureUid];\n      for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n        tmpCoords[0] = batchEntry.flatCoordss[i][0];\n        tmpCoords[1] = batchEntry.flatCoordss[i][1];\n        applyTransform(batch.renderInstructionsTransform, tmpCoords);\n\n        batch.renderInstructions[renderIndex++] = tmpCoords[0];\n        batch.renderInstructions[renderIndex++] = tmpCoords[1];\n\n        // pushing custom attributes\n        for (let j = 0, jj = this.customAttributes.length; j < jj; j++) {\n          value = this.customAttributes[j].callback(batchEntry.feature);\n          batch.renderInstructions[renderIndex++] = value;\n        }\n      }\n    }\n  }\n}\n\nexport default PointBatchRenderer;\n","/**\n * @module ol/render/webgl/PolygonBatchRenderer\n */\nimport AbstractBatchRenderer from './BatchRenderer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * Names of attributes made available to the vertex shader.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const Attributes = {\n  POSITION: 'a_position',\n};\n\nclass PolygonBatchRenderer extends AbstractBatchRenderer {\n  /**\n   * @param {import(\"../../webgl/Helper.js\").default} helper WebGL helper instance\n   * @param {Worker} worker WebGL worker instance\n   * @param {string} vertexShader Vertex shader\n   * @param {string} fragmentShader Fragment shader\n   * @param {Array<import('./BatchRenderer.js').CustomAttribute>} customAttributes List of custom attributes\n   */\n  constructor(helper, worker, vertexShader, fragmentShader, customAttributes) {\n    super(helper, worker, vertexShader, fragmentShader, customAttributes);\n\n    // By default only a position attribute is required to render polygons\n    this.attributes = [\n      {\n        name: Attributes.POSITION,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(\n      customAttributes.map(function (attribute) {\n        return {\n          name: 'a_' + attribute.name,\n          size: 1,\n          type: AttributeType.FLOAT,\n        };\n      })\n    );\n  }\n\n  /**\n   * Render instructions for polygons are structured like so:\n   * [ customAttr0, ..., customAttrN, numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, ..., xN, yN, numberOfRings,... ]\n   * @param {import(\"./MixedGeometryBatch.js\").PolygonGeometryBatch} batch Polygon geometry batch\n   * @override\n   */\n  generateRenderInstructions(batch) {\n    // here we anticipate the amount of render instructions for polygons:\n    // 2 instructions per vertex for position (x and y)\n    // + 1 instruction per polygon per custom attributes\n    // + 1 instruction per polygon (for vertices count in polygon)\n    // + 1 instruction per ring (for vertices count in ring)\n    const totalInstructionsCount =\n      2 * batch.verticesCount +\n      (1 + this.customAttributes.length) * batch.geometriesCount +\n      batch.ringsCount;\n    if (\n      !batch.renderInstructions ||\n      batch.renderInstructions.length !== totalInstructionsCount\n    ) {\n      batch.renderInstructions = new Float32Array(totalInstructionsCount);\n    }\n\n    // loop on features to fill the render instructions\n    let batchEntry;\n    const flatCoords = [];\n    let renderIndex = 0;\n    let value;\n    for (const featureUid in batch.entries) {\n      batchEntry = batch.entries[featureUid];\n      for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n        flatCoords.length = batchEntry.flatCoordss[i].length;\n        transform2D(\n          batchEntry.flatCoordss[i],\n          0,\n          flatCoords.length,\n          2,\n          batch.renderInstructionsTransform,\n          flatCoords\n        );\n\n        // custom attributes\n        for (let k = 0, kk = this.customAttributes.length; k < kk; k++) {\n          value = this.customAttributes[k].callback(batchEntry.feature);\n          batch.renderInstructions[renderIndex++] = value;\n        }\n\n        // ring count\n        batch.renderInstructions[renderIndex++] =\n          batchEntry.ringsVerticesCounts[i].length;\n\n        // vertices count in each ring\n        for (\n          let j = 0, jj = batchEntry.ringsVerticesCounts[i].length;\n          j < jj;\n          j++\n        ) {\n          batch.renderInstructions[renderIndex++] =\n            batchEntry.ringsVerticesCounts[i][j];\n        }\n\n        // looping on points for positions\n        for (let j = 0, jj = flatCoords.length; j < jj; j += 2) {\n          batch.renderInstructions[renderIndex++] = flatCoords[j];\n          batch.renderInstructions[renderIndex++] = flatCoords[j + 1];\n        }\n      }\n    }\n  }\n}\n\nexport default PolygonBatchRenderer;\n","/**\n * @module ol/renderer/webgl/shaders\n */\nimport {asArray} from '../../color.js';\n\n/** @typedef {'color'|'opacity'|'width'} DefaultAttributes */\n\n/**\n * Packs red/green/blue channels of a color into a single float value; alpha is ignored.\n * This is how the color is expected to be computed.\n * @param {import(\"../../color.js\").Color|string} color Color as array of numbers or string\n * @return {number} Float value containing the color\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256 * 256;\n  const g = array[1] * 256;\n  const b = array[2];\n  return r + g + b;\n}\n\nconst DECODE_COLOR_EXPRESSION = `vec3(\n  fract(floor(a_color / 256.0 / 256.0) / 256.0),\n  fract(floor(a_color / 256.0) / 256.0),\n  fract(a_color / 256.0)\n);`;\n\n/**\n * Default polygon vertex shader.\n * Relies on the color and opacity attributes.\n * @type {string}\n */\nexport const FILL_VERTEX_SHADER = `\n  precision mediump float;\n  uniform mat4 u_projectionMatrix;\n  attribute vec2 a_position;\n  attribute float a_color;\n  attribute float a_opacity;\n  varying vec3 v_color;\n  varying float v_opacity;\n\n  void main(void) {\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n    v_color = ${DECODE_COLOR_EXPRESSION}\n    v_opacity = a_opacity;\n  }`;\n\n/**\n * Default polygon fragment shader.\n * @type {string}\n */\nexport const FILL_FRAGMENT_SHADER = `\n  precision mediump float;\n  varying vec3 v_color;\n  varying float v_opacity;\n\n  void main(void) {\n    gl_FragColor = vec4(v_color, 1.0) * v_opacity;\n  }`;\n\n/**\n * Default linestring vertex shader.\n * Relies on color, opacity and width attributes.\n * @type {string}\n */\nexport const STROKE_VERTEX_SHADER = `\n  precision mediump float;\n  uniform mat4 u_projectionMatrix;\n  uniform vec2 u_sizePx;\n  attribute vec2 a_segmentStart;\n  attribute vec2 a_segmentEnd;\n  attribute float a_parameters;\n  attribute float a_color;\n  attribute float a_opacity;\n  attribute float a_width;\n  varying vec2 v_segmentStart;\n  varying vec2 v_segmentEnd;\n  varying float v_angleStart;\n  varying float v_angleEnd;\n  varying vec3 v_color;\n  varying float v_opacity;\n  varying float v_width;\n\n  vec2 worldToPx(vec2 worldPos) {\n    vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n    return (0.5 * screenPos.xy + 0.5) * u_sizePx;\n  }\n\n  vec4 pxToScreen(vec2 pxPos) {\n    vec2 screenPos = pxPos * 4.0 / u_sizePx;\n    return vec4(screenPos.xy, 0.0, 0.0);\n  }\n\n  vec2 getOffsetDirection(vec2 normalPx, vec2 tangentPx, float joinAngle) {\n    if (cos(joinAngle) > 0.93) return normalPx - tangentPx;\n    float halfAngle = joinAngle / 2.0;\n    vec2 angleBisectorNormal = vec2(\n      sin(halfAngle) * normalPx.x + cos(halfAngle) * normalPx.y,\n      -cos(halfAngle) * normalPx.x + sin(halfAngle) * normalPx.y\n    );\n    float length = 1.0 / sin(halfAngle);\n    return angleBisectorNormal * length;\n  }\n\n  void main(void) {\n    float anglePrecision = 1500.0;\n    float paramShift = 10000.0;\n    v_angleStart = fract(a_parameters / paramShift) * paramShift / anglePrecision;\n    v_angleEnd = fract(floor(a_parameters / paramShift + 0.5) / paramShift) * paramShift / anglePrecision;\n    float vertexNumber = floor(a_parameters / paramShift / paramShift + 0.0001);\n    vec2 tangentPx = worldToPx(a_segmentEnd) - worldToPx(a_segmentStart);\n    tangentPx = normalize(tangentPx);\n    vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n    float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n    float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n    float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n    vec2 offsetPx = getOffsetDirection(normalPx * normalDir, tangentDir * tangentPx, angle) * a_width * 0.5;\n    vec2 position =  vertexNumber < 1.5 ? a_segmentStart : a_segmentEnd;\n    gl_Position = u_projectionMatrix * vec4(position, 0.0, 1.0) + pxToScreen(offsetPx);\n    v_segmentStart = worldToPx(a_segmentStart);\n    v_segmentEnd = worldToPx(a_segmentEnd);\n    v_color = ${DECODE_COLOR_EXPRESSION}\n    v_opacity = a_opacity;\n    v_width = a_width;\n  }`;\n\n/**\n * Default linestring fragment shader.\n * @type {string}\n */\nexport const STROKE_FRAGMENT_SHADER = `\n  precision mediump float;\n  uniform float u_pixelRatio;\n  varying vec2 v_segmentStart;\n  varying vec2 v_segmentEnd;\n  varying float v_angleStart;\n  varying float v_angleEnd;\n  varying vec3 v_color;\n  varying float v_opacity;\n  varying float v_width;\n\n  float segmentDistanceField(vec2 point, vec2 start, vec2 end, float radius) {\n    vec2 startToPoint = point - start;\n    vec2 startToEnd = end - start;\n    float ratio = clamp(dot(startToPoint, startToEnd) / dot(startToEnd, startToEnd), 0.0, 1.0);\n    float dist = length(startToPoint - ratio * startToEnd);\n    return 1.0 - smoothstep(radius - 1.0, radius, dist);\n  }\n\n  void main(void) {\n    vec2 v_currentPoint = gl_FragCoord.xy / u_pixelRatio;\n    gl_FragColor = vec4(v_color, 1.0) * v_opacity;\n    gl_FragColor *= segmentDistanceField(v_currentPoint, v_segmentStart, v_segmentEnd, v_width);\n  }`;\n\n/**\n * Default point vertex shader.\n * Relies on color and opacity attributes.\n * @type {string}\n */\nexport const POINT_VERTEX_SHADER = `\n  precision mediump float;\n  uniform mat4 u_projectionMatrix;\n  uniform mat4 u_offsetScaleMatrix;\n  attribute vec2 a_position;\n  attribute float a_index;\n  attribute float a_color;\n  attribute float a_opacity;\n  varying vec2 v_texCoord;\n  varying vec3 v_color;\n  varying float v_opacity;\n\n  void main(void) {\n    mat4 offsetMatrix = u_offsetScaleMatrix;\n    float size = 6.0;\n    float offsetX = a_index == 0.0 || a_index == 3.0 ? -size / 2.0 : size / 2.0;\n    float offsetY = a_index == 0.0 || a_index == 1.0 ? -size / 2.0 : size / 2.0;\n    vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n    float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n    float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n    v_texCoord = vec2(u, v);\n    v_color = ${DECODE_COLOR_EXPRESSION}\n    v_opacity = a_opacity;\n  }`;\n\n/**\n * Default point fragment shader.\n * @type {string}\n */\nexport const POINT_FRAGMENT_SHADER = `\n  precision mediump float;\n  varying vec3 v_color;\n  varying float v_opacity;\n\n  void main(void) {\n      gl_FragColor = vec4(v_color, 1.0) * v_opacity;\n  }`;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport LineStringBatchRenderer from '../../render/webgl/LineStringBatchRenderer.js';\nimport MixedGeometryBatch from '../../render/webgl/MixedGeometryBatch.js';\nimport PointBatchRenderer from '../../render/webgl/PointBatchRenderer.js';\nimport PolygonBatchRenderer from '../../render/webgl/PolygonBatchRenderer.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  FILL_FRAGMENT_SHADER,\n  FILL_VERTEX_SHADER,\n  POINT_FRAGMENT_SHADER,\n  POINT_VERTEX_SHADER,\n  STROKE_FRAGMENT_SHADER,\n  STROKE_VERTEX_SHADER,\n  packColor,\n} from './shaders.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {function(import(\"../../Feature\").default, Object<string, *>):number} CustomAttributeCallback A callback computing\n * the value of a custom attribute (different for each feature) to be passed on to the GPU.\n * Properties are available as 2nd arg for quicker access.\n */\n\n/**\n * @typedef {Object} ShaderProgram An object containing both shaders (vertex and fragment) as well as the required attributes\n * @property {string} [vertexShader] Vertex shader source (using the default one if unspecified).\n * @property {string} [fragmentShader] Fragment shader source (using the default one if unspecified).\n * @property {Object<import(\"./shaders.js\").DefaultAttributes,CustomAttributeCallback>} attributes Custom attributes made available in the vertex shader.\n * Keys are the names of the attributes which are then accessible in the vertex shader using the `a_` prefix, e.g.: `a_opacity`.\n * Default shaders rely on the attributes in {@link module:ol/render/webgl/shaders~DefaultAttributes}.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {ShaderProgram} [fill] Attributes and shaders for filling polygons.\n * @property {ShaderProgram} [stroke] Attributes and shaders for line strings and polygon strokes.\n * @property {ShaderProgram} [point] Attributes and shaders for points.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @param {Object<import(\"./shaders.js\").DefaultAttributes,CustomAttributeCallback>} obj Lookup of attribute getters.\n * @return {Array<import(\"../../render/webgl/BatchRenderer\").CustomAttribute>} An array of attribute descriptors.\n */\nfunction toAttributesArray(obj) {\n  return Object.keys(obj).map((key) => ({name: key, callback: obj[key]}));\n}\n\n/**\n * @classdesc\n * Experimental WebGL vector renderer. Supports polygons, lines and points:\n *  * Polygons are broken down into triangles\n *  * Lines are rendered as strips of quads\n *  * Points are rendered as quads\n *\n * You need to provide vertex and fragment shaders as well as custom attributes for each type of geometry. All shaders\n * can access the uniforms in the {@link module:ol/webgl/Helper~DefaultUniform} enum.\n * The vertex shaders can access the following attributes depending on the geometry type:\n *  * For polygons: {@link module:ol/render/webgl/PolygonBatchRenderer~Attributes}\n *  * For line strings: {@link module:ol/render/webgl/LineStringBatchRenderer~Attributes}\n *  * For points: {@link module:ol/render/webgl/PointBatchRenderer~Attributes}\n *\n * Please note that the fragment shaders output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Note: this uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n */\nclass WebGLVectorLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    const fillAttributes = {\n      color: function () {\n        return packColor('#ddd');\n      },\n      opacity: function () {\n        return 1;\n      },\n      ...(options.fill && options.fill.attributes),\n    };\n\n    const strokeAttributes = {\n      color: function () {\n        return packColor('#eee');\n      },\n      opacity: function () {\n        return 1;\n      },\n      width: function () {\n        return 1.5;\n      },\n      ...(options.stroke && options.stroke.attributes),\n    };\n\n    const pointAttributes = {\n      color: function () {\n        return packColor('#eee');\n      },\n      opacity: function () {\n        return 1;\n      },\n      ...(options.point && options.point.attributes),\n    };\n\n    this.fillVertexShader_ =\n      (options.fill && options.fill.vertexShader) || FILL_VERTEX_SHADER;\n    this.fillFragmentShader_ =\n      (options.fill && options.fill.fragmentShader) || FILL_FRAGMENT_SHADER;\n    this.fillAttributes_ = toAttributesArray(fillAttributes);\n\n    this.strokeVertexShader_ =\n      (options.stroke && options.stroke.vertexShader) || STROKE_VERTEX_SHADER;\n    this.strokeFragmentShader_ =\n      (options.stroke && options.stroke.fragmentShader) ||\n      STROKE_FRAGMENT_SHADER;\n    this.strokeAttributes_ = toAttributesArray(strokeAttributes);\n\n    this.pointVertexShader_ =\n      (options.point && options.point.vertexShader) || POINT_VERTEX_SHADER;\n    this.pointFragmentShader_ =\n      (options.point && options.point.fragmentShader) || POINT_FRAGMENT_SHADER;\n    this.pointAttributes_ = toAttributesArray(pointAttributes);\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    /**\n     * @private\n     */\n    this.batch_ = new MixedGeometryBatch();\n\n    const source = this.getLayer().getSource();\n    this.batch_.addFeatures(source.getFeatures());\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n  }\n\n  afterHelperCreated() {\n    this.polygonRenderer_ = new PolygonBatchRenderer(\n      this.helper,\n      this.worker_,\n      this.fillVertexShader_,\n      this.fillFragmentShader_,\n      this.fillAttributes_\n    );\n    this.pointRenderer_ = new PointBatchRenderer(\n      this.helper,\n      this.worker_,\n      this.pointVertexShader_,\n      this.pointFragmentShader_,\n      this.pointAttributes_\n    );\n    this.lineStringRenderer_ = new LineStringBatchRenderer(\n      this.helper,\n      this.worker_,\n      this.strokeVertexShader_,\n      this.strokeFragmentShader_,\n      this.strokeAttributes_\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.batch_.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.batch_.changeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    this.batch_.removeFeature(feature);\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.batch_.clear();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const projection = frameState.viewState.projection;\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    do {\n      this.polygonRenderer_.render(\n        this.batch_.polygonBatch,\n        this.currentTransform_,\n        frameState,\n        world * worldWidth\n      );\n      this.lineStringRenderer_.render(\n        this.batch_.lineStringBatch,\n        this.currentTransform_,\n        frameState,\n        world * worldWidth\n      );\n      this.pointRenderer_.render(\n        this.batch_.pointBatch,\n        this.currentTransform_,\n        frameState,\n        world * worldWidth\n      );\n    } while (++world < endWorld);\n\n    this.helper.finalizeDraw(frameState);\n\n    const canvas = this.helper.getCanvas();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.ready = false;\n      let remaining = 3;\n      const rebuildCb = () => {\n        remaining--;\n        this.ready = remaining <= 0;\n        this.getLayer().changed();\n      };\n\n      this.polygonRenderer_.rebuild(\n        this.batch_.polygonBatch,\n        frameState,\n        'Polygon',\n        rebuildCb\n      );\n      this.lineStringRenderer_.rebuild(\n        this.batch_.lineStringBatch,\n        frameState,\n        'LineString',\n        rebuildCb\n      );\n      this.pointRenderer_.rebuild(\n        this.batch_.pointBatch,\n        frameState,\n        'Point',\n        rebuildCb\n      );\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    this.helper.prepareDraw(frameState);\n\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      context.globalAlpha = layerState.opacity;\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(\n        EventType.CHANGE,\n        function () {\n          if (image.getState() !== ImageState.LOADED) {\n            return;\n          }\n          this.image_ = emptyImage ? null : image;\n          const imageResolution = image.getResolution();\n          const imagePixelRatio = image.getPixelRatio();\n          const renderedResolution =\n            (imageResolution * pixelRatio) / imagePixelRatio;\n          this.renderedResolution = renderedResolution;\n          this.coordinateToVectorPixelTransform_ = compose(\n            this.coordinateToVectorPixelTransform_,\n            width / 2,\n            height / 2,\n            1 / renderedResolution,\n            -1 / renderedResolution,\n            0,\n            -viewState.center[0],\n            -viewState.center[1]\n          );\n        }.bind(this)\n      );\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    } else {\n      return super.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      function (resolve, reject) {\n        const layer =\n          /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n            this.getLayer()\n          );\n        const layerUid = getUid(layer);\n        const source = layer.getSource();\n        const projection = this.renderedProjection;\n        const projectionExtent = projection.getExtent();\n        const resolution = this.renderedResolution;\n        const tileGrid = source.getTileGridForProjection(projection);\n        const coordinate = applyTransform(\n          this.renderedPixelToCoordinateTransform_,\n          pixel.slice()\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n          coordinate,\n          resolution\n        );\n        let tile;\n        for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n          if (\n            tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n          ) {\n            tile = this.renderedTiles[i];\n            if (tile.getState() === TileState.LOADED) {\n              const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n              if (\n                source.getWrapX() &&\n                projection.canWrapX() &&\n                !containsExtent(projectionExtent, extent)\n              ) {\n                wrapX(coordinate, projection);\n              }\n              break;\n            }\n            tile = undefined;\n          }\n        }\n        if (!tile || tile.loadingSourceTiles > 0) {\n          resolve([]);\n          return;\n        }\n        const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        const corner = getTopLeft(extent);\n        const tilePixel = [\n          (coordinate[0] - corner[0]) / resolution,\n          (corner[1] - coordinate[1]) / resolution,\n        ];\n        const features = tile\n          .getSourceTiles()\n          .reduce(function (accumulator, sourceTile) {\n            return accumulator.concat(sourceTile.getFeatures());\n          }, []);\n        let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n        if (!hitDetectionImageData && !this.animatingOrInteracting_) {\n          const tileSize = toSize(\n            tileGrid.getTileSize(\n              tileGrid.getZForResolution(resolution, source.zDirection)\n            )\n          );\n          const rotation = this.renderedRotation_;\n          const transforms = [\n            this.getRenderTransform(\n              tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n              resolution,\n              0,\n              HIT_DETECT_RESOLUTION,\n              tileSize[0] * HIT_DETECT_RESOLUTION,\n              tileSize[1] * HIT_DETECT_RESOLUTION,\n              0\n            ),\n          ];\n          hitDetectionImageData = createHitDetectionImageData(\n            tileSize,\n            transforms,\n            features,\n            layer.getStyleFunction(),\n            tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n            tile.getReplayState(layer).renderedResolution,\n            rotation\n          );\n          tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n        }\n        resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = function (feature) {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      }.bind(this);\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = function (feature) {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      }.bind(this);\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n            u_opacity: function () {\n              return this.getOpacity();\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/layer/MapboxVector\n */\nimport BaseEvent from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport MVT from '../format/MVT.js';\nimport VectorTileLayer from '../layer/VectorTile.js';\nimport VectorTileSource from '../source/VectorTile.js';\nimport {applyBackground, applyStyle} from 'ol-mapbox-style';\n\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    applyStyle(this, url, options.layers || options.source, {\n      accessToken: this.accessToken,\n    })\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n    if (this.getBackground() === undefined) {\n      applyBackground(this, options.styleUrl, {\n        accessToken: this.accessToken,\n      });\n    }\n  }\n}\n\nexport default MapboxVectorLayer;\n","/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  ValueTypes,\n  expressionToGlsl,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../style/expressions.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const context = {\n    inFragmentShader: true,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n    bandCount: bandCount,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(\n      context,\n      style.contrast,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(\n      context,\n      style.exposure,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(\n      context,\n      style.saturation,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(\n      context,\n      style.brightness,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = context.variables.length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variableName = context.variables[i];\n    if (!(variableName in style.variables)) {\n      throw new Error(`Missing '${variableName}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variableName);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variableName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(context, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(function (\n    name\n  ) {\n    return context.functions[name];\n  });\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      if (color.a == 0.0) {\n        discard;\n      }\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n      ? [source]\n      : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(\n      function () {\n        this.handlePointerMove_(\n          new MapBrowserEvent(\n            MapBrowserEventType.POINTERMOVE,\n            event.map,\n            event.originalEvent,\n            false,\n            event.frameState\n          )\n        );\n      }.bind(this),\n      this.dragVertexDelay_\n    );\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {animate: true, replace: false, prefix: ''},\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if (differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if (differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (differentArray(center, view.getCenter())) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (layersParam && layersParam.length === layers.length) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(null, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {import(\"../Feature\").FeatureLike} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<import(\"../Feature\").FeatureLike>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<import(\"../Feature\").FeatureLike>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry =\n            geometry ||\n            /** @type {import(\"../geom/SimpleGeometry\").default} */ (\n              feature.getGeometry()\n            );\n          if (\n            geometry.getType() === 'Point' &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getFlatCoordinates().slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel([\n      pixel[0] - this.pixelTolerance_,\n      pixel[1] + this.pixelTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      pixel[0] + this.pixelTolerance_,\n      pixel[1] - this.pixelTolerance_,\n    ]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    const segments = this.rBush_.getInExtent(box);\n\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = toUserCoordinate(\n            closestOnCircle(\n              projectedCoordinate,\n              /** @type {import(\"../geom/Circle.js\").default} */ (\n                circleGeometry\n              )\n            ),\n            projection\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = vertex;\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<import(\"../Feature.js\").default>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if (!this.features_ || this.features_.getArray().includes(feature)) {\n            return feature;\n          }\n        }\n      }.bind(this),\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  Point: readPointGeometry,\n  LineString: readLineStringGeometry,\n  Polygon: readPolygonGeometry,\n  MultiPoint: readMultiPointGeometry,\n  MultiLineString: readMultiLineStringGeometry,\n  MultiPolygon: readMultiPolygonGeometry,\n};\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {\n  Point: writePointGeometry,\n  LineString: writeLineStringGeometry,\n  Polygon: writePolygonGeometry,\n  MultiPoint: writeMultiPointGeometry,\n  MultiLineString: writeMultiLineStringGeometry,\n  MultiPolygon: writeMultiPolygonGeometry,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @param {string} [idField] Name of the field where to get the id from.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options, idField) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes, true);\n      const id = esriJSONFeature.attributes[idField];\n      if (id !== undefined) {\n        feature.setId(/** @type {number} */ (id));\n      }\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    options = options ? options : {};\n    if (object['features']) {\n      const esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureSet.features;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(\n            esriJSONFeatures[i],\n            options,\n            object.objectIdFieldName\n          )\n        );\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  }\n\n  /**\n   * @param {EsriJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    if (\n      object['spatialReference'] &&\n      object['spatialReference']['wkid'] !== undefined\n    ) {\n      const spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (\n        object['spatialReference']\n      );\n      const crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n    const object = {};\n    if (!feature.hasProperties()) {\n      object['attributes'] = {};\n      return object;\n    }\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, options);\n      const projection =\n        options && (options.dataProjection || options.featureProjection);\n      if (projection) {\n        object['geometry']['spatialReference'] =\n          /** @type {EsriJSONSpatialReferenceWkid} */ ({\n            wkid: Number(getProjection(projection).getCode().split(':').pop()),\n          });\n      }\n      delete properties[feature.getGeometryName()];\n    }\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONFeatureSet} EsriJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      'features': objects,\n    };\n  }\n}\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = 'Point';\n  } else if (object['points']) {\n    type = 'MultiPoint';\n  } else if (object['paths']) {\n    const esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = 'LineString';\n    } else {\n      type = 'MultiLineString';\n    }\n  } else if (object['rings']) {\n    const esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    const layout = getGeometryLayout(esriJSONPolygon);\n    const rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = 'Polygon';\n      object = Object.assign({}, object, {['rings']: rings[0]});\n    } else {\n      type = 'MultiPolygon';\n      object = Object.assign({}, object, {['rings']: rings});\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return transformGeometryWithOptions(geometryReader(object), false, options);\n}\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(\n      flatRing,\n      0,\n      flatRing.length,\n      layout.length\n    );\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m], 'XYZM');\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z], 'XYZ');\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m], 'XYM');\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  if (object.hasZ === true && object.hasM === true) {\n    layout = 'XYZM';\n  } else if (object.hasZ === true) {\n    layout = 'XYZ';\n  } else if (object.hasM === true) {\n    layout = 'XYM';\n  }\n  return layout;\n}\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  const coordinates = geometry.getCoordinates();\n  /** @type {EsriJSONPoint} */\n  let esriJSON;\n  const layout = geometry.getLayout();\n  if (layout === 'XYZ') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n    };\n  } else if (layout === 'XYM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2],\n    };\n  } else if (layout === 'XYZM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3],\n    };\n  } else if (layout === 'XY') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n    };\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return esriJSON;\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: layout === 'XYZ' || layout === 'XYZM',\n    hasM: layout === 'XYM' || layout === 'XYZM',\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, options) {\n  const hasZM = getHasZM(lineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: [\n      /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates()),\n    ],\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(polygon);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      polygon.getCoordinates(false)\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, options) {\n  const hasZM = getHasZM(multiLineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      multiLineString.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, options) {\n  const hasZM = getHasZM(multiPoint);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    points: /** @type {Array<EsriJSONPosition>} */ (\n      multiPoint.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  const hasZM = getHasZM(geometry);\n  const coordinates = geometry.getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(\n    transformGeometryWithOptions(geometry, true, options),\n    options\n  );\n}\n\nexport default EsriJSON;\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    } else {\n      const feature = new Feature(values);\n      if (geometryName) {\n        feature.setGeometryName(geometryName);\n      }\n      const fid =\n        node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n      if (fid) {\n        feature.setId(fid);\n      }\n      return feature;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n\n/**\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @class\n * @param {import(\"./GMLBase.js\").Options} [options]\n *     Optional configuration object.\n * @api\n */\nconst GML = GML3;\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options)\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          } else if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          } else if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options]\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = [];\n        for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          const point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nclass Spatial extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(tagName, geometryName, geometry, srsName) {\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {import(\"../../geom/Geometry.js\").default}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Spatial;\n","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nclass Contains extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Contains', geometryName, geometry, srsName);\n  }\n}\n\nexport default Contains;\n","/**\n * @module ol/format/filter/DWithin\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n * @api\n */\nclass DWithin extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {!number} distance Distance.\n   * @param {!string} unit Unit.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, distance, unit, srsName) {\n    super('DWithin', geometryName, geometry, srsName);\n\n    /**\n     * @public\n     * @type {!number}\n     */\n    this.distance = distance;\n\n    /**\n     * @public\n     * @type {!string}\n     */\n    this.unit = unit;\n  }\n}\n\nexport default DWithin;\n","/**\n * @module ol/format/filter/Disjoint\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n * @api\n */\nclass Disjoint extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Disjoint', geometryName, geometry, srsName);\n  }\n}\n\nexport default Disjoint;\n","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nclass Comparison extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(tagName, propertyName) {\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n}\n\nexport default Comparison;\n","/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nclass During extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} begin The begin date in ISO-8601 format.\n   * @param {!string} end The end date in ISO-8601 format.\n   */\n  constructor(propertyName, begin, end) {\n    super('During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n}\n\nexport default During;\n","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nclass ComparisonBinary extends Comparison {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(tagName, propertyName, expression, matchCase) {\n    super(tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = matchCase;\n  }\n}\n\nexport default ComparisonBinary;\n","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nclass EqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(propertyName, expression, matchCase) {\n    super('PropertyIsEqualTo', propertyName, expression, matchCase);\n  }\n}\n\nexport default EqualTo;\n","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nclass GreaterThan extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThan', propertyName, expression);\n  }\n}\n\nexport default GreaterThan;\n","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nclass GreaterThanOrEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n}\n\nexport default GreaterThanOrEqualTo;\n","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nclass Intersects extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Intersects', geometryName, geometry, srsName);\n  }\n}\n\nexport default Intersects;\n","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nclass IsBetween extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} lowerBoundary The lower bound of the range.\n   * @param {!number} upperBoundary The upper bound of the range.\n   */\n  constructor(propertyName, lowerBoundary, upperBoundary) {\n    super('PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n  }\n}\n\nexport default IsBetween;\n","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nclass IsLike extends Comparison {\n  /**\n   * [constructor description]\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} pattern Text pattern.\n   * @param {string} [wildCard] Pattern character which matches any sequence of\n   *    zero or more string characters. Default is '*'.\n   * @param {string} [singleChar] pattern character which matches any single\n   *    string character. Default is '.'.\n   * @param {string} [escapeChar] Escape character which can be used to escape\n   *    the pattern characters. Default is '!'.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  ) {\n    super('PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = wildCard !== undefined ? wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = singleChar !== undefined ? singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = escapeChar !== undefined ? escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = matchCase;\n  }\n}\n\nexport default IsLike;\n","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nclass IsNull extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(propertyName) {\n    super('PropertyIsNull', propertyName);\n  }\n}\n\nexport default IsNull;\n","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nclass LessThan extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThan', propertyName, expression);\n  }\n}\n\nexport default LessThan;\n","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nclass LessThanOrEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n}\n\nexport default LessThanOrEqualTo;\n","/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nclass Not extends Filter {\n  /**\n   * @param {!import(\"./Filter.js\").default} condition Filter condition.\n   */\n  constructor(condition) {\n    super('Not');\n\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n    this.condition = condition;\n  }\n}\n\nexport default Not;\n","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nclass NotEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(propertyName, expression, matchCase) {\n    super('PropertyIsNotEqualTo', propertyName, expression, matchCase);\n  }\n}\n\nexport default NotEqualTo;\n","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nclass Or extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('Or', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default Or;\n","/**\n * @module ol/format/filter/ResourceId\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n *\n * @abstract\n */\nclass ResourceId extends Filter {\n  /**\n   * @param {!string} rid Resource ID.\n   */\n  constructor(rid) {\n    super('ResourceId');\n\n    /**\n     * @type {!string}\n     */\n    this.rid = rid;\n  }\n}\n\nexport default ResourceId;\n","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nclass Within extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Within', geometryName, geometry, srsName);\n  }\n}\n\nexport default Within;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    } else {\n      return this.readTransactionResponseFromNode(\n        /** @type {Element} */ (source)\n      );\n    }\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Element} */ (source)\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const name = createElementNS(ns, 'Name');\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/WKB\n */\nimport Feature from '../Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n// WKB spec: https://www.ogc.org/standards/sfa\n// EWKB spec: https://raw.githubusercontent.com/postgis/postgis/2.1.0/doc/ZMSgeoms.txt\n\n/**\n * @const\n * @enum {number}\n */\nconst WKBGeometryType = {\n  POINT: 1,\n  LINE_STRING: 2,\n  POLYGON: 3,\n  MULTI_POINT: 4,\n  MULTI_LINE_STRING: 5,\n  MULTI_POLYGON: 6,\n  GEOMETRY_COLLECTION: 7,\n\n  /*\n  CIRCULAR_STRING: 8,\n  COMPOUND_CURVE: 9,\n  CURVE_POLYGON: 10,\n\n  MULTI_CURVE: 11,\n  MULTI_SURFACE: 12,\n  CURVE: 13,\n  SURFACE: 14,\n  */\n\n  POLYHEDRAL_SURFACE: 15,\n  TIN: 16,\n  TRIANGLE: 17,\n};\n\nclass WkbReader {\n  /**\n   * @param {DataView} view source to read\n   */\n  constructor(view) {\n    /** @private */\n    this.view_ = view;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pos_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.initialized_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isLittleEndian_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasZ_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasM_ = false;\n\n    /**\n     * @type {number|null}\n     * @private\n     */\n    this.srid_ = null;\n\n    /**\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     * @private\n     */\n    this.layout_ = 'XY';\n  }\n\n  /**\n   * @return {number} value\n   */\n  readUint8() {\n    return this.view_.getUint8(this.pos_++);\n  }\n\n  /**\n   * @param {boolean} [isLittleEndian] Whether read value as little endian\n   * @return {number} value\n   */\n  readUint32(isLittleEndian) {\n    return this.view_.getUint32(\n      (this.pos_ += 4) - 4,\n      isLittleEndian !== undefined ? isLittleEndian : this.isLittleEndian_\n    );\n  }\n\n  /**\n   * @param {boolean} [isLittleEndian] Whether read value as little endian\n   * @return {number} value\n   */\n  readDouble(isLittleEndian) {\n    return this.view_.getFloat64(\n      (this.pos_ += 8) - 8,\n      isLittleEndian !== undefined ? isLittleEndian : this.isLittleEndian_\n    );\n  }\n\n  /**\n   * @return {import('../coordinate.js').Coordinate} coords for Point\n   */\n  readPoint() {\n    /** @type import('../coordinate.js').Coordinate */\n    const coords = [];\n\n    coords.push(this.readDouble());\n    coords.push(this.readDouble());\n    if (this.hasZ_) {\n      coords.push(this.readDouble());\n    }\n    if (this.hasM_) {\n      coords.push(this.readDouble());\n    }\n\n    return coords;\n  }\n\n  /**\n   * @return {Array<import('../coordinate.js').Coordinate>} coords for LineString / LinearRing\n   */\n  readLineString() {\n    const numPoints = this.readUint32();\n\n    /** @type Array<import('../coordinate.js').Coordinate> */\n    const coords = [];\n    for (let i = 0; i < numPoints; i++) {\n      coords.push(this.readPoint());\n    }\n\n    return coords;\n  }\n\n  /**\n   * @return {Array<Array<import('../coordinate.js').Coordinate>>} coords for Polygon like\n   */\n  readPolygon() {\n    const numRings = this.readUint32();\n\n    /** @type Array<Array<import('../coordinate.js').Coordinate>> */\n    const rings = [];\n    for (let i = 0; i < numRings; i++) {\n      rings.push(this.readLineString()); // as a LinearRing\n    }\n\n    return rings;\n  }\n\n  /**\n   * @param {number} [expectedTypeId] Expected WKB Type ID\n   * @return {number} WKB Type ID\n   */\n  readWkbHeader(expectedTypeId) {\n    const byteOrder = this.readUint8();\n    const isLittleEndian = byteOrder > 0;\n\n    const wkbType = this.readUint32(isLittleEndian);\n    const wkbTypeThousandth = Math.floor((wkbType & 0x0fffffff) / 1000);\n    const hasZ =\n      Boolean(wkbType & 0x80000000) ||\n      wkbTypeThousandth === 1 ||\n      wkbTypeThousandth === 3;\n    const hasM =\n      Boolean(wkbType & 0x40000000) ||\n      wkbTypeThousandth === 2 ||\n      wkbTypeThousandth === 3;\n    const hasSRID = Boolean(wkbType & 0x20000000);\n    const typeId = (wkbType & 0x0fffffff) % 1000; // Assume 1000 is an upper limit for type ID\n    const layout = /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */ (\n      ['XY', hasZ ? 'Z' : '', hasM ? 'M' : ''].join('')\n    );\n\n    const srid = hasSRID ? this.readUint32(isLittleEndian) : null;\n\n    if (expectedTypeId !== undefined && expectedTypeId !== typeId) {\n      throw new Error('Unexpected WKB geometry type ' + typeId);\n    }\n\n    if (this.initialized_) {\n      // sanity checks\n      if (this.isLittleEndian_ !== isLittleEndian) {\n        throw new Error('Inconsistent endian');\n      }\n      if (this.layout_ !== layout) {\n        throw new Error('Inconsistent geometry layout');\n      }\n      if (srid && this.srid_ !== srid) {\n        throw new Error('Inconsistent coordinate system (SRID)');\n      }\n    } else {\n      this.isLittleEndian_ = isLittleEndian;\n      this.hasZ_ = hasZ;\n      this.hasM_ = hasM;\n      this.layout_ = layout;\n      this.srid_ = srid;\n      this.initialized_ = true;\n    }\n\n    return typeId;\n  }\n\n  /**\n   * @param {number} typeId WKB Type ID\n   * @return {any} values read\n   */\n  readWkbPayload(typeId) {\n    switch (typeId) {\n      case WKBGeometryType.POINT:\n        return this.readPoint();\n\n      case WKBGeometryType.LINE_STRING:\n        return this.readLineString();\n\n      case WKBGeometryType.POLYGON:\n      case WKBGeometryType.TRIANGLE:\n        return this.readPolygon();\n\n      case WKBGeometryType.MULTI_POINT:\n        return this.readMultiPoint();\n\n      case WKBGeometryType.MULTI_LINE_STRING:\n        return this.readMultiLineString();\n\n      case WKBGeometryType.MULTI_POLYGON:\n      case WKBGeometryType.POLYHEDRAL_SURFACE:\n      case WKBGeometryType.TIN:\n        return this.readMultiPolygon();\n\n      case WKBGeometryType.GEOMETRY_COLLECTION:\n        return this.readGeometryCollection();\n\n      default:\n        throw new Error(\n          'Unsupported WKB geometry type ' + typeId + ' is found'\n        );\n    }\n  }\n\n  /**\n   * @param {number} expectedTypeId Expected WKB Type ID\n   * @return {any} values read\n   */\n  readWkbBlock(expectedTypeId) {\n    return this.readWkbPayload(this.readWkbHeader(expectedTypeId));\n  }\n\n  /**\n   * @param {Function} reader reader function for each item\n   * @param {number} [expectedTypeId] Expected WKB Type ID\n   * @return {any} values read\n   */\n  readWkbCollection(reader, expectedTypeId) {\n    const num = this.readUint32();\n\n    const items = [];\n    for (let i = 0; i < num; i++) {\n      const result = reader.call(this, expectedTypeId);\n      if (result) {\n        items.push(result);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * @return {Array<import('../coordinate.js').Coordinate>} coords for MultiPoint\n   */\n  readMultiPoint() {\n    return this.readWkbCollection(this.readWkbBlock, WKBGeometryType.POINT);\n  }\n\n  /**\n   * @return {Array<Array<import('../coordinate.js').Coordinate>>} coords for MultiLineString like\n   */\n  readMultiLineString() {\n    return this.readWkbCollection(\n      this.readWkbBlock,\n      WKBGeometryType.LINE_STRING\n    );\n  }\n\n  /**\n   * @return {Array<Array<Array<import('../coordinate.js').Coordinate>>>} coords for MultiPolygon like\n   */\n  readMultiPolygon() {\n    return this.readWkbCollection(this.readWkbBlock, WKBGeometryType.POLYGON);\n  }\n\n  /**\n   * @return {Array<import('../geom/Geometry.js').default>} array of geometries\n   */\n  readGeometryCollection() {\n    return this.readWkbCollection(this.readGeometry);\n  }\n\n  /**\n   * @return {import('../geom/Geometry.js').default} geometry\n   */\n  readGeometry() {\n    const typeId = this.readWkbHeader();\n    const result = this.readWkbPayload(typeId);\n\n    switch (typeId) {\n      case WKBGeometryType.POINT:\n        return new Point(\n          /** @type {import('../coordinate.js').Coordinate} */ (result),\n          this.layout_\n        );\n\n      case WKBGeometryType.LINE_STRING:\n        return new LineString(\n          /** @type {Array<import('../coordinate.js').Coordinate>} */ (result),\n          this.layout_\n        );\n\n      case WKBGeometryType.POLYGON:\n      case WKBGeometryType.TRIANGLE:\n        return new Polygon(\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ (\n            result\n          ),\n          this.layout_\n        );\n\n      case WKBGeometryType.MULTI_POINT:\n        return new MultiPoint(\n          /** @type {Array<import('../coordinate.js').Coordinate>} */ (result),\n          this.layout_\n        );\n\n      case WKBGeometryType.MULTI_LINE_STRING:\n        return new MultiLineString(\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ (\n            result\n          ),\n          this.layout_\n        );\n\n      case WKBGeometryType.MULTI_POLYGON:\n      case WKBGeometryType.POLYHEDRAL_SURFACE:\n      case WKBGeometryType.TIN:\n        return new MultiPolygon(\n          /** @type {Array<Array<Array<import('../coordinate.js').Coordinate>>>} */ (\n            result\n          ),\n          this.layout_\n        );\n\n      case WKBGeometryType.GEOMETRY_COLLECTION:\n        return new GeometryCollection(\n          /** @type {Array<import('../geom/Geometry.js').default>} */ (result)\n        );\n\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * @return {number|null} SRID in the EWKB. `null` if not defined.\n   */\n  getSrid() {\n    return this.srid_;\n  }\n}\n\nclass WkbWriter {\n  /**\n   * @type {Object}\n   * @property {string} [layout] geometryLayout\n   * @property {boolean} [littleEndian=true] littleEndian\n   * @property {boolean} [ewkb=true] Whether writes in EWKB format\n   * @property {Object} [nodata] NoData value for each axes\n   * @param {Object} opts options\n   */\n  constructor(opts) {\n    opts = opts || {};\n\n    /** @type {string} */\n    this.layout_ = opts.layout;\n    this.isLittleEndian_ = opts.littleEndian !== false;\n\n    this.isEWKB_ = opts.ewkb !== false;\n\n    /** @type {Array<Array<number>>} */\n    this.writeQueue_ = [];\n\n    /**\n     * @type {Object}\n     * @property {number} X NoData value for X\n     * @property {number} Y NoData value for Y\n     * @property {number} Z NoData value for Z\n     * @property {number} M NoData value for M\n     */\n    this.nodata_ = Object.assign({X: 0, Y: 0, Z: 0, M: 0}, opts.nodata);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeUint8(value) {\n    this.writeQueue_.push([1, value]);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeUint32(value) {\n    this.writeQueue_.push([4, value]);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeDouble(value) {\n    this.writeQueue_.push([8, value]);\n  }\n\n  /**\n   * @param {import('../coordinate.js').Coordinate} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writePoint(coords, layout) {\n    /**\n     * @type {Object}\n     * @property {number} X NoData value for X\n     * @property {number} Y NoData value for Y\n     * @property {number} [Z] NoData value for Z\n     * @property {number} [M] NoData value for M\n     */\n    const coordsObj = Object.assign.apply(\n      null,\n      layout.split('').map((axis, idx) => ({[axis]: coords[idx]}))\n    );\n\n    for (const axis of this.layout_) {\n      this.writeDouble(\n        axis in coordsObj ? coordsObj[axis] : this.nodata_[axis]\n      );\n    }\n  }\n\n  /**\n   * @param {Array<import('../coordinate.js').Coordinate>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeLineString(coords, layout) {\n    this.writeUint32(coords.length); // numPoints\n    for (let i = 0; i < coords.length; i++) {\n      this.writePoint(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} rings rings\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writePolygon(rings, layout) {\n    this.writeUint32(rings.length); // numRings\n    for (let i = 0; i < rings.length; i++) {\n      this.writeLineString(rings[i], layout); // as a LinearRing\n    }\n  }\n\n  /**\n   * @param {number} wkbType WKB Type ID\n   * @param {number} [srid] SRID\n   */\n  writeWkbHeader(wkbType, srid) {\n    wkbType %= 1000; // Assume 1000 is an upper limit for type ID\n    if (this.layout_.includes('Z')) {\n      wkbType += this.isEWKB_ ? 0x80000000 : 1000;\n    }\n    if (this.layout_.includes('M')) {\n      wkbType += this.isEWKB_ ? 0x40000000 : 2000;\n    }\n    if (this.isEWKB_ && Number.isInteger(srid)) {\n      wkbType |= 0x20000000;\n    }\n\n    this.writeUint8(this.isLittleEndian_ ? 1 : 0);\n    this.writeUint32(wkbType);\n    if (this.isEWKB_ && Number.isInteger(srid)) {\n      this.writeUint32(srid);\n    }\n  }\n\n  /**\n   * @param {Array<import('../coordinate.js').Coordinate>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiPoint(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(1);\n      this.writePoint(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiLineString(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(2);\n      this.writeLineString(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<Array<import('../coordinate.js').Coordinate>>>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiPolygon(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(3);\n      this.writePolygon(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<import('../geom/Geometry.js').default>} geometries geometries\n   */\n  writeGeometryCollection(geometries) {\n    this.writeUint32(geometries.length); // numItems\n\n    for (let i = 0; i < geometries.length; i++) {\n      this.writeGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geom geometry\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} [layout] layout\n   * @return {import(\"../geom/Geometry.js\").GeometryLayout} minumum layout made by common axes\n   */\n  findMinimumLayout(geom, layout = 'XYZM') {\n    /**\n     * @param {import(\"../geom/Geometry.js\").GeometryLayout} a A\n     * @param {import(\"../geom/Geometry.js\").GeometryLayout} b B\n     * @return {import(\"../geom/Geometry.js\").GeometryLayout} minumum layout made by common axes\n     */\n    const GeometryLayout_min = (a, b) => {\n      if (a === b) {\n        return a;\n      }\n\n      if (a === 'XYZM') {\n        // anything `b` is minimum\n        return b;\n      }\n      if (b === 'XYZM') {\n        // anything `a` is minimum\n        return a;\n      }\n\n      // otherwise, incompatible\n      return 'XY';\n    };\n\n    if (geom instanceof SimpleGeometry) {\n      return GeometryLayout_min(geom.getLayout(), layout);\n    }\n\n    if (geom instanceof GeometryCollection) {\n      const geoms = geom.getGeometriesArray();\n      for (let i = 0; i < geoms.length && layout !== 'XY'; i++) {\n        layout = this.findMinimumLayout(geoms[i], layout);\n      }\n    }\n\n    return layout;\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geom geometry\n   * @param {number} [srid] SRID\n   */\n  writeGeometry(geom, srid) {\n    /**\n     * @type {Object<import(\"../geom/Geometry.js\").Type, WKBGeometryType>}\n     */\n    const wkblut = {\n      Point: WKBGeometryType.POINT,\n      LineString: WKBGeometryType.LINE_STRING,\n      Polygon: WKBGeometryType.POLYGON,\n      MultiPoint: WKBGeometryType.MULTI_POINT,\n      MultiLineString: WKBGeometryType.MULTI_LINE_STRING,\n      MultiPolygon: WKBGeometryType.MULTI_POLYGON,\n      GeometryCollection: WKBGeometryType.GEOMETRY_COLLECTION,\n    };\n    const geomType = geom.getType();\n    const typeId = wkblut[geomType];\n\n    if (!typeId) {\n      throw new Error('GeometryType ' + geomType + ' is not supported');\n    }\n\n    // first call of writeGeometry() traverse whole geometries to determine its output layout if not specified on constructor.\n    if (!this.layout_) {\n      this.layout_ = this.findMinimumLayout(geom);\n    }\n\n    this.writeWkbHeader(typeId, srid);\n\n    if (geom instanceof SimpleGeometry) {\n      const writerLUT = {\n        Point: this.writePoint,\n        LineString: this.writeLineString,\n        Polygon: this.writePolygon,\n        MultiPoint: this.writeMultiPoint,\n        MultiLineString: this.writeMultiLineString,\n        MultiPolygon: this.writeMultiPolygon,\n      };\n      writerLUT[geomType].call(this, geom.getCoordinates(), geom.getLayout());\n    } else if (geom instanceof GeometryCollection) {\n      this.writeGeometryCollection(geom.getGeometriesArray());\n    }\n  }\n\n  getBuffer() {\n    const byteLength = this.writeQueue_.reduce((acc, item) => acc + item[0], 0);\n    const buffer = new ArrayBuffer(byteLength);\n    const view = new DataView(buffer);\n\n    let pos = 0;\n    this.writeQueue_.forEach((item) => {\n      switch (item[0]) {\n        case 1:\n          view.setUint8(pos, item[1]);\n          break;\n        case 4:\n          view.setUint32(pos, item[1], this.isLittleEndian_);\n          break;\n        case 8:\n          view.setFloat64(pos, item[1], this.isLittleEndian_);\n          break;\n        default:\n          break;\n      }\n\n      pos += item[0];\n    });\n\n    return buffer;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into multiple features on reading.\n * @property {boolean} [hex=true] Returns hex string instead of ArrayBuffer for output. This also is used as a hint internally whether it should load contents as text or ArrayBuffer on reading.\n * @property {boolean} [littleEndian=true] Use littleEndian for output.\n * @property {boolean} [ewkb=true] Use EWKB format for output.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout=null] Use specific coordinate layout for output features (null: auto detect)\n * @property {number} [nodataZ=0] If the `geometryLayout` doesn't match with geometry to be output, this value is used to fill missing coordinate value of Z.\n * @property {number} [nodataM=0] If the `geometryLayout` doesn't match with geometry to be output, this value is used to fill missing coordinate value of M.\n * @property {number|boolean} [srid=true] SRID for output. Specify integer value to enforce the value as a SRID. Specify `true` to extract from `dataProjection`. `false` to suppress the output. This option only takes effect when `ewkb` is `true`.\n */\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `Well-Known Binary` (WKB) format.\n * Also supports `Extended Well-Known Binary` (EWKB) format, used in PostGIS for example.\n *\n * @api\n */\nclass WKB extends FeatureFormat {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    this.splitCollection = Boolean(options.splitCollection);\n\n    this.viewCache_ = null;\n\n    this.hex_ = options.hex !== false;\n    this.littleEndian_ = options.littleEndian !== false;\n    this.ewkb_ = options.ewkb !== false;\n\n    this.layout_ = options.geometryLayout; // null for auto detect\n    this.nodataZ_ = options.nodataZ || 0;\n    this.nodataM_ = options.nodataM || 0;\n\n    this.srid_ = options.srid;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return this.hex_ ? 'text' : 'arraybuffer';\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return new Feature({\n      geometry: this.readGeometry(source, options),\n    });\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    let geometries = [];\n    const geometry = this.readGeometry(source, options);\n    if (this.splitCollection && geometry instanceof GeometryCollection) {\n      geometries = geometry.getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    return geometries.map((geometry) => new Feature({geometry}));\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    const view = getDataView(source);\n    if (!view) {\n      return null;\n    }\n\n    const reader = new WkbReader(view);\n    const geometry = reader.readGeometry();\n\n    this.viewCache_ = view; // cache for internal subsequent call of readProjection()\n    options = this.getReadOptions(source, options);\n    this.viewCache_ = null; // release\n\n    return transformGeometryWithOptions(geometry, false, options);\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    const view = this.viewCache_ || getDataView(source);\n    if (!view) {\n      return undefined;\n    }\n\n    const reader = new WkbReader(view);\n    reader.readWkbHeader();\n\n    return (\n      (reader.getSrid() && getProjection('EPSG:' + reader.getSrid())) ||\n      undefined\n    );\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeGeometry(feature.getGeometry(), options);\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeGeometry(\n      new GeometryCollection(features.map((f) => f.getGeometry())),\n      options\n    );\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    options = this.adaptOptions(options);\n\n    const writer = new WkbWriter({\n      layout: this.layout_,\n      littleEndian: this.littleEndian_,\n      ewkb: this.ewkb_,\n\n      nodata: {\n        Z: this.nodataZ_,\n        M: this.nodataM_,\n      },\n    });\n\n    // extract SRID from `dataProjection`\n    let srid = Number.isInteger(this.srid_) ? Number(this.srid_) : null;\n    if (this.srid_ !== false && !Number.isInteger(this.srid_)) {\n      const dataProjection =\n        options.dataProjection && getProjection(options.dataProjection);\n      if (dataProjection) {\n        const code = dataProjection.getCode();\n        if (code.startsWith('EPSG:')) {\n          srid = Number(code.substring(5));\n        }\n      }\n    }\n\n    writer.writeGeometry(\n      transformGeometryWithOptions(geometry, true, options),\n      srid\n    );\n    const buffer = writer.getBuffer();\n\n    return this.hex_ ? encodeHexString(buffer) : buffer;\n  }\n}\n\n/**\n * @param {ArrayBuffer} buffer source buffer\n * @return {string} encoded hex string\n */\nfunction encodeHexString(buffer) {\n  const view = new Uint8Array(buffer);\n  return Array.from(view.values())\n    .map((x) => (x < 16 ? '0' : '') + Number(x).toString(16).toUpperCase())\n    .join('');\n}\n\n/**\n * @param {string} text source text\n * @return {DataView} decoded binary buffer\n */\nfunction decodeHexString(text) {\n  const buffer = new Uint8Array(text.length / 2);\n  for (let i = 0; i < text.length / 2; i++) {\n    buffer[i] = parseInt(text.substr(i * 2, 2), 16);\n  }\n  return new DataView(buffer.buffer);\n}\n\n/**\n * @param {string | ArrayBuffer | ArrayBufferView} source source\n * @return {DataView} data view\n */\nfunction getDataView(source) {\n  if (typeof source === 'string') {\n    return decodeHexString(source);\n  } else if (ArrayBuffer.isView(source)) {\n    if (source instanceof DataView) {\n      return source;\n    }\n    return new DataView(source.buffer, source.byteOffset, source.byteLength);\n  } else if (source instanceof ArrayBuffer) {\n    return new DataView(source);\n  } else {\n    return null;\n  }\n}\n\nexport default WKB;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport TextFeature from './TextFeature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, import(\"../geom/Geometry.js\").GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon,\n};\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type Type.\n * @property {number|string} [value] Value.\n * @property {number} position Position.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  START: 0,\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n};\n\n/**\n * @type {Object<import(\"../geom/Geometry.js\").Type, string>}\n */\nconst wktTypeLookup = {\n  Point: 'POINT',\n  LineString: 'LINESTRING',\n  Polygon: 'POLYGON',\n  MultiPoint: 'MULTIPOINT',\n  MultiLineString: 'MULTILINESTRING',\n  MultiPolygon: 'MULTIPOLYGON',\n  GeometryCollection: 'GEOMETRYCOLLECTION',\n  Circle: 'CIRCLE',\n};\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean} [decimal] Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, decimal) {\n    decimal = decimal !== undefined ? decimal : false;\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal);\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const position = this.index_;\n    /** @type {number|string} */\n    let value = c;\n    let type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {position: position, value: value, type: type};\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_ = {\n      position: 0,\n      type: TokenType.START,\n    };\n\n    /**\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     * @private\n     */\n    this.layout_ = 'XY';\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    return this.token_.type == type;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_();\n    return this.parseGeometry_();\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/Geometry.js\").GeometryLayout} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n    let layout = 'XY';\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = 'XYZ';\n      } else if (dimInfo === M) {\n        layout = 'XYM';\n      } else if (dimInfo === ZM) {\n        layout = 'XYZM';\n      }\n      if (layout !== 'XY') {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(/** @type {number} */ (token.value));\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    );\n  }\n\n  /**\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = /** @type {string} */ (token.value);\n      this.layout_ = this.parseGeometryLayout_();\n      const isEmpty = this.isEmptyGeometry_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        if (isEmpty) {\n          return new GeometryCollection([]);\n        }\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      } else {\n        const ctor = GeometryConstructor[geomType];\n        if (!ctor) {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n\n        let coordinates;\n\n        if (isEmpty) {\n          if (geomType == 'POINT') {\n            coordinates = [NaN, NaN];\n          } else {\n            coordinates = [];\n          }\n        } else {\n          switch (geomType) {\n            case 'POINT': {\n              coordinates = this.parsePointText_();\n              break;\n            }\n            case 'LINESTRING': {\n              coordinates = this.parseLineStringText_();\n              break;\n            }\n            case 'POLYGON': {\n              coordinates = this.parsePolygonText_();\n              break;\n            }\n            case 'MULTIPOINT': {\n              coordinates = this.parseMultiPointText_();\n              break;\n            }\n            case 'MULTILINESTRING': {\n              coordinates = this.parseMultiLineStringText_();\n              break;\n            }\n            case 'MULTIPOLYGON': {\n              coordinates = this.parseMultiPolygonText_();\n              break;\n            }\n            default:\n              break;\n          }\n        }\n\n        return new ctor(coordinates, this.layout_);\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ =\n      options.splitCollection !== undefined ? options.splitCollection : false;\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geom = this.readGeometryFromText(text, options);\n    const feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, options);\n    if (this.splitCollection_ && geometry.getType() == 'GeometryCollection') {\n      geometries = /** @type {GeometryCollection} */ (\n        geometry\n      ).getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const geometry = this.parse_(text);\n    return transformGeometryWithOptions(geometry, false, options);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, options);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return encode(transformGeometryWithOptions(geometry, true, options));\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === 'XYZ' || layout === 'XYZM') {\n    dimInfo += Z;\n  }\n  if (layout === 'XYM' || layout === 'XYZM') {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n};\n\n/**\n * Encode a geometry as WKT.\n * @param {import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  const type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  let wktType = wktTypeLookup[type];\n  if (typeof (/** @type {?} */ (geom).getFlatCoordinates) === 'function') {\n    const dimInfo = encodeGeometryLayout(\n      /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom)\n    );\n    if (dimInfo.length > 0) {\n      wktType += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return wktType + ' ' + EMPTY;\n  }\n  return wktType + '(' + enc + ')';\n}\n\nexport default WKT;\n","/**\n * @module ol/format/WMSCapabilities\n */\nimport XML from './XML.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {\n  readBooleanString,\n  readDecimal,\n  readDecimalString,\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  readString,\n} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wms'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Service': makeObjectPropertySetter(readService),\n  'Capability': makeObjectPropertySetter(readCapability),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Request': makeObjectPropertySetter(readRequest),\n  'Exception': makeObjectPropertySetter(readException),\n  'Layer': makeObjectPropertySetter(readCapabilityLayer),\n});\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop(\n      {\n        'version': this.version,\n      },\n      PARSERS,\n      node,\n      []\n    );\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'ContactInformation': makeObjectPropertySetter(readContactInformation),\n  'Fees': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'LayerLimit': makeObjectPropertySetter(readPositiveInteger),\n  'MaxWidth': makeObjectPropertySetter(readPositiveInteger),\n  'MaxHeight': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n  'ContactPosition': makeObjectPropertySetter(readString),\n  'ContactAddress': makeObjectPropertySetter(readContactAddress),\n  'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n  'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n  'ContactElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPerson': makeObjectPropertySetter(readString),\n  'ContactOrganization': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AddressType': makeObjectPropertySetter(readString),\n  'Address': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'StateOrProvince': makeObjectPropertySetter(readString),\n  'PostCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeArrayPusher(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'CRS': makeObjectPropertyPusher(readString),\n  'EX_GeographicBoundingBox': makeObjectPropertySetter(\n    readEXGeographicBoundingBox\n  ),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n  'Dimension': makeObjectPropertyPusher(readDimension),\n  'Attribution': makeObjectPropertySetter(readAttribution),\n  'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n  'Identifier': makeObjectPropertyPusher(readString),\n  'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n  'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'Style': makeObjectPropertyPusher(readStyle),\n  'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n  'northBoundLatitude': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GetCapabilities': makeObjectPropertySetter(readOperationType),\n  'GetMap': makeObjectPropertySetter(readOperationType),\n  'GetFeatureInfo': makeObjectPropertySetter(readOperationType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertyPusher(readString),\n  'DCPType': makeObjectPropertyPusher(readDCPType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHTTP),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertySetter(readFormatOnlineresource),\n  'Post': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n  'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n  'StyleURL': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Keyword': makeArrayPusher(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy')),\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy')),\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions,\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['northBoundLatitude']);\n  if (\n    westBoundLongitude === undefined ||\n    southBoundLatitude === undefined ||\n    eastBoundLongitude === undefined ||\n    northBoundLatitude === undefined\n  ) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude,\n    southBoundLatitude,\n    eastBoundLongitude,\n    northBoundLatitude,\n  ];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (layerObject['Layer'] === undefined) {\n    return Object.assign(layerObject, readLayer(node, objectStack));\n  }\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (\n    objectStack[objectStack.length - 1]\n  );\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function (key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = [\n    'EX_GeographicBoundingBox',\n    'BoundingBox',\n    'Dimension',\n    'Attribution',\n    'MinScaleDenominator',\n    'MaxScaleDenominator',\n  ];\n  replaceKeys.forEach(function (key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node),\n  };\n  return dimensionObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height')),\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\nexport default WMSCapabilities;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","import $ol$AssertionError from './ol/AssertionError.js';\nimport {CollectionEvent as _ol_Collection$CollectionEvent} from './ol/Collection.js';\nimport $ol$Collection from './ol/Collection.js';\nimport $ol$DataTile from './ol/DataTile.js';\nimport $ol$Disposable from './ol/Disposable.js';\nimport $ol$Feature from './ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from './ol/Feature.js';\nimport $ol$Geolocation from './ol/Geolocation.js';\nimport $ol$Image from './ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from './ol/Image.js';\nimport $ol$ImageBase from './ol/ImageBase.js';\nimport $ol$ImageCanvas from './ol/ImageCanvas.js';\nimport $ol$ImageTile from './ol/ImageTile.js';\nimport $ol$Kinetic from './ol/Kinetic.js';\nimport $ol$Map from './ol/Map.js';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from './ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from './ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from './ol/Object.js';\nimport $ol$Object from './ol/Object.js';\nimport $ol$Observable from './ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable.js';\nimport $ol$Overlay from './ol/Overlay.js';\nimport $ol$Tile from './ol/Tile.js';\nimport $ol$TileCache from './ol/TileCache.js';\nimport $ol$TileQueue from './ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from './ol/TileQueue.js';\nimport $ol$TileRange from './ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from './ol/TileRange.js';\nimport $ol$VectorRenderTile from './ol/VectorRenderTile.js';\nimport $ol$VectorTile from './ol/VectorTile.js';\nimport $ol$View from './ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from './ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from './ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from './ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from './ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from './ol/array.js';\nimport {numberSafeCompareFunction as _ol_array$numberSafeCompareFunction} from './ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from './ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from './ol/array.js';\nimport {extend as _ol_array$extend} from './ol/array.js';\nimport {remove as _ol_array$remove} from './ol/array.js';\nimport {equals as _ol_array$equals} from './ol/array.js';\nimport {stableSort as _ol_array$stableSort} from './ol/array.js';\nimport {isSorted as _ol_array$isSorted} from './ol/array.js';\nimport {assert as _ol_asserts$assert} from './ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from './ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from './ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from './ol/color.js';\nimport {fromString as _ol_color$fromString} from './ol/color.js';\nimport {asArray as _ol_color$asArray} from './ol/color.js';\nimport {normalize as _ol_color$normalize} from './ol/color.js';\nimport {toString as _ol_color$toString} from './ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from './ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike.js';\nimport {add as _ol_coordinate$add} from './ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from './ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from './ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from './ol/coordinate.js';\nimport {format as _ol_coordinate$format} from './ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from './ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from './ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from './ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from './ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from './ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from './ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from './ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from './ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from './ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from './ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from './ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from './ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from './ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from './ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from './ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from './ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from './ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from './ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from './ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from './ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from './ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from './ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing.js';\nimport {linear as _ol_easing$linear} from './ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing.js';\nimport {listen as _ol_events$listen} from './ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from './ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from './ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent.js';\nimport {buffer as _ol_extent$buffer} from './ol/extent.js';\nimport {clone as _ol_extent$clone} from './ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from './ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from './ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from './ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from './ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from './ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from './ol/extent.js';\nimport {equals as _ol_extent$equals} from './ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from './ol/extent.js';\nimport {extend as _ol_extent$extend} from './ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from './ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from './ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from './ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from './ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from './ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from './ol/extent.js';\nimport {getArea as _ol_extent$getArea} from './ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from './ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from './ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from './ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from './ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from './ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from './ol/extent.js';\nimport {getSize as _ol_extent$getSize} from './ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent.js';\nimport {intersects as _ol_extent$intersects} from './ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from './ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from './ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from './ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from './ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from './ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from './ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from './ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from './ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from './ol/functions.js';\nimport {VOID as _ol_functions$VOID} from './ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from './ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from './ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from './ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from './ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from './ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from './ol/has.js';\nimport {MAC as _ol_has$MAC} from './ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from './ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from './ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from './ol/has.js';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from './ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from './ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from './ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from './ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from './ol/math.js';\nimport {toRadians as _ol_math$toRadians} from './ol/math.js';\nimport {modulo as _ol_math$modulo} from './ol/math.js';\nimport {lerp as _ol_math$lerp} from './ol/math.js';\nimport {toFixed as _ol_math$toFixed} from './ol/math.js';\nimport {round as _ol_math$round} from './ol/math.js';\nimport {floor as _ol_math$floor} from './ol/math.js';\nimport {ceil as _ol_math$ceil} from './ol/math.js';\nimport {jsonp as _ol_net$jsonp} from './ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from './ol/net.js';\nimport {ClientError as _ol_net$ClientError} from './ol/net.js';\nimport {getJSON as _ol_net$getJSON} from './ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from './ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from './ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from './ol/net.js';\nimport {clear as _ol_obj$clear} from './ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from './ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from './ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from './ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from './ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from './ol/proj.js';\nimport {get as _ol_proj$get} from './ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from './ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from './ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from './ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from './ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from './ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj.js';\nimport {transform as _ol_proj$transform} from './ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from './ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from './ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from './ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from './ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from './ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from './ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from './ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from './ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from './ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from './ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from './ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from './ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from './ol/proj.js';\nimport {toContext as _ol_render$toContext} from './ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from './ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from './ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from './ol/reproj.js';\nimport {render as _ol_reproj$render} from './ol/reproj.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from './ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from './ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from './ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from './ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from './ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from './ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from './ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from './ol/size.js';\nimport {hasArea as _ol_size$hasArea} from './ol/size.js';\nimport {scale as _ol_size$scale} from './ol/size.js';\nimport {toSize as _ol_size$toSize} from './ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from './ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from './ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere.js';\nimport {offset as _ol_sphere$offset} from './ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from './ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from './ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from './ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from './ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from './ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from './ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from './ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from './ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from './ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from './ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from './ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from './ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from './ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from './ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from './ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from './ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from './ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from './ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from './ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from './ol/transform.js';\nimport {reset as _ol_transform$reset} from './ol/transform.js';\nimport {multiply as _ol_transform$multiply} from './ol/transform.js';\nimport {set as _ol_transform$set} from './ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from './ol/transform.js';\nimport {apply as _ol_transform$apply} from './ol/transform.js';\nimport {rotate as _ol_transform$rotate} from './ol/transform.js';\nimport {scale as _ol_transform$scale} from './ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from './ol/transform.js';\nimport {translate as _ol_transform$translate} from './ol/transform.js';\nimport {compose as _ol_transform$compose} from './ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from './ol/transform.js';\nimport {invert as _ol_transform$invert} from './ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from './ol/transform.js';\nimport {determinant as _ol_transform$determinant} from './ol/transform.js';\nimport {toString as _ol_transform$toString} from './ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from './ol/uri.js';\nimport {abstract as _ol_util$abstract} from './ol/util.js';\nimport {getUid as _ol_util$getUid} from './ol/util.js';\nimport {VERSION as _ol_util$VERSION} from './ol/util.js';\nimport {ARRAY_BUFFER as _ol_webgl$ARRAY_BUFFER} from './ol/webgl.js';\nimport {ELEMENT_ARRAY_BUFFER as _ol_webgl$ELEMENT_ARRAY_BUFFER} from './ol/webgl.js';\nimport {STREAM_DRAW as _ol_webgl$STREAM_DRAW} from './ol/webgl.js';\nimport {STATIC_DRAW as _ol_webgl$STATIC_DRAW} from './ol/webgl.js';\nimport {DYNAMIC_DRAW as _ol_webgl$DYNAMIC_DRAW} from './ol/webgl.js';\nimport {UNSIGNED_BYTE as _ol_webgl$UNSIGNED_BYTE} from './ol/webgl.js';\nimport {UNSIGNED_SHORT as _ol_webgl$UNSIGNED_SHORT} from './ol/webgl.js';\nimport {UNSIGNED_INT as _ol_webgl$UNSIGNED_INT} from './ol/webgl.js';\nimport {FLOAT as _ol_webgl$FLOAT} from './ol/webgl.js';\nimport {getContext as _ol_webgl$getContext} from './ol/webgl.js';\nimport {getSupportedExtensions as _ol_webgl$getSupportedExtensions} from './ol/webgl.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from './ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from './ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from './ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from './ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from './ol/xml.js';\nimport {parse as _ol_xml$parse} from './ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from './ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from './ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from './ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from './ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from './ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from './ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from './ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from './ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from './ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from './ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from './ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from './ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from './ol/xml.js';\nimport {serialize as _ol_xml$serialize} from './ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from './ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from './ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from './ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from './ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from './ol/xml.js';\nimport $ol$webgl$Buffer from './ol/webgl/Buffer.js';\nimport {getArrayClassForType as _ol_webgl_Buffer$getArrayClassForType} from './ol/webgl/Buffer.js';\nimport $ol$webgl$Helper from './ol/webgl/Helper.js';\nimport {computeAttributesStride as _ol_webgl_Helper$computeAttributesStride} from './ol/webgl/Helper.js';\nimport $ol$webgl$PaletteTexture from './ol/webgl/PaletteTexture.js';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass.js';\nimport $ol$webgl$RenderTarget from './ol/webgl/RenderTarget.js';\nimport {ShaderBuilder as _ol_webgl_ShaderBuilder$ShaderBuilder} from './ol/webgl/ShaderBuilder.js';\nimport {parseLiteralStyle as _ol_webgl_ShaderBuilder$parseLiteralStyle} from './ol/webgl/ShaderBuilder.js';\nimport $ol$webgl$TileTexture from './ol/webgl/TileTexture.js';\nimport {create as _ol_vec_mat4$create} from './ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from './ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from './ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from './ol/tilegrid/common.js';\nimport $ol$style$Circle from './ol/style/Circle.js';\nimport $ol$style$Fill from './ol/style/Fill.js';\nimport $ol$style$Icon from './ol/style/Icon.js';\nimport $ol$style$IconImage from './ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from './ol/style/IconImage.js';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache.js';\nimport $ol$style$Image from './ol/style/Image.js';\nimport $ol$style$RegularShape from './ol/style/RegularShape.js';\nimport $ol$style$Stroke from './ol/style/Stroke.js';\nimport $ol$style$Style from './ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from './ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from './ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from './ol/style/Style.js';\nimport $ol$style$Text from './ol/style/Text.js';\nimport {Operators as _ol_style_expressions$Operators} from './ol/style/expressions.js';\nimport {getValueType as _ol_style_expressions$getValueType} from './ol/style/expressions.js';\nimport {isTypeUnique as _ol_style_expressions$isTypeUnique} from './ol/style/expressions.js';\nimport {numberToGlsl as _ol_style_expressions$numberToGlsl} from './ol/style/expressions.js';\nimport {arrayToGlsl as _ol_style_expressions$arrayToGlsl} from './ol/style/expressions.js';\nimport {colorToGlsl as _ol_style_expressions$colorToGlsl} from './ol/style/expressions.js';\nimport {getStringNumberEquivalent as _ol_style_expressions$getStringNumberEquivalent} from './ol/style/expressions.js';\nimport {stringToGlsl as _ol_style_expressions$stringToGlsl} from './ol/style/expressions.js';\nimport {expressionToGlsl as _ol_style_expressions$expressionToGlsl} from './ol/style/expressions.js';\nimport {uniformNameForVariable as _ol_style_expressions$uniformNameForVariable} from './ol/style/expressions.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_style_expressions$PALETTE_TEXTURE_ARRAY} from './ol/style/expressions.js';\nimport {toStyle as _ol_style_flat$toStyle} from './ol/style/flat.js';\nimport $ol$structs$LRUCache from './ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from './ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from './ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from './ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from './ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from './ol/source/BingMaps.js';\nimport $ol$source$BingMaps from './ol/source/BingMaps.js';\nimport $ol$source$CartoDB from './ol/source/CartoDB.js';\nimport $ol$source$Cluster from './ol/source/Cluster.js';\nimport $ol$source$DataTile from './ol/source/DataTile.js';\nimport $ol$source$GeoTIFF from './ol/source/GeoTIFF.js';\nimport $ol$source$IIIF from './ol/source/IIIF.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from './ol/source/Image.js';\nimport $ol$source$Image from './ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from './ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas.js';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide.js';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from './ol/source/OGCMapTile.js';\nimport $ol$source$OGCVectorTile from './ol/source/OGCVectorTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM.js';\nimport $ol$source$OSM from './ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from './ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from './ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from './ol/source/Raster.js';\nimport $ol$source$Raster from './ol/source/Raster.js';\nimport $ol$source$Source from './ol/source/Source.js';\nimport $ol$source$Stamen from './ol/source/Stamen.js';\nimport $ol$source$Tile from './ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from './ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from './ol/source/TileDebug.js';\nimport $ol$source$TileImage from './ol/source/TileImage.js';\nimport $ol$source$TileJSON from './ol/source/TileJSON.js';\nimport $ol$source$TileWMS from './ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from './ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from './ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from './ol/source/Vector.js';\nimport $ol$source$Vector from './ol/source/Vector.js';\nimport $ol$source$VectorTile from './ol/source/VectorTile.js';\nimport {defaultLoadFunction as _ol_source_VectorTile$defaultLoadFunction} from './ol/source/VectorTile.js';\nimport $ol$source$WMTS from './ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS.js';\nimport $ol$source$XYZ from './ol/source/XYZ.js';\nimport {CustomTile as _ol_source_Zoomify$CustomTile} from './ol/source/Zoomify.js';\nimport $ol$source$Zoomify from './ol/source/Zoomify.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from './ol/source/common.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from './ol/source/ogcTileUtil.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from './ol/source/wms.js';\nimport $ol$reproj$Image from './ol/reproj/Image.js';\nimport $ol$reproj$Tile from './ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from './ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from './ol/reproj/common.js';\nimport $ol$renderer$Composite from './ol/renderer/Composite.js';\nimport $ol$renderer$Layer from './ol/renderer/Layer.js';\nimport $ol$renderer$Map from './ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from './ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from './ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from './ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from './ol/renderer/vector.js';\nimport $ol$renderer$webgl$Layer from './ol/renderer/webgl/Layer.js';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer.js';\nimport {Uniforms as _ol_renderer_webgl_TileLayer$Uniforms} from './ol/renderer/webgl/TileLayer.js';\nimport {Attributes as _ol_renderer_webgl_TileLayer$Attributes} from './ol/renderer/webgl/TileLayer.js';\nimport $ol$renderer$webgl$TileLayer from './ol/renderer/webgl/TileLayer.js';\nimport $ol$renderer$webgl$VectorLayer from './ol/renderer/webgl/VectorLayer.js';\nimport {packColor as _ol_renderer_webgl_shaders$packColor} from './ol/renderer/webgl/shaders.js';\nimport {FILL_VERTEX_SHADER as _ol_renderer_webgl_shaders$FILL_VERTEX_SHADER} from './ol/renderer/webgl/shaders.js';\nimport {FILL_FRAGMENT_SHADER as _ol_renderer_webgl_shaders$FILL_FRAGMENT_SHADER} from './ol/renderer/webgl/shaders.js';\nimport {STROKE_VERTEX_SHADER as _ol_renderer_webgl_shaders$STROKE_VERTEX_SHADER} from './ol/renderer/webgl/shaders.js';\nimport {STROKE_FRAGMENT_SHADER as _ol_renderer_webgl_shaders$STROKE_FRAGMENT_SHADER} from './ol/renderer/webgl/shaders.js';\nimport {POINT_VERTEX_SHADER as _ol_renderer_webgl_shaders$POINT_VERTEX_SHADER} from './ol/renderer/webgl/shaders.js';\nimport {POINT_FRAGMENT_SHADER as _ol_renderer_webgl_shaders$POINT_FRAGMENT_SHADER} from './ol/renderer/webgl/shaders.js';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer.js';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer.js';\nimport $ol$render$Box from './ol/render/Box.js';\nimport $ol$render$Event from './ol/render/Event.js';\nimport $ol$render$Feature from './ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from './ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from './ol/render/Feature.js';\nimport $ol$render$VectorContext from './ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from './ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from './ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from './ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from './ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from './ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from './ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from './ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from './ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from './ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from './ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from './ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from './ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from './ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from './ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from './ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from './ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from './ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from './ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from './ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from './ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from './ol/render/canvas.js';\nimport $ol$render$webgl$BatchRenderer from './ol/render/webgl/BatchRenderer.js';\nimport $ol$render$webgl$LineStringBatchRenderer from './ol/render/webgl/LineStringBatchRenderer.js';\nimport $ol$render$webgl$MixedGeometryBatch from './ol/render/webgl/MixedGeometryBatch.js';\nimport $ol$render$webgl$PointBatchRenderer from './ol/render/webgl/PointBatchRenderer.js';\nimport $ol$render$webgl$PolygonBatchRenderer from './ol/render/webgl/PolygonBatchRenderer.js';\nimport {writePointFeatureToBuffers as _ol_render_webgl_utils$writePointFeatureToBuffers} from './ol/render/webgl/utils.js';\nimport {writeLineSegmentToBuffers as _ol_render_webgl_utils$writeLineSegmentToBuffers} from './ol/render/webgl/utils.js';\nimport {writePolygonTrianglesToBuffers as _ol_render_webgl_utils$writePolygonTrianglesToBuffers} from './ol/render/webgl/utils.js';\nimport {getBlankImageData as _ol_render_webgl_utils$getBlankImageData} from './ol/render/webgl/utils.js';\nimport {colorEncodeId as _ol_render_webgl_utils$colorEncodeId} from './ol/render/webgl/utils.js';\nimport {colorDecodeId as _ol_render_webgl_utils$colorDecodeId} from './ol/render/webgl/utils.js';\nimport $ol$render$canvas$Builder from './ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from './ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from './ol/render/canvas/Executor.js';\nimport $ol$render$canvas$ExecutorGroup from './ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from './ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from './ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from './ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from './ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from './ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from './ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from './ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from './ol/render/canvas/PolygonBuilder.js';\nimport $ol$render$canvas$TextBuilder from './ol/render/canvas/TextBuilder.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from './ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from './ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from './ol/render/canvas/hitdetect.js';\nimport $ol$proj$Projection from './ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from './ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from './ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from './ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from './ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from './ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from './ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from './ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from './ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from './ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from './ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from './ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from './ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from './ol/proj/epsg4326.js';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from './ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from './ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from './ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from './ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from './ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from './ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from './ol/proj/transforms.js';\nimport $ol$layer$Base from './ol/layer/Base.js';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from './ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from './ol/layer/Group.js';\nimport $ol$layer$Group from './ol/layer/Group.js';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap.js';\nimport $ol$layer$Image from './ol/layer/Image.js';\nimport $ol$layer$Layer from './ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from './ol/layer/Layer.js';\nimport $ol$layer$MapboxVector from './ol/layer/MapboxVector.js';\nimport $ol$layer$Tile from './ol/layer/Tile.js';\nimport $ol$layer$Vector from './ol/layer/Vector.js';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage.js';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile.js';\nimport $ol$layer$WebGLPoints from './ol/layer/WebGLPoints.js';\nimport $ol$layer$WebGLTile from './ol/layer/WebGLTile.js';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from './ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from './ol/interaction/Draw.js';\nimport $ol$interaction$Draw from './ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from './ol/interaction/Extent.js';\nimport $ol$interaction$Extent from './ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from './ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from './ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from './ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from './ol/interaction/Modify.js';\nimport $ol$interaction$Modify from './ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from './ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from './ol/interaction/Select.js';\nimport $ol$interaction$Select from './ol/interaction/Select.js';\nimport $ol$interaction$Snap from './ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from './ol/interaction/Translate.js';\nimport $ol$interaction$Translate from './ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from './ol/interaction/defaults.js';\nimport $ol$geom$Circle from './ol/geom/Circle.js';\nimport $ol$geom$Geometry from './ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from './ol/geom/LineString.js';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from './ol/geom/Point.js';\nimport $ol$geom$Polygon from './ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from './ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from './ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from './ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from './ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from './ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from './ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from './ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from './ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from './ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from './ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from './ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from './ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from './ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from './ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from './ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from './ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from './ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from './ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from './ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from './ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from './ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from './ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from './ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from './ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from './ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from './ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from './ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from './ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from './ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from './ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from './ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from './ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from './ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from './ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from './ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from './ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from './ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from './ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from './ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from './ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from './ol/geom/flat/transform.js';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON.js';\nimport $ol$format$Feature from './ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from './ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from './ol/format/Feature.js';\nimport $ol$format$GML from './ol/format/GML.js';\nimport $ol$format$GML2 from './ol/format/GML2.js';\nimport $ol$format$GML3 from './ol/format/GML3.js';\nimport $ol$format$GML32 from './ol/format/GML32.js';\nimport {GMLNS as _ol_format_GMLBase$GMLNS} from './ol/format/GMLBase.js';\nimport $ol$format$GMLBase from './ol/format/GMLBase.js';\nimport $ol$format$GPX from './ol/format/GPX.js';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON.js';\nimport $ol$format$IGC from './ol/format/IGC.js';\nimport $ol$format$IIIFInfo from './ol/format/IIIFInfo.js';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from './ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from './ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from './ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from './ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from './ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from './ol/format/KML.js';\nimport $ol$format$KML from './ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from './ol/format/KML.js';\nimport $ol$format$MVT from './ol/format/MVT.js';\nimport $ol$format$OSMXML from './ol/format/OSMXML.js';\nimport $ol$format$OWS from './ol/format/OWS.js';\nimport $ol$format$Polyline from './ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from './ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from './ol/format/Polyline.js';\nimport $ol$format$TextFeature from './ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON.js';\nimport $ol$format$WFS from './ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS.js';\nimport $ol$format$WKB from './ol/format/WKB.js';\nimport $ol$format$WKT from './ol/format/WKT.js';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities.js';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities.js';\nimport $ol$format$XML from './ol/format/XML.js';\nimport $ol$format$XMLFeature from './ol/format/XMLFeature.js';\nimport {and as _ol_format_filter$and} from './ol/format/filter.js';\nimport {or as _ol_format_filter$or} from './ol/format/filter.js';\nimport {not as _ol_format_filter$not} from './ol/format/filter.js';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter.js';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter.js';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter.js';\nimport {disjoint as _ol_format_filter$disjoint} from './ol/format/filter.js';\nimport {within as _ol_format_filter$within} from './ol/format/filter.js';\nimport {dwithin as _ol_format_filter$dwithin} from './ol/format/filter.js';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter.js';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter.js';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter.js';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter.js';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter.js';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter.js';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter.js';\nimport {between as _ol_format_filter$between} from './ol/format/filter.js';\nimport {like as _ol_format_filter$like} from './ol/format/filter.js';\nimport {during as _ol_format_filter$during} from './ol/format/filter.js';\nimport {resourceId as _ol_format_filter$resourceId} from './ol/format/filter.js';\nimport {readHref as _ol_format_xlink$readHref} from './ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from './ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from './ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from './ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from './ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from './ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from './ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from './ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from './ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from './ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from './ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from './ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from './ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from './ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from './ol/format/xsd.js';\nimport $ol$format$filter$And from './ol/format/filter/And.js';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox.js';\nimport $ol$format$filter$Comparison from './ol/format/filter/Comparison.js';\nimport $ol$format$filter$ComparisonBinary from './ol/format/filter/ComparisonBinary.js';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains.js';\nimport $ol$format$filter$DWithin from './ol/format/filter/DWithin.js';\nimport $ol$format$filter$Disjoint from './ol/format/filter/Disjoint.js';\nimport $ol$format$filter$During from './ol/format/filter/During.js';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo.js';\nimport $ol$format$filter$Filter from './ol/format/filter/Filter.js';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan.js';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo.js';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects.js';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween.js';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike.js';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull.js';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan.js';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo.js';\nimport $ol$format$filter$LogicalNary from './ol/format/filter/LogicalNary.js';\nimport $ol$format$filter$Not from './ol/format/filter/Not.js';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo.js';\nimport $ol$format$filter$Or from './ol/format/filter/Or.js';\nimport $ol$format$filter$ResourceId from './ol/format/filter/ResourceId.js';\nimport $ol$format$filter$Spatial from './ol/format/filter/Spatial.js';\nimport $ol$format$filter$Within from './ol/format/filter/Within.js';\nimport $ol$events$Event from './ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from './ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from './ol/events/Event.js';\nimport $ol$events$Target from './ol/events/Target.js';\nimport {all as _ol_events_condition$all} from './ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from './ol/events/condition.js';\nimport {always as _ol_events_condition$always} from './ol/events/condition.js';\nimport {click as _ol_events_condition$click} from './ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from './ol/events/condition.js';\nimport {never as _ol_events_condition$never} from './ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition.js';\nimport $ol$control$Attribution from './ol/control/Attribution.js';\nimport $ol$control$Control from './ol/control/Control.js';\nimport $ol$control$FullScreen from './ol/control/FullScreen.js';\nimport $ol$control$MousePosition from './ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap.js';\nimport $ol$control$Rotate from './ol/control/Rotate.js';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine.js';\nimport $ol$control$Zoom from './ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from './ol/control/defaults.js';\n\nvar ol = {};\nol.AssertionError = $ol$AssertionError;\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Image = $ol$Image;\nol.Image.listenImage = _ol_Image$listenImage;\nol.ImageBase = $ol$ImageBase;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.VectorTile = $ol$VectorTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.numberSafeCompareFunction = _ol_array$numberSafeCompareFunction;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.normalize = _ol_color$normalize;\nol.color.toString = _ol_color$toString;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GMLBase = $ol$format$GMLBase;\nol.format.GMLBase.GMLNS = _ol_format_GMLBase$GMLNS;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.IIIFInfo = $ol$format$IIIFInfo;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKB = $ol$format$WKB;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.XML = $ol$format$XML;\nol.format.XMLFeature = $ol$format$XMLFeature;\nol.format.filter = {};\nol.format.filter.And = $ol$format$filter$And;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Comparison = $ol$format$filter$Comparison;\nol.format.filter.ComparisonBinary = $ol$format$filter$ComparisonBinary;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.DWithin = $ol$format$filter$DWithin;\nol.format.filter.Disjoint = $ol$format$filter$Disjoint;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.Filter = $ol$format$filter$Filter;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.LogicalNary = $ol$format$filter$LogicalNary;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.ResourceId = $ol$format$filter$ResourceId;\nol.format.filter.Spatial = $ol$format$filter$Spatial;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.disjoint = _ol_format_filter$disjoint;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.dwithin = _ol_format_filter$dwithin;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.resourceId = _ol_format_filter$resourceId;\nol.format.filter.within = _ol_format_filter$within;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.MapboxVector = $ol$layer$MapboxVector;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.layer.WebGLPoints = $ol$layer$WebGLPoints;\nol.layer.WebGLTile = $ol$layer$WebGLTile;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.render.webgl = {};\nol.render.webgl.BatchRenderer = $ol$render$webgl$BatchRenderer;\nol.render.webgl.LineStringBatchRenderer = $ol$render$webgl$LineStringBatchRenderer;\nol.render.webgl.MixedGeometryBatch = $ol$render$webgl$MixedGeometryBatch;\nol.render.webgl.PointBatchRenderer = $ol$render$webgl$PointBatchRenderer;\nol.render.webgl.PolygonBatchRenderer = $ol$render$webgl$PolygonBatchRenderer;\nol.render.webgl.utils = {};\nol.render.webgl.utils.colorDecodeId = _ol_render_webgl_utils$colorDecodeId;\nol.render.webgl.utils.colorEncodeId = _ol_render_webgl_utils$colorEncodeId;\nol.render.webgl.utils.getBlankImageData = _ol_render_webgl_utils$getBlankImageData;\nol.render.webgl.utils.writeLineSegmentToBuffers = _ol_render_webgl_utils$writeLineSegmentToBuffers;\nol.render.webgl.utils.writePointFeatureToBuffers = _ol_render_webgl_utils$writePointFeatureToBuffers;\nol.render.webgl.utils.writePolygonTrianglesToBuffers = _ol_render_webgl_utils$writePolygonTrianglesToBuffers;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.renderer.webgl = {};\nol.renderer.webgl.Layer = $ol$renderer$webgl$Layer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.renderer.webgl.TileLayer = $ol$renderer$webgl$TileLayer;\nol.renderer.webgl.TileLayer.Attributes = _ol_renderer_webgl_TileLayer$Attributes;\nol.renderer.webgl.TileLayer.Uniforms = _ol_renderer_webgl_TileLayer$Uniforms;\nol.renderer.webgl.VectorLayer = $ol$renderer$webgl$VectorLayer;\nol.renderer.webgl.shaders = {};\nol.renderer.webgl.shaders.FILL_FRAGMENT_SHADER = _ol_renderer_webgl_shaders$FILL_FRAGMENT_SHADER;\nol.renderer.webgl.shaders.FILL_VERTEX_SHADER = _ol_renderer_webgl_shaders$FILL_VERTEX_SHADER;\nol.renderer.webgl.shaders.POINT_FRAGMENT_SHADER = _ol_renderer_webgl_shaders$POINT_FRAGMENT_SHADER;\nol.renderer.webgl.shaders.POINT_VERTEX_SHADER = _ol_renderer_webgl_shaders$POINT_VERTEX_SHADER;\nol.renderer.webgl.shaders.STROKE_FRAGMENT_SHADER = _ol_renderer_webgl_shaders$STROKE_FRAGMENT_SHADER;\nol.renderer.webgl.shaders.STROKE_VERTEX_SHADER = _ol_renderer_webgl_shaders$STROKE_VERTEX_SHADER;\nol.renderer.webgl.shaders.packColor = _ol_renderer_webgl_shaders$packColor;\nol.reproj = {};\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.GeoTIFF = $ol$source$GeoTIFF;\nol.source.IIIF = $ol$source$IIIF;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OGCVectorTile = $ol$source$OGCVectorTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.VectorTile.defaultLoadFunction = _ol_source_VectorTile$defaultLoadFunction;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.source.Zoomify.CustomTile = _ol_source_Zoomify$CustomTile;\nol.source.common = {};\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.expressions = {};\nol.style.expressions.Operators = _ol_style_expressions$Operators;\nol.style.expressions.PALETTE_TEXTURE_ARRAY = _ol_style_expressions$PALETTE_TEXTURE_ARRAY;\nol.style.expressions.arrayToGlsl = _ol_style_expressions$arrayToGlsl;\nol.style.expressions.colorToGlsl = _ol_style_expressions$colorToGlsl;\nol.style.expressions.expressionToGlsl = _ol_style_expressions$expressionToGlsl;\nol.style.expressions.getStringNumberEquivalent = _ol_style_expressions$getStringNumberEquivalent;\nol.style.expressions.getValueType = _ol_style_expressions$getValueType;\nol.style.expressions.isTypeUnique = _ol_style_expressions$isTypeUnique;\nol.style.expressions.numberToGlsl = _ol_style_expressions$numberToGlsl;\nol.style.expressions.stringToGlsl = _ol_style_expressions$stringToGlsl;\nol.style.expressions.uniformNameForVariable = _ol_style_expressions$uniformNameForVariable;\nol.style.flat = {};\nol.style.flat.toStyle = _ol_style_flat$toStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.webgl = {};\nol.webgl.ARRAY_BUFFER = _ol_webgl$ARRAY_BUFFER;\nol.webgl.Buffer = $ol$webgl$Buffer;\nol.webgl.Buffer.getArrayClassForType = _ol_webgl_Buffer$getArrayClassForType;\nol.webgl.DYNAMIC_DRAW = _ol_webgl$DYNAMIC_DRAW;\nol.webgl.ELEMENT_ARRAY_BUFFER = _ol_webgl$ELEMENT_ARRAY_BUFFER;\nol.webgl.FLOAT = _ol_webgl$FLOAT;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.Helper.computeAttributesStride = _ol_webgl_Helper$computeAttributesStride;\nol.webgl.PaletteTexture = $ol$webgl$PaletteTexture;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.webgl.RenderTarget = $ol$webgl$RenderTarget;\nol.webgl.STATIC_DRAW = _ol_webgl$STATIC_DRAW;\nol.webgl.STREAM_DRAW = _ol_webgl$STREAM_DRAW;\nol.webgl.ShaderBuilder = {};\nol.webgl.ShaderBuilder.ShaderBuilder = _ol_webgl_ShaderBuilder$ShaderBuilder;\nol.webgl.ShaderBuilder.parseLiteralStyle = _ol_webgl_ShaderBuilder$parseLiteralStyle;\nol.webgl.TileTexture = $ol$webgl$TileTexture;\nol.webgl.UNSIGNED_BYTE = _ol_webgl$UNSIGNED_BYTE;\nol.webgl.UNSIGNED_INT = _ol_webgl$UNSIGNED_INT;\nol.webgl.UNSIGNED_SHORT = _ol_webgl$UNSIGNED_SHORT;\nol.webgl.getContext = _ol_webgl$getContext;\nol.webgl.getSupportedExtensions = _ol_webgl$getSupportedExtensions;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {parseLiteralStyle} from '../webgl/ShaderBuilder.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} VectorSourceType\n * @typedef {Object} Options\n * @property {import('../style/literal.js').LiteralStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {VectorSourceType} [source] Point source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'circle',\n *     size: 8,\n *     color: '#33AAFF',\n *     opacity: 0.9\n *   }\n * }\n * ```\n *\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'image',\n *     offset: [0, 12],\n *     size: [4, 8],\n *     src: '../static/exclamation-mark.png'\n *   }\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} VectorSourceType\n * @extends {Layer<VectorSourceType, WebGLPointsLayerRenderer>}\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nclass WebGLPointsLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} options Options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {import('../webgl/ShaderBuilder.js').StyleParseResult}\n     */\n    this.parseResult_ = parseLiteralStyle(options.style);\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = options.style.variables || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hitDetectionDisabled_ = !!options.disableHitDetection;\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n      fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n      hitVertexShader:\n        !this.hitDetectionDisabled_ &&\n        this.parseResult_.builder.getSymbolVertexShader(true),\n      hitFragmentShader:\n        !this.hitDetectionDisabled_ &&\n        this.parseResult_.builder.getSymbolFragmentShader(true),\n      uniforms: this.parseResult_.uniforms,\n      attributes: this.parseResult_.attributes,\n    });\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\nexport default WebGLPointsLayer;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = def.units;\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * @module ol/source/CartoDB\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * https://carto.com/developers/maps-api/guides/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [account] Username as used to access public Carto dashboard at https://{username}.carto.com/.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nclass CartoDB extends XYZ {\n  /**\n   * @param {Options} options CartoDB options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      transition: options.transition,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  getConfig() {\n    return this.config_;\n  }\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  updateConfig(config) {\n    Object.assign(this.config_, config);\n    this.initializeMap_();\n  }\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  setConfig(config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  }\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  initializeMap_() {\n    const paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener(\n      'load',\n      this.handleInitResponse_.bind(this, paramHash)\n    );\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  }\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  handleInitResponse_(paramHash, event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.setState('error');\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState('ready');\n    } else {\n      this.setState('error');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  handleInitError_(event) {\n    this.setState('error');\n  }\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  applyTemplate_(data) {\n    const tilesUrl =\n      'https://' +\n      data.cdn_url.https +\n      '/' +\n      this.account_ +\n      '/api/v1/map/' +\n      data.layergroupid +\n      '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  }\n}\n\nexport default CartoDB;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(geometry.getType() == 'Point', 10); // The default `geometryFunction` can only handle `Point` geometries\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    } else {\n      return new Feature({\n        geometry,\n        features,\n      });\n    }\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = (this.ratio_ * getWidth(extent)) / 2;\n      const halfHeight = (this.ratio_ * getHeight(extent)) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - (imageResolution * width) / 2;\n    extent[2] = centerX + (imageResolution * width) / 2;\n    extent[1] = centerY - (imageResolution * height) / 2;\n    extent[3] = centerY + (imageResolution * height) / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(\n      extent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      extent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {\n  containsExtent,\n  getCenter,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object} [params] Additional parameters.\n */\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageMapGuide extends ImageSource {\n  /**\n   * @param {Options} options ImageMapGuide options.\n   */\n  constructor(options) {\n    super({\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ =\n      options.displayDpi !== undefined ? options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ =\n      options.metersPerUnit !== undefined ? options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ =\n      options.useOverlay !== undefined ? options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    let image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      const imageUrl = this.getUrl(\n        this.url_,\n        this.params_,\n        extent,\n        size,\n        projection\n      );\n      image = new ImageWrapper(\n        extent,\n        resolution,\n        pixelRatio,\n        imageUrl,\n        this.crossOrigin_,\n        this.imageLoadFunction_\n      );\n      image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  getUrl(baseUrl, params, extent, size, projection) {\n    const scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n    const center = getCenter(extent);\n    const baseParams = {\n      'OPERATION': this.useOverlay_\n        ? 'GETDYNAMICMAPOVERLAYIMAGE'\n        : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1],\n    };\n    Object.assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  }\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return (mcsW * metersPerUnit) / (devW * mpp); // width limited\n  } else {\n    return (mcsH * metersPerUnit) / (devH * mpp); // height limited\n  }\n}\n\nexport default ImageMapGuide;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    console.error(error); // eslint-disable-line no-console\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/OGCVectorTile\n */\n\nimport VectorTile from './VectorTile.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Vector Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {import(\"../format/Feature.js\").default} format Feature parser for tiles.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"application/vnd.mapbox-vector-tile\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a vector type supported by the configured format.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"vector\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n *\n * Vector tile sets may come in a variety of formats (e.g. GeoJSON, MVT).  The `format` option is used to determine\n * which of the advertised media types is used.  If you need to force the use of a particular media type, you can\n * provide the `mediaType` option.\n */\nclass OGCVectorTile extends VectorTile {\n  /**\n   * @param {Options} options OGC vector tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      format: options.format,\n      overlaps: options.overlaps,\n      projection: options.projection,\n      tileClass: options.tileClass,\n      transition: options.transition,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n      state: 'loading',\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      supportedMediaTypes: options.format.supportedMediaTypes,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    console.error(error); // eslint-disable-line no-console\n    this.setState('error');\n  }\n}\n\nexport default OGCVectorTile;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          Object.assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == 'KVP') {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n"],"names":["messages","AssertionError","Error","constructor","code","message","super","this","name","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","evt","ObjectEventType","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","numberSafeCompareFunction","low","high","length","found","a","b","linearFindNearest","arr","direction","n","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType$1","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","abstract","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","DataTile","loader_","loader","data_","error_","size_","size","getSize","getData","getError","self","then","catch","error","assert","assertion","errorCode","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","styles","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","join","node","document","createElement","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","fromCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","parseInt","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","console","warn","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationError","ImageBase","pixelRatio","pixelRatio_","getImage","getPixelRatio","getResolution","ImageState","ImageWrapper","src","crossOrigin","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","setImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","ImageCanvas","canvas","canvas_","handleLoad_","createCanvasContext2D","canvasPool","settings","shift","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","ctx","fillStyle","fillRect","getBlankImage","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cacheSize","s","g","exec","hasAlpha","substr","startsWith","map","Number","normalize","fromStringInternal_","asArray","isStringColor","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","shared","LayerProperty","BaseLayer","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","RenderEventType","layerStatesArray","layerState","some","arrayLayerState","createRenderer","hasRenderer","inView","viewState","zoom","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","series","animation","complete","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attribution","attributionOptions","InteractionProperty","Interaction","setActive","getActive","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","KeyCode","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getBoundingClientRect","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","num","hasArea","toSize","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","Overlay","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","getCacheKeyForTileKey","substring","lastIndexOf","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","TileCache","pruneExceptNewestZ","TileRange","containsTileRange","VectorRenderTile","urlTileCoord","getSourceTiles","context_","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","VectorTile","format_","features_","url_","getFormat","onLoad","dataProjection","setFeatures","onError","setLoader","asColorLike","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","JSON","parse","setRequestHeader","resolveUrl","base","URL","href","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasImmediateRenderer","viewRotation","userTransform","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","setLineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageSize","imagePixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getRotateWithView","imageScale","getScaleArray","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","acc","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay","getBuilder","textBuilderGroup","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","Circle","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","getImageData","isBrokenDiagonalRendering","steps","ud","vd","step","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","attributionLike","tmpTileCoord","TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","fromCharCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","quadKey","digits","mask","XYZ","quickselect","quickselectStep","defaultCompare","sd","swap","RBush","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","level","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","p","destNode","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","VectorEventType","VectorSourceEvent","VectorSource","overlaps_","overlaps","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","DataTileSource","bandCount","setTileSizes","sourceLoader","readRGB","preference","getSamplesPerPixel","interpretation","fileDirectory","PhotometricInterpretation","interpretations","GeoTIFF","globals","photometricInterpretations","CMYK","YCbCr","CIELab","ICCLab","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","workerPool","getBoundingBox","_","ImageWidth","ImageLength","referenceImage","ImageHeight","geoKeys","ProjectedCSTypeGeoKey","getCachedProjection","unitsFromCode","ProjLinearUnitsGeoKey","GeographicTypeGeoKey","GeogAngularUnitsGeoKey","getImagesForTIFF","tiff","getImageCount","requests","getImagesForSource","request","blob","fromBlob","overviews","fromUrls","fromUrl","assertEqual","expected","got","rejector","getMaxForDataType","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","GeoTIFFSource","sourceInfo_","numSources","sourceOptions_","sourceOptions","sourceImagery_","sourceMasks_","resolutionFactors_","samplesPerPixel_","nodataValues_","metadata_","normalize_","addAlpha_","convertToRGB_","convertToRGB","configure_","commonRenderTileSizes","commonSourceTileSizes","samplesPerPixel","nodataValues","metadata","sourceCount","sourceIndex","images","masks","NewSubfileType","imageCount","sourceOrigin","sourceTileSizes","renderTileSizes","sourceResolutions","imageIndex","nodataValue","getGDALNoData","getGDALMetadata","wantedSamples","bands","imageResolutions","sourceTileSize","getTileWidth","getTileHeight","aspectRatio","resolutionFactor","scaledSourceResolutions","reverse","sourceImagery","unshift","firstSource","outer","nodata","loadTile_","sourceInfo","pool","Pool","pixelBounds","samples","fillValue","bandNumber","sampleIndex","readOptions","interleave","readRasters","maskIndex","composeTile_","sourceSamples","addAlpha","pixelCount","dataLength","dataIndex","pixelIndex","transparent","gain","bias","stats","sourceValue","bandIndex","nodataIsNaN","CustomTile","zoomifyImage_","Versions","IIIF_PROFILE_VALUES","level0","supports","formats","qualities","level1","level2","COMPLIANCE_VERSION1","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","tiles","scaleFactors","extraFormats","preferredFormat","preferredFormats","extraFeatures","extraQualities","formatPercentage","percentage","toLocaleString","maximumFractionDigits","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","idx","getImageInternal","handleImageChange","defaultImageLoadFunction","appendParams","uri","params","keyParams","encodeURIComponent","qs","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","ATTRIBUTION","BaseImageLayer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","CanvasLayerRenderer","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","createPixelContext","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","layerExtent","imageExtent","imageMapWidth","imageMapHeight","imageResolution","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","previousAlpha","ImageLayer","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","TileLayer","hasImageData","ImageData","newImageData","imageData","createImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","from","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","renderedRevision_","iMax","sourceOrLayer","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","processSources_","imageDatas","onWorkerComplete_","putImageData","sharedContext","layerOrSource","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","terrain","toner","watercolor","ProviderConfig","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","handleError_","json","requestJSONP","onXHRLoad_","onXHRError_","defaultLoadFunction","sourceTileCache","tileGrids_","sourceTile","tileFeatures","candidate","usedSourceTiles","cacheKey","bufferExtent","sourceZ","sourceTileCoord","sourceTileState","listenChange","sourceTileKey","coordKey","tileExtent","empty","DEFAULT_MAX_ZOOM","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","switchOriginXY","elt","matrixAvailable","find","elt_ml","tileWidth","tileHeight","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","DYNAMIC_DRAW","FLOAT","CONTEXT_IDS","attributes","preserveDrawingBuffer","antialias","supportedExtensions","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","BufferUsage","WebGLArrayBuffer","usage","ofSize","getArrayClassForType","fromArray","fromArrayBuffer","getUsage","ContextEventType","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","getContextAttributes","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","texture","uniform3f","uniform4f","fromTransform","mat4","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","cacheItem","users","getCanvas","bufferCache_","extensionCache_","currentProgram_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","ZERO","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","setUniformMatrixValue","setUniformFloatValue","setUniformFloatVec2","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","computeAttributesStride","attr","getByteSizeFromType","BYTES_PER_ELEMENT","PaletteTexture","texture_","NEAREST","TEXTURE_MAG_FILTER","tmpArray4","WebGLRenderTarget","helper","helper_","framebuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","bindAndConfigure","resampleFilter","uploadDataTexture","textureType","canInterpolate","bytesPerRow","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","TileTexture","textures","renderSize_","grid","setTile","uploadTile_","uploadImageTexture","pixelSize","isFloat","DataType","bytesPerElement","textureCount","textureDataArrays","textureIndex","rowOffset","colCount","rowIndex","colIndex","dataValue","textureData","deleteTexture","getPixelData","renderCol","renderRow","renderWidth","renderHeight","sourceSize","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceWidth","sourceHeight","sourceCol","sourceRow","DataView","bytesPerPixel","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","Uniforms","TILE_TEXTURE_ARRAY","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","RENDER_EXTENT","ZOOM","Attributes","TEXTURE_COORD","attributeDescriptions","depthForZ","addTileTextureToLookup","tileTexturesByZ","tileTexture","getRenderExtent","gridExtent","getCacheKey","getTileCoordKey","WebGLTileLayerRenderer","renderComplete","tileTransform_","tempMat4_","tempTileRange_","tempTileCoord_","createTileCoord","tempSize_","program_","vertexShader_","fragmentShader_","indices_","tileTextureCache_","paletteTextures_","paletteTextures","isDrawableTile_","clearCache","enqueueTiles","initialZ","tileTextureCache","minZ","tileQueueKey","targetZ","alphaLookup","blend","tileTextures","findAltTiles_","parentZ","tileZ","tileWidthWithGutter","tileHeightWithGutter","centerI","centerJ","tileScale","depth","tileCenterI","tileCenterJ","translateTransform","mat4FromTransform","textureProperty","uniformName","paletteIndex","paletteTexture","gutterExtent","getSources","altZ","deleteProgram","ValueTypes","Operators","getValueType","stringify","valueArr","v","operator","getReturnType","isTypeUnique","valueType","numberToGlsl","arrayToGlsl","colorToGlsl","getStringNumberEquivalent","string","stringLiteralsMap","stringToGlsl","expressionToGlsl","typeHint","toGlsl","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertUniqueInferredType","types","uniformNameForVariable","variableName","inFragmentShader","variables","PALETTE_TEXTURE_ARRAY","colors","numColors","palette","paletteName","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","arg","band","functions","ifBlocks","colorIndex","parsedArgs","interpolation","outputType","exponent","stop1","output1","stop2","fallback","assertArgsOdd","ShaderBuilder","varyings","sizeExpression","rotationExpression","offsetExpression","colorExpression","texCoordExpression","discardExpression","rotateWithView","addUniform","addAttribute","addVarying","expression","setSizeExpression","setRotationExpression","setSymbolOffsetExpression","setColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","setSymbolRotateWithView","getSizeExpression","getOffsetExpression","getColorExpression","getTextureCoordinateExpression","getFragmentDiscardExpression","getSymbolVertexShader","forHitDetection","offsetMatrix","attribute","varying","getSymbolFragmentShader","hitDetectionBypass","parseLiteralStyle","symbStyle","symbol","texCoord","textureCoord","vertContext","parsedSize","parsedOffset","parsedTexCoord","parsedRotation","fragContext","parsedColor","parsedOpacity","opacityFilter","visibleSize","symbolType","st","builder","parsedFilter","varName","attrName","attributeName","props","ImageStyle","opacity_","rotateWithView_","scale_","scaleArray_","displacement_","displacement","declutterMode_","getScale","getDisplacement","getHitDetectionImage","getImageSize","setDisplacement","setRotateWithView","setScale","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getPoints","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","CircleStyle","setRadius","Fill","color_","setColor","taintedTestContext","IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setText","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","Text","font_","textAlign_","justify_","justify","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getPlacement","getMaxAngle","getOverflow","getJustify","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","knownMapMediaTypes","knownVectorMediaTypes","getMapTileUrlTemplate","links","mediaType","tileUrlTemplate","fallbackUrlTemplate","link","rel","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","tileMatrixSet","tileMatrixSetLimits","crs","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","dataType","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","toStyleFunction","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","list","steiner","getLeftmost","compareX","filterPoints","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","filteredBridge","leftmost","ax","ay","bx","by","cx","cy","py","intersectsPolygon","inside","middleInside","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","an","bp","sum","earcutModule","exports","earcut$1","default","deviation","polygonArea","trianglesArea","flatten","holes","dimensions","holeIndex","tmpArray_","bufferPositions_","vertexPosition","indexPosition","writePointVertex","colorEncodeId","radix","divide","colorDecodeId","mult","WebGLPointsLayerRenderer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitVertexShader_","hitFragmentShader_","hitProgram_","customAttributes","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","generateBuffersRun_","worker_","createWebGLWorker","received","projectionTransform","hitDetection","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","generateBuffersRun","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","endWorld","startWorld","world","renderCount","renderHitDetection","vectorSource","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","totalInstructionsCount","totalHitInstructionsCount","featureCache","tmpCoords","tmpColor","hitColor","renderIndex","hitIndex","featureUid","customAttributesCount","hitMessage","workerMessageCounter","AbstractBatchRenderer","rebuild","batch","geometryType","renderInstructionsTransform","generateRenderInstructions","generateBuffers_","currentTransform","invertVerticesBufferTransform","verticesBuffer","indicesBuffer","messageId","messageType","handleMessage","verticesBufferTransform","SEGMENT_START","SEGMENT_END","PARAMETERS","LineStringBatchRenderer","verticesCount","geometriesCount","batchEntry","flatCoords","entries","flatCoordss","kk","MixedGeometryBatch","polygonBatch","ringsCount","pointBatch","lineStringBatch","addGeometry_","addFeatureEntryInPointBatch_","addFeatureEntryInLineStringBatch_","addFeatureEntryInPolygonBatch_","ringsVerticesCounts","clearFeatureEntryInPointBatch_","clearFeatureEntryInLineStringBatch_","clearFeatureEntryInPolygonBatch_","geom","getPolygons","getLineStrings","line","polygonGeom","ringsVerticesCount","ind","ring","pointGeom","lineGeom","changeFeature","POSITION","INDEX","PointBatchRenderer","PolygonBatchRenderer","packColor","DECODE_COLOR_EXPRESSION","FILL_VERTEX_SHADER","FILL_FRAGMENT_SHADER","STROKE_VERTEX_SHADER","STROKE_FRAGMENT_SHADER","POINT_VERTEX_SHADER","POINT_FRAGMENT_SHADER","toAttributesArray","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryWidths","beg","saveTextStates_","p0","p3","flatEnd","flatOffset","o","oo","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","textIsArray","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","byGeometryType","zIndexKeys","geomAndStyle","hitDetect","resultFeatures","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","setupCompositionContext_","compositionContext","releaseCompositionContext_","transformToString","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","getSquaredRenderTolerance","replayGroupInstructions","CanvasVectorImageLayerRenderer","vectorRenderer_","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","IMAGE_REPLAYS","hybrid","vector","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","hifi","getRenderMode","renderTileImage_","layerRevision","builderState","layerUid","tt","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","tilePixel","getTileRenderTransform","worldOffset","renderMode","replayTypes","replayState","renderPixelRatio","renderScale","pixelScale","setCenterAndRadius","getRadiusSquared_","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","lineStrings","appendLineString","multiLineString","getLineString","midpoints","appendPoint","multiPoint","getPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","lastEnds","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","toGeometry","VectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","lon","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","DEFAULT_GRADIENT","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","equivalentProjection","transformExtentWithOptions","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","readBoolean","readString","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","MVT","featureClass_","featureClass","geometryName","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","version","featurePBFReader","VectorTileLayer","renderMode_","ErrorEvent","parseStyle","pipeline","contrast","exposure","saturation","gamma","brightness","numVariables","uniformDeclarations","functionDefintions","WebGLTileLayer","sources_","renderedSource_","styleVariables_","handleSourceUpdate_","getSourceBandCount_","MAX_SAFE_INTEGER","parsedStyle","renderSources","onChange","altSources","updateStyleVariables","DragAndDropEventType","DragAndDropEvent","file","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","readNumber","writeNumber","to5","differentNumber","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","squaredCoordinateDistance","distanceToCircumference","closestOnSegmentData","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","getFeatureFromEvent","TranslateEventType","TranslateEvent","startCoordinate","flipXY","destOffset","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSON","hasZM","getHasZM","hasZ","hasM","esriJSONPolygon","flatRing","outerRings","matched","outerRing","convertRings","geometryReader","geometryWriter","XMLFeature","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","getAttribute","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","readPoint","readFlatCoordinatesFromNode","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","readLineString","readFlatLinearRing","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","internalOptions","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","readFlatCoordinates","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","flatLinearRing","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","innerBoundaryIs","outerBoundaryIs","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","re","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","setAttributeNS","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML","GML32","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","applyLayoutOptions","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","GX_TRACK_PARSERS","when","whens","gxTrackObject","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","iconProperties","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","nodes","tags","NODE_PARSERS","way","ways","XML","readFromDocument","readFromNode","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","Get","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","vertex","Filter","tagName_","getTagName","LogicalNary","And","Bbox","Spatial","Contains","DWithin","unit","Disjoint","Comparison","propertyName","During","ComparisonBinary","matchCase","EqualTo","GreaterThan","GreaterThanOrEqualTo","Intersects","IsBetween","lowerBoundary","upperBoundary","IsLike","pattern","wildCard","singleChar","escapeChar","IsNull","LessThan","LessThanOrEqualTo","Not","NotEqualTo","Or","ResourceId","rid","Within","and","Function","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","typeName","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","writeDuringFilter","writeLogicalFilter","writeNotFilter","BBOX","writeBboxFilter","writeSpatialFilter","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","writeExpression","timePeriod","writeTimeInstant","writeLiteral","timeInstant","timePosition","writeGetFeature","WKBGeometryType","WkbReader","view_","pos_","initialized_","isLittleEndian_","hasZ_","hasM_","srid_","layout_","readUint8","getUint8","readUint32","isLittleEndian","getUint32","getFloat64","numPoints","numRings","readWkbHeader","expectedTypeId","wkbType","wkbTypeThousandth","hasSRID","typeId","srid","readWkbPayload","readGeometryCollection","readWkbBlock","readWkbCollection","reader","getSrid","WkbWriter","opts","littleEndian","isEWKB_","ewkb","writeQueue_","nodata_","X","Y","Z","writeUint8","writeUint32","coordsObj","axis","writeLineString","writeWkbHeader","isInteger","writeMultiLineString","writeMultiPolygon","writeGeometryCollection","findMinimumLayout","geoms","wkblut","geomType","getBuffer","setUint8","setUint32","setFloat64","getDataView","decodeHexString","byteOffset","GeometryConstructor","POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","EMPTY","TokenType","wktTypeLookup","Lexer","wkt","index_","isAlpha_","isNumeric_","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","toUpperCase","Parser","lexer","lexer_","token_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","isEmptyGeometry_","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","encode","enc","geometryEncoder","wktType","encodeGeometryLayout","Service","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","Request","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","layerObject","LAYER_PARSERS","readLayer","Name","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","Format","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","parentLayerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","formatOnlineresource","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","readBoundingBox","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","WGS84_BBOX_READERS","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","PROJECTION","COORDINATE_FORMAT","MAX_RATIO","MIN_RATIO","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","Direction","ol","$ol$AssertionError","$ol$Collection","_ol_Collection$CollectionEvent","$ol$DataTile","$ol$Disposable","$ol$Feature","_ol_Feature$createStyleFunction","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","$ol$Image","_ol_Image$listenImage","$ol$ImageBase","$ol$ImageCanvas","$ol$ImageTile","$ol$Kinetic","$ol$Map","$ol$MapBrowserEvent","$ol$MapBrowserEventHandler","$ol$MapEvent","$ol$Object","_ol_Object$ObjectEvent","$ol$Observable","_ol_Observable$unByKey","$ol$Overlay","$ol$Tile","$ol$TileCache","$ol$TileQueue","_ol_TileQueue$getTilePriority","$ol$TileRange","_ol_TileRange$createOrUpdate","$ol$VectorRenderTile","$ol$VectorTile","$ol$View","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$binarySearch","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$numberSafeCompareFunction","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$normalize","_ol_color$toString","colorlike","_ol_colorlike$asColorLike","$ol$control$Attribution","$ol$control$Control","FullScreen","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","oldMap","MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","ovmap","ovmap_","boxSizing","boxOverlay_","scope","overlayBox","move","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","equalsExtent","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","$ol$control$Rotate","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","$ol$control$Zoom","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","$ol$events$Event","_ol_events_Event$stopPropagation","$ol$events$Target","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","EsriJSON","idField","esriJSONFeature","esriJSONFeatures","objectIdFieldName","wkid","objects","$ol$format$Feature","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","$ol$format$GML","$ol$format$GML2","$ol$format$GML3","$ol$format$GML32","$ol$format$GMLBase","_ol_format_GMLBase$GMLNS","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","IGC","altitudeMode_","year","month","day","lastDateTime","hour","minute","second","UTC","IIIFInfo","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","identifier","getComplianceLevelFromProfile","complianceLevel","getTileSourceOptions","preferredOptions","imageOptions","quality","$ol$format$JSONFeature","KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","$ol$format$MVT","OSMXML","$ol$format$OWS","Polyline","factor_","geometryLayout_","geometryLayout","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","$ol$format$TextFeature","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","WFS","version_","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","bboxFilterFn","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","writeFilter","WKB","splitCollection","viewCache_","hex_","littleEndian_","ewkb_","nodataZ_","nodataZ","nodataM_","nodataM","writer","encodeHexString","WKT","splitCollection_","parse_","WMSCapabilities","wmsCapabilityObject","WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","WMTSCapabilities","owsParser_","WMTSCapabilityObject","$ol$format$XML","$ol$format$XMLFeature","$ol$format$filter$And","$ol$format$filter$Bbox","$ol$format$filter$Comparison","$ol$format$filter$ComparisonBinary","$ol$format$filter$Contains","$ol$format$filter$DWithin","$ol$format$filter$Disjoint","$ol$format$filter$During","$ol$format$filter$EqualTo","$ol$format$filter$Filter","$ol$format$filter$GreaterThan","$ol$format$filter$GreaterThanOrEqualTo","$ol$format$filter$Intersects","$ol$format$filter$IsBetween","$ol$format$filter$IsLike","$ol$format$filter$IsNull","$ol$format$filter$LessThan","$ol$format$filter$LessThanOrEqualTo","$ol$format$filter$LogicalNary","$ol$format$filter$Not","$ol$format$filter$NotEqualTo","$ol$format$filter$Or","$ol$format$filter$ResourceId","$ol$format$filter$Spatial","$ol$format$filter$Within","_ol_format_filter$and","_ol_format_filter$bbox","between","disjoint","during","dwithin","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","resourceId","within","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","$ol$geom$Circle","$ol$geom$Geometry","$ol$geom$GeometryCollection","$ol$geom$LineString","$ol$geom$LinearRing","$ol$geom$MultiLineString","$ol$geom$MultiPoint","$ol$geom$MultiPolygon","$ol$geom$Point","$ol$geom$Polygon","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","$ol$geom$SimpleGeometry","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","$ol$interaction$DoubleClickZoom","DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","handleResult_","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","FileReader","readAsArrayBuffer","readAsText","dropEffect","_ol_interaction_DragAndDrop$DragAndDropEvent","$ol$interaction$DragBox","_ol_interaction_DragBox$DragBoxEvent","$ol$interaction$DragPan","$ol$interaction$DragRotate","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","$ol$interaction$DragZoom","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","mode","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","getSegments","closestSegment","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","_ol_interaction_Extent$ExtentEvent","$ol$interaction$Interaction","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","$ol$interaction$KeyboardPan","$ol$interaction$KeyboardZoom","animationOptions","animationOptions_","replace_","prefix_","initial_","getParamName_","get_","set_","delete_","delete","updateUrl_","handleChangeLayerGroup_","searchParams","history","replaceState","updateView","viewProperties","layersParam","initial","visibilities","pushState","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","hitPointGeometry","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","_ol_interaction_Modify$ModifyEvent","$ol$interaction$MouseWheelZoom","$ol$interaction$PinchRotate","$ol$interaction$PinchZoom","Pointer","$ol$interaction$Pointer","_ol_interaction_Pointer$centroid","$ol$interaction$Select","_ol_interaction_Select$SelectEvent","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","register","feature_uid","segmenter","segmentsData","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unlisten","unregister","currentMap","segmentsLength","projectedCoordinate","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","$ol$layer$Base","BaseImage","$ol$layer$BaseImage","BaseTile","$ol$layer$BaseTile","$ol$layer$BaseVector","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","epsg4326Projection","toLonLatTransform","lonLatCoordinates","worldExtentP","Group","$ol$layer$Group","_ol_layer_Group$GroupEvent","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$Image","$ol$layer$Layer","_ol_layer_Layer$inView","MapboxVector","VectorTileSource","accessToken","olms","applyStyle","applyBackground","$ol$layer$Tile","Vector","$ol$layer$Vector","VectorImage","imageRatio","imageRatio_","$ol$layer$VectorTile","WebGLPoints","parseResult_","hitDetectionDisabled_","disableHitDetection","WebGLTile","$ol$layer$WebGLTile","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","$ol$proj$Projection","Units","_ol_proj_Units$METERS_PER_UNIT","_ol_proj_Units$fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","proj4","projCodes","defs","def","projName","to_meter","code1","proj1","code2","proj2","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","toLonLat","lonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","$ol$render$Box","$ol$render$Event","$ol$render$Feature","toFeature","_ol_render_Feature$toGeometry","$ol$render$VectorContext","$ol$render$canvas$Builder","$ol$render$canvas$BuilderGroup","$ol$render$canvas$Executor","$ol$render$canvas$ExecutorGroup","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","$ol$render$canvas$ImageBuilder","Immediate","$ol$render$canvas$Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","$ol$render$canvas$LineStringBuilder","$ol$render$canvas$PolygonBuilder","$ol$render$canvas$TextBuilder","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","webgl","BatchRenderer","$ol$render$webgl$BatchRenderer","$ol$render$webgl$LineStringBatchRenderer","$ol$render$webgl$MixedGeometryBatch","$ol$render$webgl$PointBatchRenderer","$ol$render$webgl$PolygonBatchRenderer","utils","_ol_render_webgl_utils$colorDecodeId","_ol_render_webgl_utils$colorEncodeId","getBlankImageData","writeLineSegmentToBuffers","segmentStartIndex","segmentEndIndex","beforeSegmentIndex","afterSegmentIndex","vertexArray","indexArray","instructionsTransform","invertInstructionsTransform","baseIndex","p0world","p1world","computeVertexParameters","vertexNumber","joinAngle1","joinAngle2","angleBetween","pA","pB","lenA","tangentA","orthoA","lenB","tangentB","joinAfter","angle1","writePointFeatureToBuffers","elementIndex","bufferPositions","customAttrs","vPos","iPos","writePolygonTrianglesToBuffers","polygonStartIndex","attributesPerVertex","instructionsIndex","Composite","$ol$renderer$Composite","$ol$renderer$Layer","$ol$renderer$Map","$ol$renderer$canvas$ImageLayer","$ol$renderer$canvas$Layer","_ol_renderer_canvas_Layer$canvasPool","$ol$renderer$canvas$TileLayer","VectorImageLayer","$ol$renderer$canvas$VectorImageLayer","$ol$renderer$canvas$VectorLayer","$ol$renderer$canvas$VectorTileLayer","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","$ol$renderer$webgl$Layer","PointsLayer","$ol$renderer$webgl$PointsLayer","$ol$renderer$webgl$TileLayer","_ol_renderer_webgl_TileLayer$Attributes","_ol_renderer_webgl_TileLayer$Uniforms","fillAttributes","strokeAttributes","pointAttributes","fillVertexShader_","fillFragmentShader_","fillAttributes_","strokeVertexShader_","strokeFragmentShader_","strokeAttributes_","pointVertexShader_","pointFragmentShader_","pointAttributes_","batch_","polygonRenderer_","pointRenderer_","lineStringRenderer_","remaining","rebuildCb","shaders","_ol_renderer_webgl_shaders$FILL_FRAGMENT_SHADER","_ol_renderer_webgl_shaders$FILL_VERTEX_SHADER","_ol_renderer_webgl_shaders$POINT_FRAGMENT_SHADER","_ol_renderer_webgl_shaders$POINT_VERTEX_SHADER","_ol_renderer_webgl_shaders$STROKE_FRAGMENT_SHADER","_ol_renderer_webgl_shaders$STROKE_VERTEX_SHADER","_ol_renderer_webgl_shaders$packColor","reproj","$ol$reproj$Image","$ol$reproj$Tile","$ol$reproj$Triangulation","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","ERROR_THRESHOLD","_ol_reproj$render","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$buffer","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","_ol_source_BingMaps$quadKey","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","handleInitResponse_","handleInitError_","tilesUrl","cdn_url","https","layergroupid","Cluster","interpolationRatio","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$source$DataTile","$ol$source$GeoTIFF","IIIF","partialOptions","baseUrl","supportsListedSizes","supportsListedTiles","supportsArbitraryTiling","maxScaleFactor","ignoredSizesIndex","IiifTileClass","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","$ol$source$Image","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","ImageArcGISRest","params_","imageSize_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","modifiedUrl","setImageLoadFunction","updateParams","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","VERSION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic","imageExtent_","getImageExtent","extentWidth","extentHeight","targetWidth","targetHeight","ImageWMS","v13_","updateV13_","serverType_","serverType","getFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","getLegendUrl","LAYERS","mpu","viewExtent","requestExtent","OGCMapTile","handleTileSetInfo_","tileSetInfo","OGCVectorTile","OSM","_ol_source_OSM$ATTRIBUTION","Raster","$ol$source$Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","$ol$source$Source","Stamen","provider","providerConfig","layerConfig","$ol$source$Tile","_ol_source_Tile$TileSourceEvent","TileArcGISRest","getKeyForParams_","TileDebug","strokeRect","$ol$source$TileImage","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","tileJSON","getTileJSON","attributionExtent","TileWMS","bufferSize","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","_ol_source_UTFGrid$CustomTile","$ol$source$UrlTile","$ol$source$Vector","_ol_source_Vector$VectorSourceEvent","$ol$source$VectorTile","_ol_source_VectorTile$defaultLoadFunction","WMTS","requestEncoding","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Version","TileCol","TileRow","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","$ol$source$XYZ","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileIndex","TileGroup","ZoomifyTileClass","testTileUrl","_ol_source_Zoomify$CustomTile","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","wms","_ol_source_wms$DEFAULT_VERSION","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","$ol$structs$LRUCache","LinkedList","first_","last_","head_","circular_","length_","insertItem","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","$ol$structs$PriorityQueue","_ol_structs_PriorityQueue$DROP","$ol$structs$RBush","$ol$style$Circle","$ol$style$Fill","$ol$style$Icon","$ol$style$IconImage","_ol_style_IconImage$get","$ol$style$IconImageCache","_ol_style_IconImageCache$shared","$ol$style$Image","$ol$style$RegularShape","$ol$style$Stroke","$ol$style$Style","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","$ol$style$Text","expressions","_ol_style_expressions$Operators","_ol_style_expressions$PALETTE_TEXTURE_ARRAY","_ol_style_expressions$arrayToGlsl","_ol_style_expressions$colorToGlsl","_ol_style_expressions$expressionToGlsl","_ol_style_expressions$getStringNumberEquivalent","_ol_style_expressions$getValueType","_ol_style_expressions$isTypeUnique","_ol_style_expressions$numberToGlsl","_ol_style_expressions$stringToGlsl","_ol_style_expressions$uniformNameForVariable","_ol_style_flat$toStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","_ol_tilecoord$getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","$ol$tilegrid$TileGrid","$ol$tilegrid$WMTS","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","_ol_transform$makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_webgl$ARRAY_BUFFER","$ol$webgl$Buffer","_ol_webgl_Buffer$getArrayClassForType","_ol_webgl$DYNAMIC_DRAW","_ol_webgl$ELEMENT_ARRAY_BUFFER","_ol_webgl$FLOAT","Helper","$ol$webgl$Helper","_ol_webgl_Helper$computeAttributesStride","$ol$webgl$PaletteTexture","PostProcessingPass","$ol$webgl$PostProcessingPass","RenderTarget","$ol$webgl$RenderTarget","_ol_webgl$STATIC_DRAW","STREAM_DRAW","_ol_webgl_ShaderBuilder$ShaderBuilder","_ol_webgl_ShaderBuilder$parseLiteralStyle","$ol$webgl$TileTexture","_ol_webgl$getContext","getSupportedExtensions","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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"}